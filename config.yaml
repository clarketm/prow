plank:
  job_url_template: 'https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/{{if eq .Spec.Type "presubmit"}}pr-logs/pull{{else if eq .Spec.Type "batch"}}pr-logs/pull{{else}}logs{{end}}{{if ne .Spec.Refs.Org ""}}{{if ne .Spec.Refs.Org "kubernetes"}}/{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}{{else if ne .Spec.Refs.Repo "kubernetes"}}/{{.Spec.Refs.Repo}}{{end}}{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/'
  report_template: '[Full PR test history](https://k8s-gubernator.appspot.com/pr/{{if eq .Spec.Refs.Org "kubernetes"}}{{if eq .Spec.Refs.Repo "kubernetes"}}{{else}}{{.Spec.Refs.Repo}}/{{end}}{{else}}{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}/{{end}}{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}). [Your PR dashboard](https://k8s-gubernator.appspot.com/pr/{{with index .Spec.Refs.Pulls 0}}{{.Author}}{{end}}). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/{{.Spec.Refs.Org}}/{{.Spec.Refs.Repo}}/issues?q=is:issue+is:open) when you hit one in your PR.'
  pod_pending_timeout: 60m

sinker:
  resync_period: 1m
  max_prowjob_age: 48h
  max_pod_age: 30m

deck:
  tide_update_period: 1s
  hidden_repos:
  - kubernetes-security
  - GoogleCloudPlatform/k8s-tpu-operator

prowjob_namespace: default
pod_namespace: test-pods
log_level: info

branch-protection:
  orgs:
    kubernetes:
      require-contexts:
      - cla/linuxfoundation
      repos:
        community:
          protect-by-default: true
        test-infra:
          protect-by-default: true
    kubernetes-sigs:
      protect-by-default: true
      require-contexts:
      - cla/linuxfoundation
    kubernetes-sig-testing:
      repos:
        frameworks:
          protect-by-default: true
          require-contexts:
          - continuous-integration/travis-ci
          - cla/linuxfoundation

tide:
  queries:
  - repos:
    - kubeflow/community
    - kubeflow/examples
    - kubeflow/kubeflow
    - kubeflow/testing
    - kubeflow/tf-operator
    labels:
    - lgtm
    - approved
    missingLabels:
    - do-not-merge
    - do-not-merge/hold
    - do-not-merge/work-in-progress
    - needs-ok-to-test
    - needs-rebase
  - repos:
    - kubernetes/charts
    - kubernetes/cluster-registry
    - kubernetes/community
    - kubernetes/contrib
    - kubernetes/dashboard
    - kubernetes/features
    - kubernetes/federation
    - kubernetes/gengo
    - kubernetes/heapster
    - kubernetes/ingress-nginx
    - kubernetes/kops
    - kubernetes/kubernetes-template-project
    - kubernetes/kube-state-metrics
    - kubernetes/kube-deploy
    - kubernetes/minikube
    - kubernetes/repo-infra
    - kubernetes/sig-release
    - kubernetes/steering
    - kubernetes/test-infra
    - kubernetes/website
    labels:
    - lgtm
    - approved
    - "cncf-cla: yes"
    missingLabels:
    - do-not-merge
    - do-not-merge/blocked-paths
    - do-not-merge/cherry-pick-not-approved
    - do-not-merge/hold
    - do-not-merge/release-note-label-needed
    - do-not-merge/work-in-progress
    - needs-ok-to-test
    - needs-rebase
  - repos:
    - kubernetes/kubectl
    labels:
    - "cncf-cla: yes"
    missingLabels:
    - do-not-merge/hold
    - do-not-merge/work-in-progress
    reviewApprovedRequired: true
  - repos:
    - kubernetes-sig-testing/frameworks
    labels:
    - lgtm
    - approved
    - "cncf-cla: yes"
    missingLabels:
    - do-not-merge/hold
    - do-not-merge/work-in-progress
    - needs-ok-to-test
  - repos:
    - GoogleCloudPlatform/k8s-tpu-operator
    labels:
    - lgtm
    - approved
    missingLabels:
    - do-not-merge/hold
    - do-not-merge/work-in-progress
  merge_method:
    kubeflow: squash
    kubernetes/charts: squash
    kubernetes/dashboard: squash
    kubernetes/website: squash
  target_url: https://prow.k8s.io/tide.html

push_gateway:
  endpoint: pushgateway

presets:
# credential presets
- labels:
    preset-service-account: true
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/service-account/service-account.json
  volumes:
  - name: service
    secret:
      secretName: service-account
  volumeMounts:
  - name: service
    mountPath: /etc/service-account
    readOnly: true
- labels:
    preset-gke-alpha-service: true
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/service-account/service-account.json
  volumes:
  - name: service
    secret:
      secretName: gke-alpha-service-account
  volumeMounts:
  - name: service
    mountPath: /etc/service-account
    readOnly: true
- labels:
    preset-k8s-ssh: true
  env:
  - name: USER
    value: prow
  - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
    value: /etc/ssh-key-secret/ssh-private
  - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
    value: /etc/ssh-key-secret/ssh-public
  volumes:
  - name: ssh
    secret:
      defaultMode: 0400
      secretName: ssh-key-secret
  volumeMounts:
  - name: ssh
    mountPath: /etc/ssh-key-secret
    readOnly: true
- labels:
    preset-aws-ssh: true
  env:
  - name: USER
    value: prow
  - name: JENKINS_AWS_SSH_PRIVATE_KEY_FILE
    value: /etc/aws-ssh/aws-ssh-private
  - name: JENKINS_AWS_SSH_PUBLIC_KEY_FILE
    value: /etc/aws-ssh/aws-ssh-public
  volumes:
  - name: aws-ssh
    secret:
      defaultMode: 0400
      secretName: aws-ssh-key-secret
  volumeMounts:
  - name: aws-ssh
    mountPath: /etc/aws-ssh
    readOnly: true
- labels:
    preset-aws-credential: true
  env:
  - name: JENKINS_AWS_CREDENTIALS_FILE
    value: /etc/aws-cred/credentials
  volumes:
  - name: aws-cred
    secret:
      defaultMode: 0400
      secretName: aws-cred-new
  volumeMounts:
  - name: aws-cred
    mountPath: /etc/aws-cred
    readOnly: true
- labels:
    preset-cadvisor-docker-credential: true
  env:
  - name: DOCKER_USER
    value: /etc/cadvisor-cred/username
  - name: DOCKER_PASSWORD
    value: /etc/cadvisor-cred/password
  volumes:
  - name: cadvisor-cred
    secret:
      defaultMode: 0400
      secretName: cadvisor-docker-credential
  volumeMounts:
  - name: cadvisor-cred
    mountPath: /etc/cadvisor-cred
    readOnly: true
# storage / caching presets
- labels:
    preset-bazel-scratch-dir: true
  env:
  - name: TEST_TMPDIR
    value: /bazel-scratch/.cache/bazel
  volumes:
  - name: bazel-scratch
    emptyDir: {}
  volumeMounts:
  - name: bazel-scratch
    mountPath: /bazel-scratch/.cache


presubmits:
  google/cadvisor:
  - name: pull-cadvisor-e2e
    agent: kubernetes
    always_run: true
    context: pull-cadvisor-e2e
    rerun_command: "/test pull-cadvisor-e2e"
    trigger: "(?m)^/test( all| pull-cadvisor-e2e),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/kubernetes"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--"
        - "--node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config.yaml --test-suite=cadvisor"
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

  kubeflow/examples:
  - name: kubeflow-examples-presubmit
    context: kubeflow-examples-presubmit
    agent: kubernetes
    always_run: true         # Run for every PR, or only when requested.
    rerun_command: "/test kubeflow-examples-presubmit"
    trigger: "(?m)^/test( all| kubeflow-examples-presubmit),?(\\s+|$)"
    branches:
    - master
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/kubeflow-ci/test-worker:latest
        imagePullPolicy: Always

  kubeflow/kubeflow:
  - name: kubeflow-presubmit
    context: kubeflow-presubmit
    agent: kubernetes
    always_run: true         # Run for every PR, or only when requested.
    rerun_command: "/test kubeflow-presubmit"
    trigger: "(?m)^/test( all| kubeflow-presubmit),?(\\s+|$)"
    branches:
    - master
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/kubeflow-ci/test-worker:latest
        imagePullPolicy: Always

  kubeflow/reporting:
  - name: kubeflow-reporting-presubmit
    context: kubeflow-reporting-presubmit
    agent: kubernetes
    always_run: true         # Run for every PR, or only when requested.
    rerun_command: "/test kubeflow-reporting-presubmit"
    trigger: "(?m)^/test( all| kubeflow-reporting-presubmit),?(\\s+|$)"
    branches:
    - master
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/kubeflow-ci/test-worker:latest
        imagePullPolicy: Always

  kubeflow/testing:
  - name: kubeflow-testing-presubmit
    context: kubeflow-testing-presubmit
    agent: kubernetes
    always_run: true         # Run for every PR, or only when requested.
    rerun_command: "/test kubeflow-testing-presubmit"
    trigger: "(?m)^/test( all| kubeflow-testing-presubmit),?(\\s+|$)"
    branches:
    - master
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/kubeflow-ci/test-worker:latest
        imagePullPolicy: Always

  kubeflow/tf-operator:
  - name: kubeflow-tf-operator-presubmit
    context: kubeflow-tf-operator-presubmit
    agent: kubernetes
    always_run: true         # Run for every PR, or only when requested.
    rerun_command: "/test kubeflow-tf-operator-presubmit"
    trigger: "(?m)^/test( all| kubeflow-tf-operator-presubmit),?(\\s+|$)"
    branches:
    - master
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/kubeflow-ci/test-worker:latest
        imagePullPolicy: Always

  kubernetes/charts:
  - name: pull-charts-e2e
    agent: kubernetes
    always_run: true
    context: pull-charts-e2e
    rerun_command: "/test pull-charts-e2e"
    trigger: "(?m)^/test( all| pull-charts-e2e),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        args:
        - "--repo=k8s.io/charts=$(PULL_REFS)"
        - "--root=/go/src/"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph
  kubernetes/community:
  - name: pull-community-verify
    agent: kubernetes
    context: pull-community-verify
    branches:
    - master
    rerun_command: "/test pull-community-verify"
    trigger: "(?m)^/test( all| pull-community-verify),?(\\s+|$)"
    always_run: true
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  kubernetes/dns:
  - name: pull-kubernetes-dns-test
    agent: kubernetes
    context: pull-kubernetes-dns-test
    branches:
    - master
    rerun_command: "/test pull-kubernetes-dns-test"
    trigger: "(?m)^/test( all| pull-kubernetes-dns-test),?(\\s+|$)"
    always_run: true
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  kubernetes/ingress-gce:
  - name: pull-ingress-gce-test
    agent: kubernetes
    context: pull-ingress-gce-test
    branches:
    - master
    rerun_command: "/test pull-ingress-gce-test"
    trigger: "(?m)^/test( all| pull-ingress-gce-test),?(\\s+|$)"
    always_run: true
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        args:
        - "--repo=k8s.io/ingress-gce=$(PULL_REFS)"
        - "--root=/go/src/"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph
  GoogleCloudPlatform/k8s-multicluster-ingress:
  - name: pull-kubernetes-multicluster-ingress-test
    agent: kubernetes
    context: pull-kubernetes-multicluster-ingress-test
    branches:
    - master
    rerun_command: "/test pull-kubernetes-multicluster-ingress-test"
    trigger: "(?m)^/test( all| pull-kubernetes-multicluster-ingress-test),?(\\s+|$)"
    always_run: true
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=github.com/GoogleCloudPlatform/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"
        volumeMounts:
        - name: coveralls
          mountPath: /etc/coveralls-token
          readOnly: true
      volumes:
      - name: coveralls
        secret:
          secretName: k8s-multicluster-ingress-coveralls-token
  kubernetes/federation:
  - name: pull-federation-bazel-test
    agent: kubernetes
    context: pull-federation-bazel-test
    always_run: true
    rerun_command: "/test pull-federation-bazel-test"
    trigger: "(?m)^/test( all| pull-federation-bazel-test),?(\\s+|$)"
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.8.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--test=//... -//build/... -//vendor/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--build_tag_filters=-e2e"
        - "--test-args=--test_tag_filters=-e2e"
        - "--test-args=--flaky_test_attempts=3"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: pull-federation-e2e-gce
    agent: kubernetes
    always_run: true
    context: pull-federation-e2e-gce
    rerun_command: "/test pull-federation-e2e-gce"
    trigger: "(?m)^/test( all| pull-federation-e2e-gce),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        args:
        - "--repo=k8s.io/federation=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--root=/go/src/"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"
        - "--timeout=110"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph
  - name: pull-federation-verify
    agent: kubernetes
    context: pull-federation-verify
    rerun_command: "/test pull-federation-verify"
    trigger: "/test( all| pull-federation-verify)"
    always_run: true
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  kubernetes/heapster:
  - name: pull-heapster-e2e
    agent: kubernetes
    always_run: true
    context: pull-heapster-e2e
    rerun_command: "/test pull-heapster-e2e"
    trigger: "(?m)^/test( all| pull-heapster-e2e),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        securityContext:
          privileged: true
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph
  kubernetes/kube-deploy:
  - name: pull-kube-deploy-build
    agent: kubernetes
    always_run: true
    context: pull-kube-deploy-build
    rerun_command: "/test pull-kube-deploy-build"
    trigger: "/test( all| pull-kube-deploy-build)"
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"
  - name: pull-kube-deploy-test
    agent: kubernetes
    always_run: true
    context: pull-kube-deploy-test
    rerun_command: "/test pull-kube-deploy-test"
    trigger: "/test( all| pull-kube-deploy-test)"
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kube-deploy:v20180212-214c99406
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"
  kubernetes/kops:
  - name: pull-kops-bazel-build
    agent: kubernetes
    context: pull-kops-bazel-build
    branches:
    - master
    always_run: true
    skip_report: false
    rerun_command: "/test pull-kops-bazel-build"
    trigger: "(?m)^/test( all| pull-kops-bazel-build),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-bazel-scratch-dir: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-experimental
        args:
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--scenario=kubernetes_execute_bazel"
        - "--" # end bootstrap args, scenario args below
        - "make"
        - "bazel-build"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "2Gi"

  - name: pull-kops-bazel-test
    agent: kubernetes
    context: pull-kops-bazel-test
    branches:
    - master
    always_run: true
    skip_report: false
    rerun_command: "/test pull-kops-bazel-test"
    trigger: "(?m)^/test( all| pull-kops-bazel-test),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-bazel-scratch-dir: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-experimental
        args:
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--scenario=kubernetes_execute_bazel"
        - "--" # end bootstrap args, scenario args below
        - "make"
        - "bazel-test"
        env:
        - name: BAZEL_REMOTE_CACHE_ENABLED
          value: "true"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "2Gi"

  - name: pull-kops-e2e-kubernetes-aws
    agent: kubernetes
    always_run: true
    context: pull-kops-e2e-kubernetes-aws
    rerun_command: "/test pull-kops-e2e-kubernetes-aws"
    trigger: "(?m)^/test( all| pull-kops-e2e-kubernetes-aws),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-aws-ssh: true
      preset-aws-credential: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        args:
        - --root=/go/src
        - --clean
        - --job=$(JOB_NAME)
        - --repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --timeout=90
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph

  - name: pull-kops-verify-bazel
    agent: kubernetes
    context: pull-kops-verify-bazel
    branches:
    - master
    rerun_command: "/test pull-kops-verify-bazel"
    trigger: "(?m)^/test( all| pull-kops-verify-bazel),?(\\s+|$)"
    always_run: true
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"

  - name: pull-kops-verify-boilerplate
    agent: kubernetes
    context: pull-kops-verify-boilerplate
    branches:
    - master
    rerun_command: "/test pull-kops-verify-boilerplate"
    trigger: "(?m)^/test( all| pull-kops-verify-boilerplate),?(\\s+|$)"
    always_run: true
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"

  - name: pull-kops-verify-gofmt
    agent: kubernetes
    context: pull-kops-verify-gofmt
    branches:
    - master
    rerun_command: "/test pull-kops-verify-gofmt"
    trigger: "(?m)^/test( all| pull-kops-verify-gofmt),?(\\s+|$)"
    always_run: true
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"

  - name: pull-kops-verify-govet
    agent: kubernetes
    context: pull-kops-verify-govet
    branches:
    - master
    rerun_command: "/test pull-kops-verify-govet"
    trigger: "(?m)^/test( all| pull-kops-verify-govet),?(\\s+|$)"
    always_run: true
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"

  - name: pull-kops-verify-packages
    agent: kubernetes
    context: pull-kops-verify-packages
    branches:
    - master
    rerun_command: "/test pull-kops-verify-packages"
    trigger: "(?m)^/test( all| pull-kops-verify-packages),?(\\s+|$)"
    always_run: true
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"

  kubernetes/cluster-registry:
  - name: pull-cluster-registry-bazel
    agent: kubernetes
    context: pull-cluster-registry-bazel
    always_run: true
    rerun_command: "/test pull-cluster-registry-bazel"
    trigger: "(?m)^/test( all| pull-cluster-registry-bazel),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-bazel-scratch-dir: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.10
        args:
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        env:
        - name: BAZEL_REMOTE_CACHE_ENABLED
          value: "true"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "2Gi"
  - name: pull-cluster-registry-verify-bazel
    agent: kubernetes
    context: pull-cluster-registry-verify-bazel
    always_run: true
    rerun_command: "/test pull-cluster-registry-verify-bazel"
    trigger: "(?m)^/test( all| pull-cluster-registry-verify-bazel),?(\\s+|$)"
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.8.1
        args:
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "2Gi"
  - name: pull-cluster-registry-verify-gensrc
    agent: kubernetes
    context: pull-cluster-registry-verify-gensrc
    always_run: true
    rerun_command: "/test pull-cluster-registry-verify-gensrc"
    trigger: "(?m)^/test( all| pull-cluster-registry-verify-gensrc),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
      preset-bazel-scratch-dir: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        args:
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "2Gi"
  - name: pull-cluster-registry-verify-gosrc
    agent: kubernetes
    context: pull-cluster-registry-verify-gosrc
    always_run: true
    rerun_command: "/test pull-cluster-registry-verify-gosrc"
    trigger: "(?m)^/test( all| pull-cluster-registry-verify-gosrc),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.8
        args:
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--root=/go/src"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        env:
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "2Gi"
  containerd/cri-containerd:
  - name: pull-cri-containerd-build
    agent: kubernetes
    always_run: true
    context: pull-cri-containerd-build
    rerun_command: "/test pull-cri-containerd-build"
    trigger: "(?m)^/test( all| pull-cri-containerd-build),?(\\s+|$)"
    branches:
    - master
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-experimental
        args:
        - "--repo=github.com/containerd/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
    run_after_success:
    - name: pull-cri-containerd-node-e2e
      agent: kubernetes
      branches:
      - master
      always_run: true
      skip_report: false
      max_concurrency: 8
      context: pull-cri-containerd-node-e2e
      rerun_command: "/test pull-cri-containerd-node-e2e"
      trigger: "(?m)^/test( all| pull-cri-containerd-node-e2e),?(\\s+|$)"
      labels:
        preset-service-account: true
        preset-k8s-ssh: true
      spec:
        containers:
        - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
          args:
          - --root=/go/src
          - "--clean"
          - "--git-cache=/root/.cache/git"
          - "--job=$(JOB_NAME)"
          - "--repo=k8s.io/kubernetes"
          - "--repo=github.com/containerd/$(REPO_NAME)=$(PULL_REFS)"
          - "--service-account=/etc/service-account/service-account.json"
          - "--upload=gs://kubernetes-jenkins/pr-logs"
          - "--timeout=90"
          - "--"
          - "--node-args=--image-config-file=test/e2e_node/image-config.yaml --image-config-dir=$GOPATH/src/github.com/containerd/cri-containerd --node-env=PULL_REFS=$(PULL_REFS)"
          volumeMounts:
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
        volumes:
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0
  - name: pull-cri-containerd-verify
    agent: kubernetes
    always_run: true
    context: pull-cri-containerd-verify
    rerun_command: "/test pull-cri-containerd-verify"
    trigger: "(?m)^/test( all| pull-cri-containerd-verify),?(\\s+|$)"
    branches:
    - master
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-experimental
        args:
        - "--repo=github.com/containerd/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"

  kubernetes/kubernetes:
  - name: pull-kubernetes-bazel-build
    agent: kubernetes
    context: pull-kubernetes-bazel-build
    always_run: true
    rerun_command: "/test pull-kubernetes-bazel-build"
    trigger: "(?m)^/test( all| pull-kubernetes-bazel-build),?(\\s+|$)"
    skip_branches:
    - release-1.6 # doesn't have BUILD files under //vendor/k8s.io
    - release-1.7 # different target set
    - release-1.8 # different target set
    - release-1.9 # need to cherry pick back https://github.com/kubernetes/kubernetes/pull/59251, possibly others
    labels:
      preset-service-account: true
      preset-bazel-scratch-dir: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        # TODO(bentheelder): eliminate the "git caching" junk
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
    run_after_success:
    - name: pull-kubernetes-e2e-kubeadm-gce
      agent: kubernetes
      context: pull-kubernetes-e2e-kubeadm-gce
      max_concurrency: 8
      skip_report: true
      run_if_changed: '^(cmd/kubeadm|build/debs).*$'
      rerun_command: "/test pull-kubernetes-e2e-kubeadm-gce"
      trigger: "(?m)^/test pull-kubernetes-e2e-kubeadm-gce,?(\\s+|$)"
      skip_branches:
      - release-1.6 # doesn't have BUILD files under //vendor/k8s.io
      - release-1.7 # different target set
      - release-1.8 # different target set
      - release-1.9 # need to cherry pick back https://github.com/kubernetes/kubernetes/pull/59251, possibly others
      labels:
        preset-service-account: true
        preset-k8s-ssh: true
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--upload=gs://kubernetes-jenkins/pr-logs"
          - "--git-cache=/root/.cache/git"
          - "--timeout=75"
          - "--clean"
          env:
          - name: SKIP_RELEASE_VALIDATION # See: https://github.com/kubernetes/kubernetes/pull/50391
            value: true
          volumeMounts:
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
        volumes:
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0
  - name: pull-kubernetes-bazel-build
    agent: kubernetes
    context: pull-kubernetes-bazel-build
    always_run: true
    rerun_command: "/test pull-kubernetes-bazel-build"
    trigger: "(?m)^/test( all| pull-kubernetes-bazel-build),?(\\s+|$)"
    branches:
    - release-1.9
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.8.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
    run_after_success:
    - name: pull-kubernetes-e2e-kubeadm-gce
      agent: kubernetes
      context: pull-kubernetes-e2e-kubeadm-gce
      max_concurrency: 8
      skip_report: true
      run_if_changed: '^(cmd/kubeadm|build/debs).*$'
      rerun_command: "/test pull-kubernetes-e2e-kubeadm-gce"
      trigger: "(?m)^/test pull-kubernetes-e2e-kubeadm-gce,?(\\s+|$)"
      branches:
      - release-1.9
      labels:
        preset-service-account: true
        preset-k8s-ssh: true
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--upload=gs://kubernetes-jenkins/pr-logs"
          - "--git-cache=/root/.cache/git"
          - "--timeout=75"
          - "--clean"
          env:
          - name: SKIP_RELEASE_VALIDATION # See: https://github.com/kubernetes/kubernetes/pull/50391
            value: true
          volumeMounts:
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
        volumes:
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0
  - name: pull-kubernetes-bazel-build
    agent: kubernetes
    context: pull-kubernetes-bazel-build
    always_run: true
    rerun_command: "/test pull-kubernetes-bazel-build"
    trigger: "(?m)^/test( all| pull-kubernetes-bazel-build),?(\\s+|$)"
    branches:
    - release-1.7
    - release-1.8
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.6.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--build=//cmd/... //pkg/... //federation/... //plugin/... //third_party/... //examples/... //test/... //vendor/k8s.io/..."
        - "--release=//build/release-tars"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
    run_after_success:
    - name: pull-kubernetes-e2e-kubeadm-gce
      agent: kubernetes
      context: pull-kubernetes-e2e-kubeadm-gce
      max_concurrency: 8
      skip_report: true
      run_if_changed: '^(cmd/kubeadm|build/debs).*$'
      rerun_command: "/test pull-kubernetes-e2e-kubeadm-gce"
      trigger: "(?m)^/test pull-kubernetes-e2e-kubeadm-gce,?(\\s+|$)"
      branches:
      - release-1.7
      - release-1.8
      labels:
        preset-service-account: true
        preset-k8s-ssh: true
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--upload=gs://kubernetes-jenkins/pr-logs"
          - "--git-cache=/root/.cache/git"
          - "--timeout=75"
          - "--clean"
          env:
          - name: SKIP_RELEASE_VALIDATION # See: https://github.com/kubernetes/kubernetes/pull/50391
            value: true
          volumeMounts:
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
        volumes:
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0

  - name: pull-kubernetes-bazel-build-canary
    agent: kubernetes
    context: pull-kubernetes-bazel-build-canary
    always_run: false
    rerun_command: "/test pull-kubernetes-bazel-build-canary"
    trigger: "(?m)^/test pull-kubernetes-bazel-build-canary,?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-bazel-scratch-dir: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:latest-experimental
        imagePullPolicy: Always
        args:
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--scenario=kubernetes_bazel"
        - "--" # end bootstrap args, scenario args below
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        env:
        - name: BAZEL_REMOTE_CACHE_ENABLED
          value: "true"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"

  - name: pull-kubernetes-bazel-test
    agent: kubernetes
    context: pull-kubernetes-bazel-test
    always_run: true
    rerun_command: "/test pull-kubernetes-bazel-test"
    trigger: "(?m)^/test( all| pull-kubernetes-bazel-test),?(\\s+|$)"
    skip_branches:
    - release-1.6 # doesn't have BUILD files under //vendor/k8s.io
    - release-1.7 # different set of targets
    - release-1.8 # different set of targets
    - release-1.9 # need to cherry pick back https://github.com/kubernetes/kubernetes/pull/59251, possibly others
    labels:
      preset-service-account: true
      preset-bazel-scratch-dir: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--test=//... -//build/... -//vendor/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--config=unit"
        - "--test-args=--build_tag_filters=-e2e,-integration"
        - "--test-args=--test_tag_filters=-e2e,-integration"
        - "--test-args=--flaky_test_attempts=3"
        env:
        - name: BAZEL_REMOTE_CACHE_ENABLED
          value: "true"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        # TODO(bentheelder): eliminate the "git caching" junk
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: pull-kubernetes-bazel-test
    agent: kubernetes
    context: pull-kubernetes-bazel-test
    always_run: true
    rerun_command: "/test pull-kubernetes-bazel-test"
    trigger: "(?m)^/test( all| pull-kubernetes-bazel-test),?(\\s+|$)"
    branches:
    - release-1.9
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.8.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--test=//... -//build/... -//vendor/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--build_tag_filters=-e2e,-integration"
        - "--test-args=--test_tag_filters=-e2e,-integration"
        - "--test-args=--flaky_test_attempts=3"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: pull-kubernetes-bazel-test
    agent: kubernetes
    context: pull-kubernetes-bazel-test
    always_run: true
    rerun_command: "/test pull-kubernetes-bazel-test"
    trigger: "(?m)^/test( all| pull-kubernetes-bazel-test),?(\\s+|$)"
    branches:
    - release-1.7
    - release-1.8
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.6.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--test=//cmd/... //pkg/... //federation/... //plugin/... //third_party/... //hack/... //vendor/k8s.io/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--test_tag_filters=-integration"
        - "--test-args=--flaky_test_attempts=3"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

  - name: pull-kubernetes-bazel-test-canary
    agent: kubernetes
    context: pull-kubernetes-bazel-test-canary
    always_run: false
    rerun_command: "/test pull-kubernetes-bazel-test-canary"
    trigger: "(?m)^/test pull-kubernetes-bazel-test-canary,?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-bazel-scratch-dir: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:latest-experimental
        imagePullPolicy: Always
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--scenario=kubernetes_execute_bazel"
        - "--" # end bootstrap args, scenario args below
        - "make"
        - "bazel-test"
        env:
        - name: BAZEL_REMOTE_CACHE_ENABLED
          value: "true"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"

  - name: pull-kubernetes-bazel-test-integration-canary
    agent: kubernetes
    context: pull-kubernetes-bazel-test-integration-canary
    always_run: false
    rerun_command: "/test pull-kubernetes-bazel-test-integration-canary"
    trigger: "(?m)^/test pull-kubernetes-bazel-test-integration-canary,?(\\s+|$)"
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:latest-experimental
        imagePullPolicy: Always
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--test=//test/integration/..."
        - "--test-args=--config=integration"
        env:
        - name: BAZEL_REMOTE_CACHE_ENABLED
          value: "true"
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

  - name: pull-kubernetes-cross
    agent: kubernetes
    context: pull-kubernetes-cross
    rerun_command: "/test pull-kubernetes-cross"
    trigger: "(?m)^/test pull-kubernetes-cross,?(\\s+|$)"
    run_if_changed: '^(build\/|hack\/lib\/)|(Makefile)|(.*_(windows|linux|osx|unsupported)(_test)?\.go)$'
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        - name: docker-graph
          mountPath: /docker-graph
        - name: var-lib-docker
          mountPath: /var/lib/docker
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            cpu: 7
            memory: "41Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph
      - name: var-lib-docker
        emptyDir: {}
  - name: pull-kubernetes-cross-prow
    agent: kubernetes
    context: pull-kubernetes-cross-prow
    rerun_command: "/test pull-kubernetes-cross-prow"
    trigger: "(?m)^/test pull-kubernetes-cross-prow,?(\\s+|$)"
    always_run: false
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bootstrap:latest
        imagePullPolicy: Always
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        - name: docker-graph
          mountPath: /docker-graph
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            cpu: 7
            memory: "41Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph
  - name: pull-kubernetes-e2e-containerd-gce
    agent: kubernetes
    context: pull-kubernetes-e2e-containerd-gce
    rerun_command: "/test pull-kubernetes-e2e-containerd-gce"
    trigger: "(?m)^/test pull-kubernetes-e2e-containerd-gce,?(\\s+|$)"
    always_run: false
    branches:
    - master
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - args:
        - --root=/go/src
        - --repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --repo=github.com/containerd/cri-containerd
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --git-cache=/root/.cache/git
        - --clean
        - --timeout=90
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        env:
        # Make Bazel use shared cache for its root
        # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        volumeMounts:
        - mountPath: /root/.cache
          name: cache-ssd
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - hostPath:
          path: /mnt/disks/ssd0
        name: cache-ssd
  - name: pull-kubernetes-e2e-gce
    agent: kubernetes
    context: pull-kubernetes-e2e-gce
    rerun_command: "/test pull-kubernetes-e2e-gce"
    trigger: "(?m)^/test (all|pull-kubernetes-e2e-gce),?(\\s+|$)"
    always_run: true
    # TODO(bentheelder): enforce this pattern (skip all releases) or implement
    # something better like https://github.com/kubernetes/test-infra/pull/4918
    skip_branches:
    - release-1.6 # per-release image
    - release-1.7 # per-release image
    - release-1.8 # per-release image
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - args:
        - --root=/go/src
        - --repo=k8s.io/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --git-cache=/root/.cache/git
        - --clean
        - --timeout=90
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        env:
        # Make Bazel use shared cache for its root
        # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        volumeMounts:
        - mountPath: /root/.cache
          name: cache-ssd
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - hostPath:
          path: /mnt/disks/ssd0
        name: cache-ssd
  - name: pull-kubernetes-e2e-gce
    agent: kubernetes
    context: pull-kubernetes-e2e-gce
    rerun_command: "/test pull-kubernetes-e2e-gce"
    trigger: "(?m)^/test (all|pull-kubernetes-e2e-gce),?(\\s+|$)"
    always_run: true
    branches:
    - release-1.8
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - args:
        - --root=/go/src
        - --repo=k8s.io/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --git-cache=/root/.cache/git
        - --clean
        - --timeout=90
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        env:
        # Make Bazel use shared cache for its root
        # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.8
        volumeMounts:
        - mountPath: /root/.cache
          name: cache-ssd
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - hostPath:
          path: /mnt/disks/ssd0
        name: cache-ssd
  - name: pull-kubernetes-e2e-gce
    agent: kubernetes
    context: pull-kubernetes-e2e-gce
    rerun_command: "/test pull-kubernetes-e2e-gce"
    trigger: "(?m)^/test (all|pull-kubernetes-e2e-gce),?(\\s+|$)"
    always_run: true
    branches:
    - release-1.7
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - args:
        - --root=/go/src
        - --repo=k8s.io/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --git-cache=/root/.cache/git
        - --clean
        - --timeout=90
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        env:
        # Make Bazel use shared cache for its root
        # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.7
        volumeMounts:
        - mountPath: /root/.cache
          name: cache-ssd
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - hostPath:
          path: /mnt/disks/ssd0
        name: cache-ssd

  - name: pull-kubernetes-e2e-gce-device-plugin-gpu
    agent: kubernetes
    skip_branches:
    - release-1.6  # not supported
    - release-1.7  # not supported
    - release-1.8  # per-release image
    always_run: true
    skip_report: false
    max_concurrency: 12
    context: pull-kubernetes-e2e-gce-device-plugin-gpu
    rerun_command: "/test pull-kubernetes-e2e-gce-device-plugin-gpu"
    trigger: "(?m)^/test( all| pull-kubernetes-e2e-gce-device-plugin-gpu),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: pull-kubernetes-e2e-gce-device-plugin-gpu
    agent: kubernetes
    branches:
    - release-1.8
    always_run: true
    skip_report: false
    max_concurrency: 12
    context: pull-kubernetes-e2e-gce-device-plugin-gpu
    rerun_command: "/test pull-kubernetes-e2e-gce-device-plugin-gpu"
    trigger: "(?m)^/test( all| pull-kubernetes-e2e-gce-device-plugin-gpu),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.8
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

  - name: pull-kubernetes-e2e-gke
    agent: kubernetes
    context: pull-kubernetes-e2e-gke
    rerun_command: "/test pull-kubernetes-e2e-gke"
    trigger: "(?m)^/test pull-kubernetes-e2e-gke,?(\\s+|$)"
    always_run: false
    run_if_changed: '^(cluster/gce|cluster/addons).*$'
    # TODO(bentheelder): enforce this pattern (skip all releases) or implement
    # something better like https://github.com/kubernetes/test-infra/pull/4918
    skip_branches:
    - release-1.6 # per-release image
    - release-1.7 # per-release image
    - release-1.8 # per-release image
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - args:
        - --root=/go/src
        - --repo=k8s.io/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --git-cache=/root/.cache/git
        - --clean
        - --timeout=90
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        env:
        # Make Bazel use shared cache for its root
        # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        volumeMounts:
        - mountPath: /root/.cache
          name: cache-ssd
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - hostPath:
          path: /mnt/disks/ssd0
        name: cache-ssd
  - name: pull-kubernetes-e2e-gke
    agent: kubernetes
    context: pull-kubernetes-e2e-gke
    rerun_command: "/test pull-kubernetes-e2e-gke"
    trigger: "(?m)^/test pull-kubernetes-e2e-gke,?(\\s+|$)"
    always_run: false
    run_if_changed: '^(cluster/gce|cluster/addons).*$'
    branches:
    - release-1.8
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - args:
        - --root=/go/src
        - --repo=k8s.io/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --git-cache=/root/.cache/git
        - --clean
        - --timeout=90
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        env:
        # Make Bazel use shared cache for its root
        # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.8
        volumeMounts:
        - mountPath: /root/.cache
          name: cache-ssd
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - hostPath:
          path: /mnt/disks/ssd0
        name: cache-ssd
  - name: pull-kubernetes-e2e-gke
    agent: kubernetes
    context: pull-kubernetes-e2e-gke
    rerun_command: "/test pull-kubernetes-e2e-gke"
    trigger: "(?m)^/test pull-kubernetes-e2e-gke,?(\\s+|$)"
    always_run: false
    run_if_changed: '^(cluster/gce|cluster/addons).*$'
    branches:
    - release-1.7
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - args:
        - --root=/go/src
        - --repo=k8s.io/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --git-cache=/root/.cache/git
        - --clean
        - --timeout=90
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        env:
        # Make Bazel use shared cache for its root
        # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.7
        volumeMounts:
        - mountPath: /root/.cache
          name: cache-ssd
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - hostPath:
          path: /mnt/disks/ssd0
        name: cache-ssd

  - name: pull-kubernetes-e2e-gke-device-plugin-gpu
    agent: kubernetes
    skip_branches:
    - release-1.6  # not supported
    - release-1.7  # not supported
    - release-1.8  # per-release image
    always_run: false
    skip_report: false
    max_concurrency: 1
    context: pull-kubernetes-e2e-gke-device-plugin-gpu
    rerun_command: "/test pull-kubernetes-e2e-gke-device-plugin-gpu"
    trigger: "(?m)^/test pull-kubernetes-e2e-gke-device-plugin-gpu,?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: pull-kubernetes-e2e-gke-device-plugin-gpu
    agent: kubernetes
    branches:
    - release-1.8  # per-release image
    always_run: false
    skip_report: false
    max_concurrency: 1
    context: pull-kubernetes-e2e-gke-device-plugin-gpu
    rerun_command: "/test pull-kubernetes-e2e-gke-device-plugin-gpu"
    trigger: "(?m)^/test pull-kubernetes-e2e-gke-device-plugin-gpu,?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.8
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

  - name: pull-kubernetes-e2e-kops-aws
    agent: kubernetes
    skip_branches:
    - release-1.6  # runs on Jenkins?
    - release-1.7  # per-release image
    - release-1.8  # per-release image
    max_concurrency: 12
    always_run: true
    context: pull-kubernetes-e2e-kops-aws
    rerun_command: "/test pull-kubernetes-e2e-kops-aws"
    trigger: "(?m)^/test( all| pull-kubernetes-e2e-kops-aws),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-aws-ssh: true
      preset-aws-credential: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=75"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: pull-kubernetes-e2e-kops-aws
    agent: kubernetes
    branches:
    - release-1.8
    max_concurrency: 12
    always_run: true
    context: pull-kubernetes-e2e-kops-aws
    rerun_command: "/test pull-kubernetes-e2e-kops-aws"
    trigger: "(?m)^/test( all| pull-kubernetes-e2e-kops-aws),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-aws-ssh: true
      preset-aws-credential: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.8
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=75"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: pull-kubernetes-e2e-kops-aws
    agent: kubernetes
    branches:
    - release-1.7
    max_concurrency: 12
    always_run: true
    context: pull-kubernetes-e2e-kops-aws
    rerun_command: "/test pull-kubernetes-e2e-kops-aws"
    trigger: "(?m)^/test( all| pull-kubernetes-e2e-kops-aws),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-aws-ssh: true
      preset-aws-credential: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.7
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=75"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: pull-kubernetes-integration
    agent: kubernetes
    always_run: true
    context: pull-kubernetes-integration
    rerun_command: "/test pull-kubernetes-integration"
    trigger: "(?m)^/test( all| pull-kubernetes-integration),?(\\s+|$)"
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
        args:
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=60"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            cpu: 4
      volumes:
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph
  - name: pull-kubernetes-integration-prow
    agent: kubernetes
    always_run: false
    context: pull-kubernetes-integration-prow
    rerun_command: "/test pull-kubernetes-integration-prow"
    trigger: "(?m)^/test pull-kubernetes-integration-prow,?(\\s+|$)"
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bootstrap:latest
        imagePullPolicy: Always
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=60"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        - name: docker-graph
          mountPath: /docker-graph
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            cpu: 4
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph
  - name: pull-kubernetes-kubemark-e2e-gce
    agent: kubernetes
    always_run: true
    max_concurrency: 12
    skip_branches:
    - release-1.6  # runs on Jenkins?
    - release-1.7  # per-release image
    - release-1.8  # per-release image
    context: pull-kubernetes-kubemark-e2e-gce
    rerun_command: "/test pull-kubernetes-kubemark-e2e-gce"
    trigger: "(?m)^/test( all| pull-kubernetes-kubemark-e2e-gce),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=110"
        env:
        # TODO(krzyzacy): Figure out bazel built kubemark image
        # - name: KUBEMARK_BAZEL_BUILD
        # value: "y"
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        - name: docker-graph
          mountPath: /docker-graph
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph
  - name: pull-kubernetes-kubemark-e2e-gce
    agent: kubernetes
    always_run: true
    max_concurrency: 12
    branches:
    - release-1.8
    context: pull-kubernetes-kubemark-e2e-gce
    rerun_command: "/test pull-kubernetes-kubemark-e2e-gce"
    trigger: "(?m)^/test( all| pull-kubernetes-kubemark-e2e-gce),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.8
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=110"
        env:
        # TODO(krzyzacy): Figure out bazel built kubemark image
        # - name: KUBEMARK_BAZEL_BUILD
        # value: "y"
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        - name: docker-graph
          mountPath: /docker-graph
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph
  - name: pull-kubernetes-kubemark-e2e-gce
    agent: kubernetes
    always_run: true
    max_concurrency: 12
    branches:
    - release-1.7
    context: pull-kubernetes-kubemark-e2e-gce
    rerun_command: "/test pull-kubernetes-kubemark-e2e-gce"
    trigger: "(?m)^/test( all| pull-kubernetes-kubemark-e2e-gce),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.7
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=110"
        env:
        # TODO(krzyzacy): Figure out bazel built kubemark image
        # - name: KUBEMARK_BAZEL_BUILD
        # value: "y"
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        - name: docker-graph
          mountPath: /docker-graph
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph

  - name: pull-kubernetes-kubemark-e2e-gce-big
    agent: kubernetes
    always_run: false
    max_concurrency: 12
    skip_branches:
    - release-1.6  # not supported
    - release-1.7  # per-release image
    - release-1.8  # per-release image
    context: pull-kubernetes-kubemark-e2e-gce-big
    rerun_command: "/test pull-kubernetes-kubemark-e2e-gce-big"
    trigger: "(?m)^/test pull-kubernetes-kubemark-e2e-gce-big,?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=120"
        env:
        # TODO(krzyzacy): Figure out bazel built kubemark image
        # - name: KUBEMARK_BAZEL_BUILD
        # value: "y"
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        - name: docker-graph
          mountPath: /docker-graph
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph
  - name: pull-kubernetes-kubemark-e2e-gce-big
    agent: kubernetes
    always_run: false
    max_concurrency: 12
    branches:
    - release-1.8
    context: pull-kubernetes-kubemark-e2e-gce-big
    rerun_command: "/test pull-kubernetes-kubemark-e2e-gce-big"
    trigger: "(?m)^/test pull-kubernetes-kubemark-e2e-gce-big,?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.8
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=120"
        env:
        # TODO(krzyzacy): Figure out bazel built kubemark image
        # - name: KUBEMARK_BAZEL_BUILD
        # value: "y"
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        - name: docker-graph
          mountPath: /docker-graph
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph
  - name: pull-kubernetes-kubemark-e2e-gce-big
    agent: kubernetes
    always_run: false
    max_concurrency: 12
    branches:
    - release-1.7
    context: pull-kubernetes-kubemark-e2e-gce-big
    rerun_command: "/test pull-kubernetes-kubemark-e2e-gce-big"
    trigger: "(?m)^/test pull-kubernetes-kubemark-e2e-gce-big,?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.7
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=120"
        env:
        # TODO(krzyzacy): Figure out bazel built kubemark image
        # - name: KUBEMARK_BAZEL_BUILD
        # value: "y"
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        - name: docker-graph
          mountPath: /docker-graph
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph

  - name: pull-kubernetes-kubemark-e2e-gce-scale
    agent: kubernetes
    always_run: false
    max_concurrency: 1
    branches:
    - master
    context: pull-kubernetes-kubemark-e2e-gce-scale
    rerun_command: "/test pull-kubernetes-kubemark-e2e-gce-scale"
    trigger: "(?m)^/test pull-kubernetes-kubemark-e2e-gce-scale,?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=1220"
        env:
        # TODO(krzyzacy): Figure out bazel built kubemark image
        # - name: KUBEMARK_BAZEL_BUILD
        # value: "y"
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        - name: docker-graph
          mountPath: /docker-graph
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph

  - name: pull-kubernetes-local-e2e
    agent: kubernetes
    branches:
    - master
    always_run: false
    skip_report: false
    max_concurrency: 8
    context: pull-kubernetes-local-e2e
    rerun_command: "/test pull-kubernetes-local-e2e"
    trigger: "(?m)^/test pull-kubernetes-local-e2e,?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=140"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0/
  - name: pull-kubernetes-node-e2e
    agent: kubernetes
    skip_branches:
    - release-1.6  # per-release image
    - release-1.7  # per-release image
    - release-1.8  # per-release image
    always_run: true
    max_concurrency: 12
    context: pull-kubernetes-node-e2e
    rerun_command: "/test pull-kubernetes-node-e2e"
    trigger: "(?m)^/test( all| pull-kubernetes-node-e2e),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        - "--" # end bootstrap args, scenario args below
        - "--node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config.yaml"
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: pull-kubernetes-node-e2e
    agent: kubernetes
    branches:
    - release-1.8
    always_run: true
    max_concurrency: 12
    context: pull-kubernetes-node-e2e
    rerun_command: "/test pull-kubernetes-node-e2e"
    trigger: "(?m)^/test( all| pull-kubernetes-node-e2e),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.8
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        - "--" # end bootstrap args, scenario args below
        - "--node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config.yaml"
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: pull-kubernetes-node-e2e
    agent: kubernetes
    branches:
    - release-1.7
    always_run: true
    max_concurrency: 12
    context: pull-kubernetes-node-e2e
    rerun_command: "/test pull-kubernetes-node-e2e"
    trigger: "(?m)^/test( all| pull-kubernetes-node-e2e),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.7
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        - "--" # end bootstrap args, scenario args below
        - "--node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config-1-7.yaml"
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

  - name: pull-kubernetes-node-e2e-containerd
    agent: kubernetes
    branches:
    - master
    always_run: false
    max_concurrency: 8
    context: pull-kubernetes-node-e2e-containerd
    rerun_command: "/test pull-kubernetes-node-e2e-containerd"
    trigger: "(?m)^/test pull-kubernetes-node-e2e-containerd,?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=github.com/containerd/cri-containerd"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: pull-kubernetes-typecheck
    agent: kubernetes
    always_run: true
    skip_report: false
    context: pull-kubernetes-typecheck
    rerun_command: "/test pull-kubernetes-typecheck"
    trigger: "(?m)^/test( all| pull-kubernetes-typecheck),?(\\s+|$)"
    skip_branches:
    - release-1.6 # doesn't have typecheck
    - release-1.7 # doesn't have typecheck
    - release-1.8 # doesn't have typecheck
    - release-1.9 # doesn't have typecheck
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        args:
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--root=/go/src"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=75"

  - name: pull-kubernetes-verify
    agent: kubernetes
    always_run: true
    context: pull-kubernetes-verify
    rerun_command: "/test pull-kubernetes-verify"
    trigger: "(?m)^/test( all| pull-kubernetes-verify),?(\\s+|$)"
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
        args:
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=75"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            cpu: 4
      volumes:
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph
  - name: pull-kubernetes-verify-prow
    agent: kubernetes
    always_run: false
    context: pull-kubernetes-verify-prow
    rerun_command: "/test pull-kubernetes-verify-prow"
    trigger: "(?m)^/test pull-kubernetes-verify-prow,?(\\s+|$)"
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bootstrap:latest
        imagePullPolicy: Always
        args:
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=75"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            cpu: 4
      volumes:
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph
  kubernetes-security/kubernetes:
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-bazel-build
    labels:
      preset-bazel-scratch-dir: "true"
      preset-service-account: "true"
    max_concurrency: 0
    name: pull-security-kubernetes-bazel-build
    rerun_command: /test pull-security-kubernetes-bazel-build
    run_after_success:
    - agent: kubernetes
      always_run: false
      cluster: security
      context: pull-security-kubernetes-e2e-kubeadm-gce
      labels:
        preset-k8s-ssh: "true"
        preset-service-account: "true"
      max_concurrency: 8
      name: pull-security-kubernetes-e2e-kubeadm-gce
      rerun_command: /test pull-security-kubernetes-e2e-kubeadm-gce
      run_if_changed: ^(cmd/kubeadm|build/debs).*$
      skip_branches:
      - release-1.6
      - release-1.7
      - release-1.8
      - release-1.9
      skip_report: true
      spec:
        containers:
        - args:
          - --ssh=/etc/ssh-security/ssh-security
          - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
          - --upload=gs://kubernetes-security-prow/pr-logs
          - --timeout=75
          - --clean
          - --
          - --gcs-shared=gs://kubernetes-security-prow/bazel
          env:
          - name: SKIP_RELEASE_VALIDATION
            value: "true"
          image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
          name: ""
          resources: {}
          volumeMounts:
          - mountPath: /etc/ssh-security
            name: ssh-security
        volumes:
        - name: ssh-security
          secret:
            defaultMode: 256
            secretName: ssh-security
      trigger: (?m)^/test pull-security-kubernetes-e2e-kubeadm-gce,?(\s+|$)
    run_if_changed: ""
    skip_branches:
    - release-1.6
    - release-1.7
    - release-1.8
    - release-1.9
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --
        - --build=//... -//vendor/...
        - --release=//build/release-tars
        - --gcs=gs://kubernetes-security-prow/ci/pull-security-kubernetes-bazel-build
        - --gcs-shared=gs://kubernetes-security-prow/bazel
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( all| pull-security-kubernetes-bazel-build),?(\s+|$)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.9
    cluster: security
    context: pull-security-kubernetes-bazel-build
    labels:
      preset-service-account: "true"
    max_concurrency: 0
    name: pull-security-kubernetes-bazel-build
    rerun_command: /test pull-security-kubernetes-bazel-build
    run_after_success:
    - agent: kubernetes
      always_run: false
      branches:
      - release-1.9
      cluster: security
      context: pull-security-kubernetes-e2e-kubeadm-gce
      labels:
        preset-k8s-ssh: "true"
        preset-service-account: "true"
      max_concurrency: 8
      name: pull-security-kubernetes-e2e-kubeadm-gce
      rerun_command: /test pull-security-kubernetes-e2e-kubeadm-gce
      run_if_changed: ^(cmd/kubeadm|build/debs).*$
      skip_report: true
      spec:
        containers:
        - args:
          - --ssh=/etc/ssh-security/ssh-security
          - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
          - --upload=gs://kubernetes-security-prow/pr-logs
          - --timeout=75
          - --clean
          - --
          - --gcs-shared=gs://kubernetes-security-prow/bazel
          env:
          - name: SKIP_RELEASE_VALIDATION
            value: "true"
          image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
          name: ""
          resources: {}
          volumeMounts:
          - mountPath: /etc/ssh-security
            name: ssh-security
        volumes:
        - name: ssh-security
          secret:
            defaultMode: 256
            secretName: ssh-security
      trigger: (?m)^/test pull-security-kubernetes-e2e-kubeadm-gce,?(\s+|$)
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --
        - --build=//... -//vendor/...
        - --release=//build/release-tars
        - --gcs=gs://kubernetes-security-prow/ci/pull-security-kubernetes-bazel-build
        - --gcs-shared=gs://kubernetes-security-prow/bazel
        image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.8.1
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( all| pull-security-kubernetes-bazel-build),?(\s+|$)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.7
    - release-1.8
    cluster: security
    context: pull-security-kubernetes-bazel-build
    labels:
      preset-service-account: "true"
    max_concurrency: 0
    name: pull-security-kubernetes-bazel-build
    rerun_command: /test pull-security-kubernetes-bazel-build
    run_after_success:
    - agent: kubernetes
      always_run: false
      branches:
      - release-1.7
      - release-1.8
      cluster: security
      context: pull-security-kubernetes-e2e-kubeadm-gce
      labels:
        preset-k8s-ssh: "true"
        preset-service-account: "true"
      max_concurrency: 8
      name: pull-security-kubernetes-e2e-kubeadm-gce
      rerun_command: /test pull-security-kubernetes-e2e-kubeadm-gce
      run_if_changed: ^(cmd/kubeadm|build/debs).*$
      skip_report: true
      spec:
        containers:
        - args:
          - --ssh=/etc/ssh-security/ssh-security
          - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
          - --upload=gs://kubernetes-security-prow/pr-logs
          - --timeout=75
          - --clean
          - --
          - --gcs-shared=gs://kubernetes-security-prow/bazel
          env:
          - name: SKIP_RELEASE_VALIDATION
            value: "true"
          image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
          name: ""
          resources: {}
          volumeMounts:
          - mountPath: /etc/ssh-security
            name: ssh-security
        volumes:
        - name: ssh-security
          secret:
            defaultMode: 256
            secretName: ssh-security
      trigger: (?m)^/test pull-security-kubernetes-e2e-kubeadm-gce,?(\s+|$)
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --
        - --build=//cmd/... //pkg/... //federation/... //plugin/... //third_party/... //examples/... //test/... //vendor/k8s.io/...
        - --release=//build/release-tars
        - --gcs=gs://kubernetes-security-prow/ci/pull-security-kubernetes-bazel-build
        - --gcs-shared=gs://kubernetes-security-prow/bazel
        image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.6.1
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( all| pull-security-kubernetes-bazel-build),?(\s+|$)
  - agent: kubernetes
    always_run: false
    cluster: security
    context: pull-security-kubernetes-bazel-build-canary
    labels:
      preset-bazel-scratch-dir: "true"
      preset-service-account: "true"
    max_concurrency: 0
    name: pull-security-kubernetes-bazel-build-canary
    rerun_command: /test pull-security-kubernetes-bazel-build-canary
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --scenario=kubernetes_bazel
        - --
        - --build=//... -//vendor/...
        - --release=//build/release-tars
        - --gcs=gs://kubernetes-security-prow/ci/pull-security-kubernetes-bazel-build-canary
        - --gcs-shared=gs://kubernetes-security-prow/bazel
        image: gcr.io/k8s-testimages/kubekins-e2e:latest-experimental
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test pull-security-kubernetes-bazel-build-canary,?(\s+|$)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-bazel-test
    labels:
      preset-bazel-scratch-dir: "true"
      preset-service-account: "true"
    max_concurrency: 0
    name: pull-security-kubernetes-bazel-test
    rerun_command: /test pull-security-kubernetes-bazel-test
    run_if_changed: ""
    skip_branches:
    - release-1.6
    - release-1.7
    - release-1.8
    - release-1.9
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --
        - --test=//... -//build/... -//vendor/...
        - --manual-test=//hack:verify-all
        - --test-args=--config=unit
        - --test-args=--build_tag_filters=-e2e,-integration
        - --test-args=--test_tag_filters=-e2e,-integration
        - --test-args=--flaky_test_attempts=3
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( all| pull-security-kubernetes-bazel-test),?(\s+|$)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.9
    cluster: security
    context: pull-security-kubernetes-bazel-test
    labels:
      preset-service-account: "true"
    max_concurrency: 0
    name: pull-security-kubernetes-bazel-test
    rerun_command: /test pull-security-kubernetes-bazel-test
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --
        - --test=//... -//build/... -//vendor/...
        - --manual-test=//hack:verify-all
        - --test-args=--build_tag_filters=-e2e,-integration
        - --test-args=--test_tag_filters=-e2e,-integration
        - --test-args=--flaky_test_attempts=3
        image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.8.1
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( all| pull-security-kubernetes-bazel-test),?(\s+|$)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.7
    - release-1.8
    cluster: security
    context: pull-security-kubernetes-bazel-test
    labels:
      preset-service-account: "true"
    max_concurrency: 0
    name: pull-security-kubernetes-bazel-test
    rerun_command: /test pull-security-kubernetes-bazel-test
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --
        - --test=//cmd/... //pkg/... //federation/... //plugin/... //third_party/... //hack/... //vendor/k8s.io/...
        - --manual-test=//hack:verify-all
        - --test-args=--test_tag_filters=-integration
        - --test-args=--flaky_test_attempts=3
        image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.6.1
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( all| pull-security-kubernetes-bazel-test),?(\s+|$)
  - agent: kubernetes
    always_run: false
    cluster: security
    context: pull-security-kubernetes-bazel-test-canary
    labels:
      preset-bazel-scratch-dir: "true"
      preset-service-account: "true"
    max_concurrency: 0
    name: pull-security-kubernetes-bazel-test-canary
    rerun_command: /test pull-security-kubernetes-bazel-test-canary
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --scenario=kubernetes_execute_bazel
        - --
        - make
        - bazel-test
        image: gcr.io/k8s-testimages/kubekins-e2e:latest-experimental
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test pull-security-kubernetes-bazel-test-canary,?(\s+|$)
  - agent: kubernetes
    always_run: false
    cluster: security
    context: pull-security-kubernetes-bazel-test-integration-canary
    labels:
      preset-service-account: "true"
    max_concurrency: 0
    name: pull-security-kubernetes-bazel-test-integration-canary
    rerun_command: /test pull-security-kubernetes-bazel-test-integration-canary
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --
        - --test=//test/integration/...
        - --test-args=--config=integration
        image: gcr.io/k8s-testimages/kubekins-e2e:latest-experimental
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test pull-security-kubernetes-bazel-test-integration-canary,?(\s+|$)
  - agent: kubernetes
    always_run: false
    cluster: security
    context: pull-security-kubernetes-cross
    labels:
      preset-service-account: "true"
    max_concurrency: 0
    name: pull-security-kubernetes-cross
    rerun_command: /test pull-security-kubernetes-cross
    run_if_changed: ^(build\/|hack\/lib\/)|(Makefile)|(.*_(windows|linux|osx|unsupported)(_test)?\.go)$
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
        name: ""
        resources:
          requests:
            cpu: "7"
            memory: 41Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/lib/docker
          name: var-lib-docker
        - mountPath: /etc/ssh-security
          name: ssh-security
        - mountPath: /docker-graph
          name: auto-generated-docker-graph-volume-mount
      volumes:
      - emptyDir: {}
        name: var-lib-docker
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
      - emptyDir: {}
        name: auto-generated-docker-graph-volume-mount
    trigger: (?m)^/test pull-security-kubernetes-cross,?(\s+|$)
  - agent: kubernetes
    always_run: false
    cluster: security
    context: pull-security-kubernetes-cross-prow
    labels:
      preset-service-account: "true"
    max_concurrency: 0
    name: pull-security-kubernetes-cross-prow
    rerun_command: /test pull-security-kubernetes-cross-prow
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        image: gcr.io/k8s-testimages/bootstrap:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: "7"
            memory: 41Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
        - mountPath: /docker-graph
          name: auto-generated-docker-graph-volume-mount
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
      - emptyDir: {}
        name: auto-generated-docker-graph-volume-mount
    trigger: (?m)^/test pull-security-kubernetes-cross-prow,?(\s+|$)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-e2e-containerd-gce
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 0
    name: pull-security-kubernetes-e2e-containerd-gce
    rerun_command: /test pull-security-kubernetes-e2e-containerd-gce
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --repo=github.com/containerd/cri-containerd
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --clean
        - --timeout=90
        - --
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-containerd-gce
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        name: ""
        resources: {}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test pull-security-kubernetes-e2e-containerd-gce,?(\s+|$)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-e2e-gce
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 0
    name: pull-security-kubernetes-e2e-gce
    rerun_command: /test pull-security-kubernetes-e2e-gce
    run_if_changed: ""
    skip_branches:
    - release-1.6
    - release-1.7
    - release-1.8
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --clean
        - --timeout=90
        - --
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test (all|pull-security-kubernetes-e2e-gce),?(\s+|$)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.8
    cluster: security
    context: pull-security-kubernetes-e2e-gce
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 0
    name: pull-security-kubernetes-e2e-gce
    rerun_command: /test pull-security-kubernetes-e2e-gce
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --clean
        - --timeout=90
        - --
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.8
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test (all|pull-security-kubernetes-e2e-gce),?(\s+|$)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.7
    cluster: security
    context: pull-security-kubernetes-e2e-gce
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 0
    name: pull-security-kubernetes-e2e-gce
    rerun_command: /test pull-security-kubernetes-e2e-gce
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --clean
        - --timeout=90
        - --
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.7
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test (all|pull-security-kubernetes-e2e-gce),?(\s+|$)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-e2e-gce-device-plugin-gpu
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-e2e-gce-device-plugin-gpu
    rerun_command: /test pull-security-kubernetes-e2e-gce-device-plugin-gpu
    run_if_changed: ""
    skip_branches:
    - release-1.6
    - release-1.7
    - release-1.8
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce-device-plugin-gpu
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( all| pull-security-kubernetes-e2e-gce-device-plugin-gpu),?(\s+|$)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.8
    cluster: security
    context: pull-security-kubernetes-e2e-gce-device-plugin-gpu
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-e2e-gce-device-plugin-gpu
    rerun_command: /test pull-security-kubernetes-e2e-gce-device-plugin-gpu
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gce-device-plugin-gpu
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.8
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( all| pull-security-kubernetes-e2e-gce-device-plugin-gpu),?(\s+|$)
  - agent: kubernetes
    always_run: false
    cluster: security
    context: pull-security-kubernetes-e2e-gke
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 0
    name: pull-security-kubernetes-e2e-gke
    rerun_command: /test pull-security-kubernetes-e2e-gke
    run_if_changed: ^(cluster/gce|cluster/addons).*$
    skip_branches:
    - release-1.6
    - release-1.7
    - release-1.8
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --clean
        - --timeout=90
        - --
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gke
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test pull-security-kubernetes-e2e-gke,?(\s+|$)
  - agent: kubernetes
    always_run: false
    branches:
    - release-1.8
    cluster: security
    context: pull-security-kubernetes-e2e-gke
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 0
    name: pull-security-kubernetes-e2e-gke
    rerun_command: /test pull-security-kubernetes-e2e-gke
    run_if_changed: ^(cluster/gce|cluster/addons).*$
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --clean
        - --timeout=90
        - --
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gke
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.8
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test pull-security-kubernetes-e2e-gke,?(\s+|$)
  - agent: kubernetes
    always_run: false
    branches:
    - release-1.7
    cluster: security
    context: pull-security-kubernetes-e2e-gke
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 0
    name: pull-security-kubernetes-e2e-gke
    rerun_command: /test pull-security-kubernetes-e2e-gke
    run_if_changed: ^(cluster/gce|cluster/addons).*$
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --repo=github.com/kubernetes-security/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --clean
        - --timeout=90
        - --
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gke
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.7
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test pull-security-kubernetes-e2e-gke,?(\s+|$)
  - agent: kubernetes
    always_run: false
    cluster: security
    context: pull-security-kubernetes-e2e-gke-device-plugin-gpu
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 1
    name: pull-security-kubernetes-e2e-gke-device-plugin-gpu
    rerun_command: /test pull-security-kubernetes-e2e-gke-device-plugin-gpu
    run_if_changed: ""
    skip_branches:
    - release-1.6
    - release-1.7
    - release-1.8
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gke-device-plugin-gpu
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test pull-security-kubernetes-e2e-gke-device-plugin-gpu,?(\s+|$)
  - agent: kubernetes
    always_run: false
    branches:
    - release-1.8
    cluster: security
    context: pull-security-kubernetes-e2e-gke-device-plugin-gpu
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 1
    name: pull-security-kubernetes-e2e-gke-device-plugin-gpu
    rerun_command: /test pull-security-kubernetes-e2e-gke-device-plugin-gpu
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-gke-device-plugin-gpu
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.8
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test pull-security-kubernetes-e2e-gke-device-plugin-gpu,?(\s+|$)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-e2e-kops-aws
    labels:
      preset-aws-credential: "true"
      preset-aws-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-e2e-kops-aws
    rerun_command: /test pull-security-kubernetes-e2e-kops-aws
    run_if_changed: ""
    skip_branches:
    - release-1.6
    - release-1.7
    - release-1.8
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=75
        - --
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-kops-aws
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( all| pull-security-kubernetes-e2e-kops-aws),?(\s+|$)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.8
    cluster: security
    context: pull-security-kubernetes-e2e-kops-aws
    labels:
      preset-aws-credential: "true"
      preset-aws-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-e2e-kops-aws
    rerun_command: /test pull-security-kubernetes-e2e-kops-aws
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=75
        - --
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-kops-aws
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.8
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( all| pull-security-kubernetes-e2e-kops-aws),?(\s+|$)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.7
    cluster: security
    context: pull-security-kubernetes-e2e-kops-aws
    labels:
      preset-aws-credential: "true"
      preset-aws-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-e2e-kops-aws
    rerun_command: /test pull-security-kubernetes-e2e-kops-aws
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=75
        - --
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-e2e-kops-aws
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.7
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( all| pull-security-kubernetes-e2e-kops-aws),?(\s+|$)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-integration
    labels:
      preset-service-account: "true"
    max_concurrency: 0
    name: pull-security-kubernetes-integration
    rerun_command: /test pull-security-kubernetes-integration
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=60
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
        name: ""
        resources:
          requests:
            cpu: "4"
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
        - mountPath: /docker-graph
          name: auto-generated-docker-graph-volume-mount
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
      - emptyDir: {}
        name: auto-generated-docker-graph-volume-mount
    trigger: (?m)^/test( all| pull-security-kubernetes-integration),?(\s+|$)
  - agent: kubernetes
    always_run: false
    cluster: security
    context: pull-security-kubernetes-integration-prow
    labels:
      preset-service-account: "true"
    max_concurrency: 0
    name: pull-security-kubernetes-integration-prow
    rerun_command: /test pull-security-kubernetes-integration-prow
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=60
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        image: gcr.io/k8s-testimages/bootstrap:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: "4"
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
        - mountPath: /docker-graph
          name: auto-generated-docker-graph-volume-mount
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
      - emptyDir: {}
        name: auto-generated-docker-graph-volume-mount
    trigger: (?m)^/test pull-security-kubernetes-integration-prow,?(\s+|$)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-kubemark-e2e-gce
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-kubemark-e2e-gce
    rerun_command: /test pull-security-kubernetes-kubemark-e2e-gce
    run_if_changed: ""
    skip_branches:
    - release-1.6
    - release-1.7
    - release-1.8
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=110
        - --
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-kubemark-e2e-gce
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
        - mountPath: /docker-graph
          name: auto-generated-docker-graph-volume-mount
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
      - emptyDir: {}
        name: auto-generated-docker-graph-volume-mount
    trigger: (?m)^/test( all| pull-security-kubernetes-kubemark-e2e-gce),?(\s+|$)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.8
    cluster: security
    context: pull-security-kubernetes-kubemark-e2e-gce
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-kubemark-e2e-gce
    rerun_command: /test pull-security-kubernetes-kubemark-e2e-gce
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=110
        - --
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-kubemark-e2e-gce
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.8
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
        - mountPath: /docker-graph
          name: auto-generated-docker-graph-volume-mount
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
      - emptyDir: {}
        name: auto-generated-docker-graph-volume-mount
    trigger: (?m)^/test( all| pull-security-kubernetes-kubemark-e2e-gce),?(\s+|$)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.7
    cluster: security
    context: pull-security-kubernetes-kubemark-e2e-gce
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-kubemark-e2e-gce
    rerun_command: /test pull-security-kubernetes-kubemark-e2e-gce
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=110
        - --
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-kubemark-e2e-gce
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.7
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
        - mountPath: /docker-graph
          name: auto-generated-docker-graph-volume-mount
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
      - emptyDir: {}
        name: auto-generated-docker-graph-volume-mount
    trigger: (?m)^/test( all| pull-security-kubernetes-kubemark-e2e-gce),?(\s+|$)
  - agent: kubernetes
    always_run: false
    cluster: security
    context: pull-security-kubernetes-kubemark-e2e-gce-big
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-kubemark-e2e-gce-big
    rerun_command: /test pull-security-kubernetes-kubemark-e2e-gce-big
    run_if_changed: ""
    skip_branches:
    - release-1.6
    - release-1.7
    - release-1.8
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=120
        - --
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-kubemark-e2e-gce-big
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
        - mountPath: /docker-graph
          name: auto-generated-docker-graph-volume-mount
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
      - emptyDir: {}
        name: auto-generated-docker-graph-volume-mount
    trigger: (?m)^/test pull-security-kubernetes-kubemark-e2e-gce-big,?(\s+|$)
  - agent: kubernetes
    always_run: false
    branches:
    - release-1.8
    cluster: security
    context: pull-security-kubernetes-kubemark-e2e-gce-big
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-kubemark-e2e-gce-big
    rerun_command: /test pull-security-kubernetes-kubemark-e2e-gce-big
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=120
        - --
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-kubemark-e2e-gce-big
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.8
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
        - mountPath: /docker-graph
          name: auto-generated-docker-graph-volume-mount
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
      - emptyDir: {}
        name: auto-generated-docker-graph-volume-mount
    trigger: (?m)^/test pull-security-kubernetes-kubemark-e2e-gce-big,?(\s+|$)
  - agent: kubernetes
    always_run: false
    branches:
    - release-1.7
    cluster: security
    context: pull-security-kubernetes-kubemark-e2e-gce-big
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-kubemark-e2e-gce-big
    rerun_command: /test pull-security-kubernetes-kubemark-e2e-gce-big
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=120
        - --
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-kubemark-e2e-gce-big
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.7
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
        - mountPath: /docker-graph
          name: auto-generated-docker-graph-volume-mount
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
      - emptyDir: {}
        name: auto-generated-docker-graph-volume-mount
    trigger: (?m)^/test pull-security-kubernetes-kubemark-e2e-gce-big,?(\s+|$)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-kubemark-e2e-gce-scale
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 1
    name: pull-security-kubernetes-kubemark-e2e-gce-scale
    rerun_command: /test pull-security-kubernetes-kubemark-e2e-gce-scale
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=k8s.io/release
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=1220
        - --
        - --stage=gs://kubernetes-security-prow/ci/pull-security-kubernetes-kubemark-e2e-gce-scale
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
        - mountPath: /docker-graph
          name: auto-generated-docker-graph-volume-mount
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
      - emptyDir: {}
        name: auto-generated-docker-graph-volume-mount
    trigger: (?m)^/test pull-security-kubernetes-kubemark-e2e-gce-scale,?(\s+|$)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-local-e2e
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 8
    name: pull-security-kubernetes-local-e2e
    rerun_command: /test pull-security-kubernetes-local-e2e
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=140
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        name: ""
        resources: {}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
        - mountPath: /docker-graph
          name: auto-generated-docker-graph-volume-mount
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
      - emptyDir: {}
        name: auto-generated-docker-graph-volume-mount
    trigger: (?m)^/test pull-security-kubernetes-local-e2e,?(\s+|$)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-node-e2e
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-node-e2e
    rerun_command: /test pull-security-kubernetes-node-e2e
    run_if_changed: ""
    skip_branches:
    - release-1.6
    - release-1.7
    - release-1.8
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config.yaml
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( all| pull-security-kubernetes-node-e2e),?(\s+|$)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.8
    cluster: security
    context: pull-security-kubernetes-node-e2e
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-node-e2e
    rerun_command: /test pull-security-kubernetes-node-e2e
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config.yaml
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.8
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( all| pull-security-kubernetes-node-e2e),?(\s+|$)
  - agent: kubernetes
    always_run: true
    branches:
    - release-1.7
    cluster: security
    context: pull-security-kubernetes-node-e2e
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 12
    name: pull-security-kubernetes-node-e2e
    rerun_command: /test pull-security-kubernetes-node-e2e
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        - --
        - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config-1-7.yaml
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.7
        name: ""
        resources:
          requests:
            memory: 6Gi
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( all| pull-security-kubernetes-node-e2e),?(\s+|$)
  - agent: kubernetes
    always_run: false
    branches:
    - master
    cluster: security
    context: pull-security-kubernetes-node-e2e-containerd
    labels:
      preset-k8s-ssh: "true"
      preset-service-account: "true"
    max_concurrency: 8
    name: pull-security-kubernetes-node-e2e-containerd
    rerun_command: /test pull-security-kubernetes-node-e2e-containerd
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --root=/go/src
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --repo=github.com/containerd/cri-containerd
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=90
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test pull-security-kubernetes-node-e2e-containerd,?(\s+|$)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-typecheck
    labels:
      preset-service-account: "true"
    max_concurrency: 0
    name: pull-security-kubernetes-typecheck
    rerun_command: /test pull-security-kubernetes-typecheck
    run_if_changed: ""
    skip_branches:
    - release-1.6
    - release-1.7
    - release-1.8
    - release-1.9
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --clean
        - --job=$(JOB_NAME)
        - --root=/go/src
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=75
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        name: ""
        resources: {}
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
    trigger: (?m)^/test( all| pull-security-kubernetes-typecheck),?(\s+|$)
  - agent: kubernetes
    always_run: true
    cluster: security
    context: pull-security-kubernetes-verify
    labels:
      preset-service-account: "true"
    max_concurrency: 0
    name: pull-security-kubernetes-verify
    rerun_command: /test pull-security-kubernetes-verify
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=75
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
        name: ""
        resources:
          requests:
            cpu: "4"
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
        - mountPath: /docker-graph
          name: auto-generated-docker-graph-volume-mount
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
      - emptyDir: {}
        name: auto-generated-docker-graph-volume-mount
    trigger: (?m)^/test( all| pull-security-kubernetes-verify),?(\s+|$)
  - agent: kubernetes
    always_run: false
    cluster: security
    context: pull-security-kubernetes-verify-prow
    labels:
      preset-service-account: "true"
    max_concurrency: 0
    name: pull-security-kubernetes-verify-prow
    rerun_command: /test pull-security-kubernetes-verify-prow
    run_if_changed: ""
    skip_report: false
    spec:
      containers:
      - args:
        - --ssh=/etc/ssh-security/ssh-security
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/kubernetes-security/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-security-prow/pr-logs
        - --timeout=75
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        image: gcr.io/k8s-testimages/bootstrap:latest
        imagePullPolicy: Always
        name: ""
        resources:
          requests:
            cpu: "4"
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/ssh-security
          name: ssh-security
        - mountPath: /docker-graph
          name: auto-generated-docker-graph-volume-mount
      volumes:
      - name: ssh-security
        secret:
          defaultMode: 256
          secretName: ssh-security
      - emptyDir: {}
        name: auto-generated-docker-graph-volume-mount
    trigger: (?m)^/test pull-security-kubernetes-verify-prow,?(\s+|$)
  kubernetes-sig-testing/frameworks:
  - name: pull-frameworks-test
    context: pull-frameworks-test
    agent: kubernetes
    branches:
    - master
    always_run: false # for initial testing of new job
    skip_report: true # for initial testing of new job
    trigger: "/test pull-frameworks-test"
    rerun_command: "/test pull-frameworks-test"
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"

  kubernetes/test-infra:
  - name: pull-test-infra-bazel
    agent: kubernetes
    context: pull-test-infra-bazel
    branches:
    - master
    always_run: true
    rerun_command: "/test pull-test-infra-bazel"
    trigger: "(?m)^/test( all| pull-test-infra-bazel),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-bazel-scratch-dir: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-experimental
        args:
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--scenario=kubernetes_execute_bazel"
        - "--" # end bootstrap args, scenario args below
        - "hack/build-then-unit.sh"
        env:
        - name: BAZEL_REMOTE_CACHE_ENABLED
          value: "true"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "2Gi"

  - name: pull-test-infra-bazel-canary
    agent: kubernetes
    context: pull-test-infra-bazel-canary
    always_run: false
    rerun_command: "/test pull-test-infra-bazel-canary"
    trigger: "(?m)^/test pull-test-infra-bazel-canary,?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-bazel-scratch-dir: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:latest-experimental
        imagePullPolicy: Always
        args:
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--scenario=kubernetes_execute_bazel"
        - "--" # end bootstrap args, scenario args below
        - "hack/build-then-unit.sh"
        env:
        - name: BAZEL_REMOTE_CACHE_ENABLED
          value: "true"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        resources:
          requests:
            memory: "2Gi"

  - name: pull-test-infra-gubernator
    agent: kubernetes
    context: pull-test-infra-gubernator
    branches:
    - master
    rerun_command: "/test pull-test-infra-gubernator"
    trigger: "(?m)^/test pull-test-infra-gubernator,?(\\s+|$)"
    run_if_changed: 'gubernator|prow/config.yaml'
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gubernator:0.4
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --service-account=/etc/service-account/service-account.json
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

  - name: pull-test-infra-lint
    agent: kubernetes
    context: pull-test-infra-lint
    always_run: true
    rerun_command: "/test pull-test-infra-lint"
    trigger: "(?m)^/test( all| pull-test-infra-lint),?(\\s+|$)"
    labels:
      preset-service-account: true
      preset-bazel-scratch-dir: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:latest-experimental
        imagePullPolicy: Always
        args:
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--scenario=kubernetes_bazel"
        - "--" # end bootstrap args, scenario args below
        - "--install=gubernator/test_requirements.txt"
        - "--test=//..."
        - "--test-args=--config=lint"
        env:
        - name: BAZEL_REMOTE_CACHE_ENABLED
          value: "true"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        resources:
          requests:
            memory: "2Gi"

  - name: pull-test-infra-verify-bazel
    agent: kubernetes
    context: pull-test-infra-verify-bazel
    branches:
    - master
    rerun_command: "/test pull-test-infra-verify-bazel"
    trigger: "(?m)^/test( all| pull-test-infra-verify-bazel),?(\\s+|$)"
    always_run: true
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"

  - name: pull-test-infra-verify-config
    agent: kubernetes
    context: pull-test-infra-verify-config
    branches:
    - master
    rerun_command: "/test pull-test-infra-verify-config"
    trigger: "/test pull-test-infra-verify-config"
    run_if_changed: '^prow/config.yaml$'
    labels:
      preset-service-account: true
      preset-bazel-scratch-dir: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-experimental
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"
        - --service-account=/etc/service-account/service-account.json
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "2Gi"

  - name: pull-test-infra-verify-deps
    agent: kubernetes
    context: pull-test-infra-verify-deps
    branches:
    - master
    rerun_command: "/test pull-test-infra-verify-deps"
    trigger: "/test pull-test-infra-verify-deps"
    run_if_changed: '^(Gopkg\.|^vendor/).*$'
    labels:
      preset-service-account: true
      preset-bazel-scratch-dir: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-experimental
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"
        - --service-account=/etc/service-account/service-account.json
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "2Gi"

  - name: pull-test-infra-verify-gofmt
    agent: kubernetes
    context: pull-test-infra-verify-gofmt
    branches:
    - master
    rerun_command: "/test pull-test-infra-verify-gofmt"
    trigger: "/test( all| pull-test-infra-verify-gofmt)"
    always_run: true
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"

  - name: pull-test-infra-verify-govet
    agent: kubernetes
    context: pull-test-infra-verify-govet
    branches:
    - master
    rerun_command: "/test pull-test-infra-verify-govet"
    trigger: "/test( all| pull-test-infra-verify-govet)"
    always_run: true
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"


  tensorflow/minigo:
  - name: tf-minigo-presubmit
    context: tf-minigo-presubmit
    agent: kubernetes
    always_run: true         # Run for every PR, or only when requested.
    rerun_command: "/test tf-minigo-presubmit"
    trigger: "(?m)^/test( all| tf-minigo-presubmit),?(\\s+|$)"
    branches:
    - master
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/minigo-testing/minigo-prow-harness-v2:latest
        imagePullPolicy: Always
        args:
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/tensorflow/minigo=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"

  GoogleCloudPlatform/k8s-tpu-operator:
  - name: pull-k8s-tpu-operator-unit
    context: pull-k8s-tpu-operator-unit
    agent: kubernetes
    cluster: k8s-tpu-operator
    always_run: true
    rerun_command: /test pull-k8s-tpu-operator-unit
    trigger: (?m)^/test( all| pull-k8s-tpu-operator-unit),?(\s+|$)
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
        args:
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/GoogleCloudPlatform/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://k8s-tpu-operator-prow/pr-logs
        - --timeout=60
        - --ssh=/etc/tpu-ssh/tpu-ssh
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/tpu-ssh
          name: tpu-ssh
        - mountPath: /docker-graph
          name: docker-graph
      volumes:
      - name: tpu-ssh
        secret:
          defaultMode: 0400
          secretName: tpu-ssh
      - name: docker-graph
        emptyDir: {}
  - name: pull-k8s-tpu-operator-verify
    context: pull-k8s-tpu-operator-verify
    agent: kubernetes
    cluster: k8s-tpu-operator
    always_run: true
    rerun_command: /test pull-k8s-tpu-operator-verify
    trigger: (?m)^/test( all| pull-k8s-tpu-operator-verify),?(\s+|$)
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
        args:
        - --clean
        - --job=$(JOB_NAME)
        - --repo=github.com/GoogleCloudPlatform/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://k8s-tpu-operator-prow/pr-logs
        - --timeout=60
        - --ssh=/etc/tpu-ssh/tpu-ssh
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/tpu-ssh
          name: tpu-ssh
        - mountPath: /docker-graph
          name: docker-graph
      volumes:
      - name: tpu-ssh
        secret:
          defaultMode: 0400
          secretName: tpu-ssh
      - name: docker-graph
        emptyDir: {}

postsubmits:
  kubeflow/examples:
  - name: kubeflow-examples-postsubmit
    agent: kubernetes
    branches:
    - master
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/kubeflow-ci/test-worker:latest
        imagePullPolicy: Always

  kubeflow/kubeflow:
  - name: kubeflow-postsubmit
    agent: kubernetes
    branches:
    - master
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/kubeflow-ci/test-worker:latest
        imagePullPolicy: Always

  kubeflow/reporting:
  - name: kubeflow-reporting-postsubmit
    agent: kubernetes
    branches:
    - master
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/kubeflow-ci/test-worker:latest
        imagePullPolicy: Always

  kubeflow/testing:
  - name: kubeflow-testing-postsubmit
    agent: kubernetes
    branches:
    - master
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/kubeflow-ci/test-worker:latest
        imagePullPolicy: Always

  kubeflow/tf-operator:
  - name: kubeflow-tf-operator-postsubmit
    agent: kubernetes
    branches:
    - master
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/kubeflow-ci/test-worker:latest
        imagePullPolicy: Always

  kubernetes/ingress-gce:
  - name: ci-ingress-gce-image-push
    agent: kubernetes
    branches:
    - master
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        args:
        - "--repo=k8s.io/ingress-gce=master"
        - "--root=/go/src/"
        - "--clean"
        - "--timeout=320"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph

  GoogleCloudPlatform/k8s-multicluster-ingress:
  - name: ci-kubemci-image-push
    agent: kubernetes
    branches:
    - master
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        args:
        - "--repo=k8s.io/test-infra=master"
        - "--root=/go/src/"
        - "--clean"
        - "--timeout=90"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph

  kubernetes/federation:
  - agent: kubernetes
    name: ci-federation-release
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.8.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
          # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "2Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

  kubernetes/kubernetes:
  - name: ci-kubernetes-bazel-build
    agent: kubernetes
    branches:
    - master
    labels:
      preset-service-account: true
      preset-bazel-scratch-dir: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
        args:
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--" # end bootstrap args, scenario args below
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        - "--gcs=gs://kubernetes-release-dev/ci"
        - "--version-suffix=-bazel"
        - "--publish-version=gs://kubernetes-release-dev/ci/latest-bazel.txt"
        env:
        - name: BAZEL_REMOTE_CACHE_ENABLED
          value: "true"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
    run_after_success:
    - name: ci-kubernetes-bazel-test
      agent: kubernetes
      labels:
        preset-service-account: true
        preset-bazel-scratch-dir: true
      spec:
        containers:
        - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
          args:
          - "--clean"
          - "--job=$(JOB_NAME)"
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--service-account=/etc/service-account/service-account.json"
          - "--upload=gs://kubernetes-jenkins/logs"
          - "--" # end bootstrap args, scenario args below
          - "--test=//... -//build/... -//vendor/..."
          - "--manual-test=//hack:verify-all"
          - "--test-args=--config=unit"
          - "--test-args=--build_tag_filters=-e2e,-integration"
          - "--test-args=--test_tag_filters=-e2e,-integration"
          - "--test-args=--flaky_test_attempts=3"
          env:
          - name: BAZEL_REMOTE_CACHE_ENABLED
            value: "true"
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "6Gi"
  - name: ci-kubernetes-bazel-build-1-10
    agent: kubernetes
    branches:
    - release-1.10
    labels:
      preset-service-account: true
      preset-bazel-scratch-dir: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.10
        args:
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--" # end bootstrap args, scenario args below
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        - "--gcs=gs://kubernetes-release-dev/ci"
        - "--version-suffix=-bazel"
        - "--publish-version=gs://kubernetes-release-dev/ci/latest-bazel-1.10.txt"
        env:
        - name: BAZEL_REMOTE_CACHE_ENABLED
          value: "true"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"

  - name: ci-kubernetes-bazel-build-1-7
    agent: kubernetes
    branches:
    - release-1.7
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.6.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--gcs=gs://kubernetes-release-dev/ci"
        - "--version-suffix=-bazel"
        - "--publish-version=gs://kubernetes-release-dev/ci/latest-bazel-1.7.txt"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        env:
        # Make Bazel use shared cache for its root
        # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
    run_after_success:
    - name: ci-kubernetes-bazel-test-1-7
      agent: kubernetes
      labels:
        preset-service-account: true
      spec:
        containers:
        - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.6.1
          args:
          - "--clean"
          - "--git-cache=/root/.cache/git"
          - "--job=$(JOB_NAME)"
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--service-account=/etc/service-account/service-account.json"
          - "--upload=gs://kubernetes-jenkins/logs"
          securityContext:
            privileged: true
          env:
          # Make Bazel use shared cache for its root
          # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
          - name: TEST_TMPDIR
            value: /root/.cache/bazel
          volumeMounts:
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
          resources:
            requests:
              memory: "6Gi"
        volumes:
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0
    - name: ci-kubernetes-e2e-kubeadm-gce-1-7
      agent: kubernetes
      labels:
        preset-service-account: true
        preset-k8s-ssh: true
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--clean"
          - "--git-cache=/root/.cache/git"
          - "--timeout=320"
          - "--upload=gs://kubernetes-jenkins/logs"
          volumeMounts:
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
        volumes:
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0

  - name: ci-kubernetes-bazel-build-1-8
    agent: kubernetes
    branches:
    - release-1.8
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.6.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--gcs=gs://kubernetes-release-dev/ci"
        - "--version-suffix=-bazel"
        - "--publish-version=gs://kubernetes-release-dev/ci/latest-bazel-1.8.txt"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        env:
        # Make Bazel use shared cache for its root
        # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
    run_after_success:
    - name: ci-kubernetes-bazel-test-1-8
      agent: kubernetes
      labels:
        preset-service-account: true
      spec:
        containers:
        - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.6.1
          args:
          - "--clean"
          - "--git-cache=/root/.cache/git"
          - "--job=$(JOB_NAME)"
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--service-account=/etc/service-account/service-account.json"
          - "--upload=gs://kubernetes-jenkins/logs"
          securityContext:
            privileged: true
          env:
          # Make Bazel use shared cache for its root
          # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
          - name: TEST_TMPDIR
            value: /root/.cache/bazel
          volumeMounts:
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
          resources:
            requests:
              memory: "6Gi"
        volumes:
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0
    - name: ci-kubernetes-e2e-kubeadm-gce-1-8
      agent: kubernetes
      labels:
        preset-service-account: true
        preset-k8s-ssh: true
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--clean"
          - "--git-cache=/root/.cache/git"
          - "--timeout=320"
          - "--upload=gs://kubernetes-jenkins/logs"
          volumeMounts:
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
        volumes:
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0
    - name: ci-kubernetes-e2e-kubeadm-gce-1-7-on-1-8
      agent: kubernetes
      labels:
        preset-service-account: true
        preset-k8s-ssh: true
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--clean"
          - "--git-cache=/root/.cache/git"
          - "--timeout=320"
          - "--upload=gs://kubernetes-jenkins/logs"
          volumeMounts:
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
        volumes:
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0

  - name: ci-kubernetes-bazel-build-1-9
    agent: kubernetes
    branches:
    - release-1.9
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.8.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--" # end bootstrap args, scenario args below
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        - "--gcs=gs://kubernetes-release-dev/ci"
        - "--version-suffix=-bazel"
        - "--publish-version=gs://kubernetes-release-dev/ci/latest-bazel-1.9.txt"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
    run_after_success:
    - name: ci-kubernetes-bazel-test-1-9
      agent: kubernetes
      labels:
        preset-service-account: true
      spec:
        containers:
        - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.8.1
          args:
          - "--clean"
          - "--git-cache=/root/.cache/git"
          - "--job=$(JOB_NAME)"
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--service-account=/etc/service-account/service-account.json"
          - "--upload=gs://kubernetes-jenkins/logs"
          - "--" # end bootstrap args, scenario args below
          - "--test=//... -//build/... -//vendor/..."
          - "--manual-test=//hack:verify-all"
          - "--test-args=--build_tag_filters=-e2e,-integration"
          - "--test-args=--test_tag_filters=-e2e,-integration"
          - "--test-args=--flaky_test_attempts=3"
          env:
          - name: TEST_TMPDIR
            value: /root/.cache/bazel
          securityContext:
            privileged: true
          volumeMounts:
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
          resources:
            requests:
              memory: "6Gi"
        volumes:
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0
    - name: ci-kubernetes-e2e-kubeadm-gce-1-8-on-1-9
      agent: kubernetes
      labels:
        preset-service-account: true
        preset-k8s-ssh: true
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--clean"
          - "--timeout=320"
          - "--upload=gs://kubernetes-jenkins/logs"
    - name: ci-kubernetes-e2e-kubeadm-gce-1-9
      agent: kubernetes
      labels:
        preset-service-account: true
        preset-k8s-ssh: true
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--clean"
          - "--timeout=320"
          - "--upload=gs://kubernetes-jenkins/logs"

  - name: ci-kubernetes-bazel-test-1-10
    agent: kubernetes
    branches:
    - release-1.10
    labels:
      preset-service-account: true
      preset-bazel-scratch-dir: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.10
        args:
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--" # end bootstrap args, scenario args below
        - "--test=//... -//build/... -//vendor/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--config=unit"
        - "--test-args=--build_tag_filters=-e2e,-integration"
        - "--test-args=--test_tag_filters=-e2e,-integration"
        - "--test-args=--flaky_test_attempts=3"
        env:
        - name: BAZEL_REMOTE_CACHE_ENABLED
          value: "true"
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
    run_after_success:
    - name: ci-kubernetes-e2e-kubeadm-gce-1-9-on-1-10
      agent: kubernetes
      labels:
        preset-service-account: true
        preset-k8s-ssh: true
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--clean"
          - "--timeout=320"
          - "--upload=gs://kubernetes-jenkins/logs"
    - name: ci-kubernetes-e2e-kubeadm-gce-1-10
      agent: kubernetes
      labels:
        preset-service-account: true
        preset-k8s-ssh: true
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--clean"
          - "--timeout=320"
          - "--upload=gs://kubernetes-jenkins/logs"

  kubernetes/test-infra:
  - name: ci-test-infra-bazel
    agent: kubernetes
    branches:
    - master
    labels:
      preset-service-account: true
      preset-bazel-scratch-dir: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-experimental
        args:
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--" # end bootstrap args, scenario args below
        - "--build=//..."
        - "--install=gubernator/test_requirements.txt"
        - "--test=//..."
        - "--test-args=--test_output=errors"
        env:
        - name: BAZEL_REMOTE_CACHE_ENABLED
          value: "true"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "2Gi"

  - name: maintenance-boskos-config-upload
    agent: kubernetes
    branches:
    - master
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        env:
        - name: PROW_SERVICE_ACCOUNT
          value: /etc/prow-build-service/prow-build-service.json
        volumeMounts:
        - name: prow-build-service
          mountPath: /etc/prow-build-service
          readOnly: true
      volumes:
      - name: prow-build-service
        secret:
          secretName: prow-build-service

  - name: maintenance-ci-testgrid-config-upload
    agent: kubernetes
    branches:
    - master
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-experimental
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        resources:
          requests:
            memory: "1Gi"


  tensorflow/minigo:
  - name: tf-minigo-postsubmit
    agent: kubernetes
    branches:
    - master
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/minigo-testing/minigo-prow-harness-v2:latest
        imagePullPolicy: Always
        args:
        - "--clean"
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/tensorflow/minigo=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"

periodics:
- name: ci-benchmark-scheduler-master
  tags:
  - "perfDashPrefix: benchmark-scheduler"
  - "perfDashJobType: benchmark"
  interval: 1h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - --repo=k8s.io/kubernetes=master
      - --timeout=40
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go

- interval: 24h
  name: ci-cadvisor-canarypush
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-cadvisor-docker-credential: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
      args:
      - --clean
      - --repo=github.com/google/cadvisor
      - --root=/go/src
      - --timeout=30
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      ports:
      - containerPort: 9999
        hostPort: 9999
    volumes:
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- name: ci-cadvisor-e2e
  interval: 8h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - --job=$(JOB_NAME)
      - --root=/go/src
      - --repo=k8s.io/kubernetes
      - --repo=github.com/google/cadvisor=master
      - --service-account=/etc/service-account/service-account.json
      - --timeout=90
      - --upload=gs://kubernetes-jenkins/logs
      - --
      - --node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config.yaml --test-suite=cadvisor
      env:
      - name: GOPATH
        value: /go

- name: ci-cri-containerd-build
  interval: 30m
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-experimental
      args:
      - "--repo=github.com/containerd/cri-containerd=master"
      - "--root=/go/src"
      - "--upload=gs://kubernetes-jenkins/logs"

- name: ci-cri-containerd-e2e-gce-device-plugin-gpu
  interval: 3h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - "--repo=github.com/containerd/cri-containerd=master"
      - "--timeout=300"
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-cri-containerd-e2e-gce-multizone
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - "--repo=github.com/containerd/cri-containerd=master"
      - "--timeout=170"
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-cri-containerd-e2e-gce-stackdriver
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - "--repo=github.com/containerd/cri-containerd=master"
      - "--timeout=70"
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-cri-containerd-e2e-gci-gce
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - "--repo=github.com/containerd/cri-containerd=master"
      - "--timeout=70"
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-cri-containerd-e2e-gci-gce-alpha-features
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - "--repo=github.com/containerd/cri-containerd=master"
      - "--timeout=200"
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-cri-containerd-e2e-gci-gce-es-logging
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - "--repo=github.com/containerd/cri-containerd=master"
      - "--timeout=110"
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-cri-containerd-e2e-gci-gce-etcd3
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - "--repo=github.com/containerd/cri-containerd=master"
      - "--timeout=70"
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-cri-containerd-e2e-gci-gce-flaky
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - "--repo=github.com/containerd/cri-containerd=master"
      - "--timeout=200"
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-cri-containerd-e2e-gci-gce-ingress
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - "--repo=github.com/containerd/cri-containerd=master"
      - "--timeout=110"
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-cri-containerd-e2e-gci-gce-ip-alias
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - "--repo=github.com/containerd/cri-containerd=master"
      - "--timeout=70"
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-cri-containerd-e2e-gci-gce-proto
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - "--repo=github.com/containerd/cri-containerd=master"
      - "--timeout=70"
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-cri-containerd-e2e-gci-gce-reboot
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - "--repo=github.com/containerd/cri-containerd=master"
      - "--timeout=200"
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-cri-containerd-e2e-gci-gce-sd-logging
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - "--repo=github.com/containerd/cri-containerd=master"
      - "--timeout=1340"
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-cri-containerd-e2e-gci-gce-serial
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - "--repo=github.com/containerd/cri-containerd=master"
      - "--timeout=520"
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-cri-containerd-e2e-gci-gce-slow
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - "--repo=github.com/containerd/cri-containerd=master"
      - "--timeout=170"
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-cri-containerd-e2e-gci-gce-statefulset
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - "--repo=github.com/containerd/cri-containerd=master"
      - "--timeout=110"
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-cri-containerd-e2e-ubuntu-gce
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - "--repo=github.com/containerd/cri-containerd=master"
      - "--timeout=70"
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- name: ci-cri-containerd-node-e2e
  interval: 1h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - --root=/go/src
      - --repo=k8s.io/kubernetes
      - --repo=github.com/containerd/cri-containerd=master
      - --timeout=90
      - --
      - "--node-args=--image-config-file=test/e2e_node/image-config.yaml --image-config-dir=$GOPATH/src/github.com/containerd/cri-containerd"
      env:
      - name: GOPATH
        value: /go

- name: ci-cri-containerd-node-e2e-benchmark
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - --root=/go/src
      - --repo=k8s.io/kubernetes
      - --repo=github.com/containerd/cri-containerd=master
      - --timeout=90
      - --
      - "--node-args=--image-config-file=test/e2e_node/benchmark-config.yaml --image-config-dir=$GOPATH/src/github.com/containerd/cri-containerd"
      env:
      - name: GOPATH
        value: /go


- name: ci-cri-containerd-node-e2e-flaky
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - --root=/go/src
      - --repo=k8s.io/kubernetes
      - --repo=github.com/containerd/cri-containerd=master
      - --timeout=140
      - --
      - "--node-args=--image-config-file=test/e2e_node/image-config.yaml --image-config-dir=$GOPATH/src/github.com/containerd/cri-containerd"
      env:
      - name: GOPATH
        value: /go

- name: ci-cri-containerd-node-e2e-serial
  interval: 4h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - --root=/go/src
      - --repo=k8s.io/kubernetes
      - --repo=github.com/containerd/cri-containerd=master
      - --timeout=240
      - --
      - "--node-args=--image-config-file=test/e2e_node/image-config.yaml --image-config-dir=$GOPATH/src/github.com/containerd/cri-containerd"
      env:
      - name: GOPATH
        value: /go

- interval: 1h
  name: ci-federation-build
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
      args:
      - --clean
      - --git-cache=/root/.cache/git
      - --repo=k8s.io/federation=master
      - --repo=k8s.io/release
      - --root=/go/src
      - --timeout=50
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: cache-ssd
        mountPath: /root/.cache
      - name: docker-graph
        mountPath: /docker-graph
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          cpu: 4
          memory: "8Gi"
    volumes:
    - name: cache-ssd
      hostPath:
        path: /mnt/disks/ssd0
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- interval: 30m
  agent: kubernetes
  name: ci-federation-e2e-gce
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      volumeMounts:
      - name: var-lib-docker
        mountPath: /var/lib/docker
    volumes:
    - name: var-lib-docker
      emptyDir: {}
- interval: 30m
  agent: kubernetes
  name: ci-federation-e2e-gce-serial
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      volumeMounts:
      - name: var-lib-docker
        mountPath: /var/lib/docker
    volumes:
    - name: var-lib-docker
      emptyDir: {}
- name: ci-ingress-gce-downgrade-e2e
  agent: kubernetes
  interval: 60m
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - "--timeout=340"
      - "--bare"
- name: ci-ingress-gce-e2e
  agent: kubernetes
  interval: 60m
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - "--timeout=340"
      - "--bare"
- name: ci-ingress-gce-e2e-scale
  agent: kubernetes
  interval: 6h
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - "--timeout=340"
      - "--bare"
- name: ci-ingress-gce-upgrade-e2e
  agent: kubernetes
  interval: 60m
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - "--timeout=340"
      - "--bare"
- name: ci-ingress-ipvs-gce-e2e
  agent: kubernetes
  interval: 60m
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - "--timeout=340"
      - "--bare"
- interval: 30m
  name: ci-kops-build
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - --clean
      - --git-cache=/root/.cache/git
      - --repo=k8s.io/kops
      - --repo=k8s.io/release
      - --root=/go/src
      - --timeout=30
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: cache-ssd
        mountPath: /root/.cache
      - name: docker-graph
        mountPath: /docker-graph
      ports:
      - containerPort: 9999
        hostPort: 9999
    volumes:
    - name: cache-ssd
      hostPath:
        path: /mnt/disks/ssd0
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- name: ci-kube-deploy-build
  interval: 1h
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
      args:
      - "--repo=k8s.io/kube-deploy"
      - "--root=/go/src"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--clean"
- name: ci-kube-deploy-test
  interval: 1h
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kube-deploy:v20180212-214c99406
      args:
      - "--repo=k8s.io/kube-deploy"
      - "--root=/go/src"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--clean"

- interval: 60m
  agent: kubernetes
  name: ci-kubemci-ingress-conformance
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=110
      - --bare
      image: gcr.io/k8s-testimages/e2e-kubemci:latest
      imagePullPolicy: Always


# TODO(bentheelder): kubeadm should not use run_after_success anymore
# TODO(bentheelder): switch ci-kubernetes-bazel-build to 100% periodic,
# like the other build job once we don't have run_after_success
- name: ci-kubernetes-bazel-build
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.10.0
      args:
      - "--clean"
      - "--git-cache=/root/.cache/git"
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=master"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--" # end bootstrap args, scenario args below
      - "--build=//... -//vendor/..."
      - "--release=//build/release-tars"
      env:
      - name: TEST_TMPDIR
        value: /root/.cache/bazel
      # so we can use the right cache id
      # TODO(bentheelder): switch to kubernetes_execute_bazel and consider dropping this
      - name: REPO_OWNER
        value: kubernetes
      - name: REPO_NAME
        value: kubernetes
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      volumeMounts:
      - name: cache-ssd
        mountPath: /root/.cache
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          memory: "6Gi"
    volumes:
    - name: cache-ssd
      hostPath:
        path: /mnt/disks/ssd0
  run_after_success:
  - name: ci-kubernetes-e2e-kubeadm-gce-ipvs
    agent: kubernetes
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
        args:
        - "--repo=k8s.io/kubernetes=master"
        - "--clean"
        - "--timeout=320"
        - "--upload=gs://kubernetes-jenkins/logs"
  - name: periodic-kubernetes-e2e-kubeadm-gce-selfhosting
    agent: kubernetes
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
        args:
        - "--repo=k8s.io/kubernetes=master"
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--timeout=320"
        - "--upload=gs://kubernetes-jenkins/logs"
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: ci-kubernetes-e2e-kubeadm-gce-stable-on-master
    agent: kubernetes
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
        args:
        - "--repo=k8s.io/kubernetes=master"
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--timeout=320"
        - "--upload=gs://kubernetes-jenkins/logs"
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: ci-kubernetes-e2e-kubeadm-gce-upgrade-stable-master
    agent: kubernetes
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
        args:
        - "--repo=k8s.io/kubernetes=master"
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--timeout=320"
        - "--upload=gs://kubernetes-jenkins/logs"
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: ci-kubernetes-e2e-kubeadm-gce-cni-calico
    agent: kubernetes
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
        args:
        - "--repo=k8s.io/kubernetes=master"
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--timeout=320"
        - "--upload=gs://kubernetes-jenkins/logs"
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: ci-kubernetes-e2e-kubeadm-gce-cni-flannel
    agent: kubernetes
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
        args:
        - "--repo=k8s.io/kubernetes=master"
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--timeout=320"
        - "--upload=gs://kubernetes-jenkins/logs"
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: ci-kubernetes-e2e-kubeadm-gce-dns-coredns
    agent: kubernetes
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
        args:
        - "--repo=k8s.io/kubernetes=master"
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--timeout=320"
        - "--upload=gs://kubernetes-jenkins/logs"
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

- interval: 5m
  name: ci-kubernetes-bazel-test
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-bazel-scratch-dir: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - --clean
      - --repo=k8s.io/kubernetes
      - --root=/go/src
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--" # end bootstrap args, scenario args below
      - "--test=//... -//build/... -//vendor/..."
      - "--manual-test=//hack:verify-all"
      - "--test-args=--config=unit"
      - "--test-args=--build_tag_filters=-e2e,-integration"
      - "--test-args=--test_tag_filters=-e2e,-integration"
      - "--test-args=--flaky_test_attempts=3"
      env:
      - name: BAZEL_REMOTE_CACHE_ENABLED
        value: "true"
      # TODO(bentheelder): switch to kubernetes_execute_bazel and consider dropping this
      - name: REPO_OWNER
        value: kubernetes
      - name: REPO_NAME
        value: kubernetes
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"

- interval: 5m
  name: ci-kubernetes-build
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
      args:
      - --clean
      - --git-cache=/root/.cache/git
      - --repo=k8s.io/kubernetes
      - --repo=k8s.io/release
      - --root=/go/src
      - --timeout=30
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: cache-ssd
        mountPath: /root/.cache
      - name: docker-graph
        mountPath: /docker-graph
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          cpu: 4
          memory: "8Gi"
    volumes:
    - name: cache-ssd
      hostPath:
        path: /mnt/disks/ssd0
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- interval: 30m
  name: ci-kubernetes-build-beta
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
      args:
      - --clean
      - --git-cache=/root/.cache/git
      - --repo=k8s.io/kubernetes=release-1.10
      - --repo=k8s.io/release
      - --root=/go/src
      - --timeout=120
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: cache-ssd
        mountPath: /root/.cache
      - name: docker-graph
        mountPath: /docker-graph
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          cpu: 4
          memory: "8Gi"
    volumes:
    - name: cache-ssd
      hostPath:
        path: /mnt/disks/ssd0
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- interval: 2h
  name: ci-kubernetes-build-debian-unstable
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
      args:
      - --clean
      - --git-cache=/root/.cache/git
      - --repo=k8s.io/release
      - --root=/go/src
      - --timeout=50
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: cache-ssd
        mountPath: /root/.cache
      - name: docker-graph
        mountPath: /docker-graph
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          cpu: 4
          memory: "8Gi"
    volumes:
    - name: cache-ssd
      hostPath:
        path: /mnt/disks/ssd0
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- interval: 30m
  name: ci-kubernetes-build-stable1
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
      args:
      - --clean
      - --git-cache=/root/.cache/git
      - --repo=k8s.io/kubernetes=release-1.9
      - --repo=k8s.io/release
      - --root=/go/src
      - --timeout=120
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: cache-ssd
        mountPath: /root/.cache
      - name: docker-graph
        mountPath: /docker-graph
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          cpu: 4
          memory: "8Gi"
    volumes:
    - name: cache-ssd
      hostPath:
        path: /mnt/disks/ssd0
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- interval: 1h
  name: ci-kubernetes-build-stable2
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
      args:
      - --clean
      - --git-cache=/root/.cache/git
      - --repo=k8s.io/kubernetes=release-1.8
      - --repo=k8s.io/release
      - --root=/go/src
      - --timeout=120
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: cache-ssd
        mountPath: /root/.cache
      - name: docker-graph
        mountPath: /docker-graph
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          cpu: 4
          memory: "8Gi"
    volumes:
    - name: cache-ssd
      hostPath:
        path: /mnt/disks/ssd0
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- interval: 2h
  name: ci-kubernetes-build-stable3
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
      args:
      - --clean
      - --git-cache=/root/.cache/git
      - --repo=k8s.io/kubernetes=release-1.7
      - --repo=k8s.io/release
      - --root=/go/src
      - --timeout=100
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: cache-ssd
        mountPath: /root/.cache
      - name: docker-graph
        mountPath: /docker-graph
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          cpu: 4
          memory: "8Gi"
    volumes:
    - name: cache-ssd
      hostPath:
        path: /mnt/disks/ssd0
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-charts-gce
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/charts
      - --root=/go/src
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  name: ci-kubernetes-cross-build
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
      args:
      - --clean
      - --git-cache=/root/.cache/git
      - --repo=k8s.io/kubernetes
      - --repo=k8s.io/release
      - --root=/go/src
      - --timeout=120
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: cache-ssd
        mountPath: /root/.cache
      - name: docker-graph
        mountPath: /docker-graph
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          cpu: 7
          memory: "41Gi"
    volumes:
    - name: cache-ssd
      hostPath:
        path: /mnt/disks/ssd0
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- name: ci-kubernetes-e2e-autoscaling-vpa-actuation
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - "--repo=k8s.io/autoscaler=master"
      - "--root=/go/src"
      - "--timeout=80"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
    volumes:
    - name: docker-graph
      emptyDir: {}

- name: ci-kubernetes-e2e-autoscaling-vpa-admission-controller
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - "--repo=k8s.io/autoscaler=master"
      - "--root=/go/src"
      - "--timeout=80"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
    volumes:
    - name: docker-graph
      emptyDir: {}

- name: ci-kubernetes-e2e-autoscaling-vpa-full
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - "--repo=k8s.io/autoscaler=master"
      - "--root=/go/src"
      - "--timeout=80"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
    volumes:
    - name: docker-graph
      emptyDir: {}

- name: ci-kubernetes-e2e-autoscaling-vpa-recommender
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - "--repo=k8s.io/autoscaler=master"
      - "--root=/go/src"
      - "--timeout=80"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
    volumes:
    - name: docker-graph
      emptyDir: {}

- name: ci-kubernetes-e2e-autoscaling-vpa-updater
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - "--repo=k8s.io/autoscaler=master"
      - "--root=/go/src"
      - "--timeout=80"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
    volumes:
    - name: docker-graph
      emptyDir: {}

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-cos-docker-validation
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-cos-docker-validation-serial
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-cos-docker-validation-slow
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-alpha-api
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=80
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-alpha-features-release-1-7
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-beta-stable1-downgrade-cluster
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-beta-stable1-downgrade-cluster-parallel
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-beta-stable1-gci-kubectl-skew
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-beta-stable1-gci-kubectl-skew-serial
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-canary
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=60
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 1h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cos-k8sbeta-alphafeatures
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 1h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cos-k8sbeta-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 1h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cos-k8sbeta-ingress
  spec:
    containers:
    - args:
      - --bare
      - --timeout=110
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 1h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cos-k8sbeta-reboot
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 1h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cos-k8sbeta-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 1h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cos-k8sbeta-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cos-k8sstable1-alphafeatures
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cos-k8sstable1-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cos-k8sstable1-ingress
  spec:
    containers:
    - args:
      - --bare
      - --timeout=110
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cos-k8sstable1-reboot
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cos-k8sstable1-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cos-k8sstable1-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cos-k8sstable2-alphafeatures
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cos-k8sstable2-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cos-k8sstable2-ingress
  spec:
    containers:
    - args:
      - --bare
      - --timeout=110
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cos-k8sstable2-reboot
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cos-k8sstable2-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cos-k8sstable2-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 24h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cos-k8sstable3-alphafeatures
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 24h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cos-k8sstable3-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 24h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cos-k8sstable3-ingress
  spec:
    containers:
    - args:
      - --bare
      - --timeout=110
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 24h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cos-k8sstable3-reboot
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 24h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cos-k8sstable3-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 24h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cos-k8sstable3-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosbeta-k8sbeta-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosbeta-k8sbeta-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosbeta-k8sbeta-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosbeta-k8sdev-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 24h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosbeta-k8sdev-nosnat
  spec:
    containers:
    - args:
      - --bare
      - --timeout=40
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosbeta-k8sdev-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosbeta-k8sdev-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosbeta-k8sstable1-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosbeta-k8sstable1-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosbeta-k8sstable1-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosbeta-k8sstable2-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosbeta-k8sstable2-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosbeta-k8sstable2-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosbeta-k8sstable3-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosbeta-k8sstable3-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosbeta-k8sstable3-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosdev-k8sbeta-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosdev-k8sbeta-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosdev-k8sbeta-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosdev-k8sdev-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosdev-k8sdev-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosdev-k8sdev-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosdev-k8sstable1-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosdev-k8sstable1-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosdev-k8sstable1-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosstable1-k8sbeta-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosstable1-k8sbeta-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosstable1-k8sbeta-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosstable1-k8sdev-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosstable1-k8sdev-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosstable1-k8sdev-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosstable1-k8sstable1-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosstable1-k8sstable1-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosstable1-k8sstable1-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosstable1-k8sstable2-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosstable1-k8sstable2-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosstable1-k8sstable2-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosstable1-k8sstable3-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosstable1-k8sstable3-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-cosstable1-k8sstable3-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- name: ci-kubernetes-e2e-gce-device-plugin-gpu
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- name: ci-kubernetes-e2e-gce-device-plugin-gpu-beta
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- name: ci-kubernetes-e2e-gce-device-plugin-gpu-stable1
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-federation-release-1-7
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-federation-release-1-8
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-ci-master
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-ci-serial-master
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-ci-slow-master
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-latest-rollback-etcd
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=110
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-latest-upgrade-etcd
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=110
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-m62
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-m63
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-m64
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-m65
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-master
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-serial-m62
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-serial-m63
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-serial-m64
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-serial-m65
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-serial-master
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-slow-m62
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-slow-m63
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-slow-m64
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-slow-m65
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-slow-master
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-serial-sig-cli
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=520
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- name: ci-kubernetes-e2e-gce-gpu
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- name: ci-kubernetes-e2e-gce-gpu-beta
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- name: ci-kubernetes-e2e-gce-gpu-stable1
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-ha-master
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=240
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- cron: '1 6 * * 2,4,6' # Run at 22:01PST on Mon,Wed,Fri (06:01 UTC Tue,Thur,Sat)
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-large-correctness
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=420
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      resources:
        requests:
          cpu: 6
          memory: "16Gi"

- cron: "0 0 31 2 *" # manual job, set to Feb.31st so it will never be triggered
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-large-manual-down
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always

- cron: "0 0 31 2 *" # manual job, set to Feb.31st so it will never be triggered
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-large-manual-up
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always

- cron: '1 13 * * 2,4,6' # Run at 5:01PST (13:01 UTC) on even days
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-large-performance
  tags:
  - "perfDashPrefix: gce-2kNodes-master"
  - "perfDashJobType: performance"
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=540
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      resources:
        requests:
          cpu: 6
          memory: "16Gi"

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-master-new-downgrade-cluster
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-master-new-downgrade-cluster-parallel
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-master-new-gci-kubectl-skew
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-master-new-gci-kubectl-skew-serial
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 24h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-min-node-permissions
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=520
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-multizone
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-new-master-gci-kubectl-skew
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-new-master-gci-kubectl-skew-serial
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-new-master-upgrade-cluster
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-new-master-upgrade-cluster-new
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-new-master-upgrade-cluster-parallel
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-new-master-upgrade-master
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-reboot-release-1-7
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-release-1-7
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-scalability-canary
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always

- cron: '1 22 * * 2,4,6' # Run at 14:01PST (22:01 UTC) on even days
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-scale-correctness
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=600
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      resources:
        requests:
          cpu: 6
          memory: "16Gi"

- cron: '1 8 * * 1,3,5' # Run at 00:01PST (8:01 UTC) on odd days (except sunday)
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-scale-performance
  tags:
  - "perfDashPrefix: gce-5kNodes-master"
  - "perfDashJobType: performance"
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=1320
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      resources:
        requests:
          cpu: 6
          memory: "16Gi"

- interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-serial-release-1-7
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=520
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-slow-release-1-7
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable1-beta-gci-kubectl-skew
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable1-beta-gci-kubectl-skew-serial
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable1-beta-upgrade-cluster
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable1-beta-upgrade-cluster-new
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable1-beta-upgrade-master
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable1-stable2-downgrade-cluster
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable1-stable2-downgrade-cluster-parallel
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable1-stable2-gci-kubectl-skew
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable1-stable2-gci-kubectl-skew-serial
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable2-stable1-gci-kubectl-skew
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable2-stable1-gci-kubectl-skew-serial
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable2-stable1-upgrade-cluster
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable2-stable1-upgrade-cluster-new
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable2-stable1-upgrade-master
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stackdriver
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-taint-evict
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=80
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-ubuntudev-k8sbeta-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-ubuntudev-k8sbeta-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-ubuntudev-k8sbeta-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-ubuntudev-k8sdev-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-ubuntudev-k8sdev-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-ubuntudev-k8sdev-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-ubuntudev-k8sstable1-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-ubuntudev-k8sstable1-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-ubuntudev-k8sstable1-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-ubuntudev-k8sstable2-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-ubuntudev-k8sstable2-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-ubuntudev-k8sstable2-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-ubuntudev2-k8sbeta-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-ubuntudev2-k8sbeta-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-ubuntudev2-k8sbeta-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-ubuntudev2-k8sdev-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-ubuntudev2-k8sdev-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-ubuntudev2-k8sdev-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-ubuntustable1-k8sdev-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-ubuntustable1-k8sdev-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-ubuntustable1-k8sdev-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-ubuntustable1-k8sstable1-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-ubuntustable1-k8sstable1-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-ubuntustable1-k8sstable1-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-ubuntustable1-k8sstable2-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-ubuntustable1-k8sstable2-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gce-ubuntustable1-k8sstable2-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-alpha-features
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-autoscaling
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=350
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-autoscaling-hpa
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=350
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-autoscaling-migs
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=350
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-autoscaling-migs-hpa
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=350
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-es-logging
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=110
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-etcd3
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-etcd3-sig-cli
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-flaky
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-garbage
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-ingress
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=110
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 60m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-ingress-manual-network
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=110
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-ip-alias
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 60m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-ipvs
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-latest-downgrade-kube-proxy-ds
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-latest-upgrade-kube-proxy-ds
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=110
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-proto
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-reboot
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-scalability
  tags:
  - "perfDashPrefix: gce-100Nodes-master"
  - "perfDashJobType: performance"
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- cron: "0 */6 * * *" # every six hours
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-scalability-beta
  tags:
  - "perfDashPrefix: gce-100Nodes-1.9"
  - "perfDashJobType: performance"
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always

- cron: "0 3-21/6 * * *" # every six hours, disjoint with ci-kubernetes-e2e-gci-gce-scalability-stable1
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-scalability-release-1-7
  tags:
  - "perfDashPrefix: gce-100Nodes-1.7"
  - "perfDashJobType: performance"
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- cron: "0 0/6 * * *" # every six hours, disjoint with ci-kubernetes-e2e-gci-gce-scalability-release-1-7
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-scalability-stable1
  tags:
  - "perfDashPrefix: gce-100Nodes-1.8"
  - "perfDashJobType: performance"
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-sd-logging
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=1340
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-serial
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=520
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-sig-cli
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-slow
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-statefulset
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=110
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-alpha-features
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-autoscaling
  labels:
    preset-gke-alpha-service: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=440
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-autoscaling-hpa
  labels:
    preset-gke-alpha-service: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=440
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-autoscaling-regional
  labels:
    preset-gke-alpha-service: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=440
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-flaky
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-ingress
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-multizone
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-prod
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-prod-parallel
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=100
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-prod-smoke
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=100
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-reboot
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-serial
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=520
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-sig-cli
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-slow
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-updown
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=50
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-alpha-features-release-1-7
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-beta-stable1-downgrade-cluster
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-beta-stable1-downgrade-cluster-parallel
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-beta-stable1-gci-kubectl-skew
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-beta-stable1-gci-kubectl-skew-serial
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-canary
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 1h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cos-k8sbeta-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 1h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cos-k8sbeta-ingress
  spec:
    containers:
    - args:
      - --bare
      - --timeout=110
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 1h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cos-k8sbeta-reboot
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 1h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cos-k8sbeta-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 1h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cos-k8sbeta-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cos-k8sstable1-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cos-k8sstable1-ingress
  spec:
    containers:
    - args:
      - --bare
      - --timeout=110
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cos-k8sstable1-reboot
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cos-k8sstable1-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cos-k8sstable1-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cos-k8sstable2-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cos-k8sstable2-ingress
  spec:
    containers:
    - args:
      - --bare
      - --timeout=110
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cos-k8sstable2-reboot
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cos-k8sstable2-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cos-k8sstable2-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cos-k8sstable3-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cos-k8sstable3-ingress
  spec:
    containers:
    - args:
      - --bare
      - --timeout=110
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cos-k8sstable3-reboot
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cos-k8sstable3-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cos-k8sstable3-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cosbeta-k8sbeta-soak
  spec:
    containers:
    - args:
      - --bare
      - --timeout=620
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 3h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cosbeta-k8sbeta-stackdriver
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cosbeta-k8sdev-soak
  spec:
    containers:
    - args:
      - --bare
      - --timeout=620
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 3h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cosbeta-k8sdev-stackdriver
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cosbeta-k8sstable1-soak
  spec:
    containers:
    - args:
      - --bare
      - --timeout=620
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 3h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cosbeta-k8sstable1-stackdriver
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cosbeta-k8sstable2-soak
  spec:
    containers:
    - args:
      - --bare
      - --timeout=620
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 3h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cosbeta-k8sstable2-stackdriver
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cosbeta-k8sstable3-soak
  spec:
    containers:
    - args:
      - --bare
      - --timeout=620
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 3h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-cosbeta-k8sstable3-stackdriver
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cvm-1-7-gci-1-8-upgrade-cluster
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cvm-1-7-gci-1-8-upgrade-cluster-new
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cvm-1-7-gci-1-8-upgrade-master
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- name: ci-kubernetes-e2e-gke-device-plugin-gpu
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- name: ci-kubernetes-e2e-gke-device-plugin-gpu-beta
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- name: ci-kubernetes-e2e-gke-device-plugin-gpu-monitoring
  interval: 3h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- name: ci-kubernetes-e2e-gke-device-plugin-gpu-p100
  interval: 12h #expensive test
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- name: ci-kubernetes-e2e-gke-device-plugin-gpu-p100-beta
  interval: 12h #expensive test
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- name: ci-kubernetes-e2e-gke-device-plugin-gpu-stable1
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-ci-master
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-master-gci-new-downgrade-cluster
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-master-gci-new-downgrade-cluster-parallel
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-new-gci-master-upgrade-cluster
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-new-gci-master-upgrade-cluster-new
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-new-gci-master-upgrade-cluster-parallel
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-new-gci-master-upgrade-master
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-serial-sig-cli
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-stable-gci-master-upgrade-master
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-stable1-gci-stable2-downgrade-cluster
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-stable1-gci-stable2-downgrade-cluster-parallel
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-stable2-gci-stable1-upgrade-cluster
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-stable2-gci-stable1-upgrade-cluster-new
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-stable2-gci-stable1-upgrade-master
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-stable3-gci-stable1-upgrade-cluster
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-stable3-gci-stable1-upgrade-cluster-new
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-stable3-gci-stable1-upgrade-master
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- name: ci-kubernetes-e2e-gke-gpu-1-7
  interval: 12h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- cron: "0 0 31 2 *" # manual job, set to Feb.31st so it will never be triggered
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-large-correctness
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=480
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      resources:
        requests:
          cpu: 6
          memory: "16Gi"

- cron: "0 0 31 2 *" # manual job, set to Feb.31st so it will never be triggered
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-large-deploy
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=1220
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always

- cron: '1 8 * * 0' # Run at 00:01PST (8:01 UTC) on sunday
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-large-performance
  tags:
  - "perfDashPrefix: gke-2kNodes-master"
  - "perfDashJobType: performance"
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=540
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      resources:
        requests:
          cpu: 6
          memory: "16Gi"

- cron: "0 0 31 2 *" # manual job, set to Feb.31st so it will never be triggered
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-large-teardown
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-master-new-gci-kubectl-skew
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-master-new-gci-kubectl-skew-serial
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-new-master-gci-kubectl-skew
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-new-master-gci-kubectl-skew-serial
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-prod
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-prod-parallel
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=100
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-prod-smoke
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=100
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-regional
  labels:
    preset-gke-alpha-service: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- cron: '1 17 * * 0' # Run at 9:01PST (17:01 UTC) on sunday
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-scale-correctness
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=660
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      resources:
        requests:
          cpu: 6
          memory: "16Gi"

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-sd-logging-gci-beta
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=1400
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-sd-logging-gci-latest
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=1400
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-sd-logging-gci-stable1
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=1400
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-sd-logging-ubuntu-beta
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=1400
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-sd-logging-ubuntu-latest
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=1400
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-sd-logging-ubuntu-stable1
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=1400
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-stable1-beta-gci-kubectl-skew
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-stable1-beta-gci-kubectl-skew-serial
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-stable1-beta-upgrade-cluster
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-stable1-beta-upgrade-cluster-new
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-stable1-beta-upgrade-master
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-stable1-stable2-gci-kubectl-skew
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-stable1-stable2-gci-kubectl-skew-serial
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-stable2-stable1-gci-kubectl-skew
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-stable2-stable1-gci-kubectl-skew-serial
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-stackdriver
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-staging-1-7-1-8-upgrade-cluster
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-staging-1-7-1-8-upgrade-cluster-new
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-staging-1-7-1-8-upgrade-master
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-staging-1-8-1-9-upgrade-cluster
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-staging-1-8-1-9-upgrade-cluster-new
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-staging-1-8-1-9-upgrade-master
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-staging-default-parallel
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=100
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-staging-default-serial
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-staging-latest-device-plugin-gpu
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=100
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-staging-latest-parallel
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=100
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-staging-latest-serial
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sdev-alphafeatures
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sdev-autoscaling
  spec:
    containers:
    - args:
      - --bare
      - --timeout=440
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sdev-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sdev-flaky
  spec:
    containers:
    - args:
      - --bare
      - --timeout=320
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sdev-ingress
  spec:
    containers:
    - args:
      - --bare
      - --timeout=110
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sdev-reboot
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sdev-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sdev-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sdev-updown
  spec:
    containers:
    - args:
      - --bare
      - --timeout=50
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable1-alphafeatures
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable1-autoscaling
  spec:
    containers:
    - args:
      - --bare
      - --timeout=440
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable1-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable1-flaky
  spec:
    containers:
    - args:
      - --bare
      - --timeout=320
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable1-ingress
  spec:
    containers:
    - args:
      - --bare
      - --timeout=110
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable1-reboot
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable1-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable1-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable1-updown
  spec:
    containers:
    - args:
      - --bare
      - --timeout=50
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable2-alphafeatures
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable2-autoscaling
  spec:
    containers:
    - args:
      - --bare
      - --timeout=440
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable2-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable2-flaky
  spec:
    containers:
    - args:
      - --bare
      - --timeout=320
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable2-ingress
  spec:
    containers:
    - args:
      - --bare
      - --timeout=110
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable2-reboot
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable2-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable2-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable2-updown
  spec:
    containers:
    - args:
      - --bare
      - --timeout=50
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable2-k8sbeta-alphafeatures
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable2-k8sbeta-autoscaling
  spec:
    containers:
    - args:
      - --bare
      - --timeout=440
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable2-k8sbeta-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable2-k8sbeta-flaky
  spec:
    containers:
    - args:
      - --bare
      - --timeout=320
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable2-k8sbeta-ingress
  spec:
    containers:
    - args:
      - --bare
      - --timeout=110
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable2-k8sbeta-reboot
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable2-k8sbeta-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable2-k8sbeta-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2e-gke-ubuntustable2-k8sbeta-updown
  spec:
    containers:
    - args:
      - --bare
      - --timeout=50
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-updown
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=50
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws
  labels:
    preset-service-account: true
    preset-aws-ssh: true
    preset-aws-credential: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-beta
  labels:
    preset-service-account: true
    preset-aws-ssh: true
    preset-aws-credential: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-canary
  labels:
    preset-service-account: true
    preset-aws-ssh: true
    preset-aws-credential: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-channelalpha
  labels:
    preset-service-account: true
    preset-aws-ssh: true
    preset-aws-credential: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-ena-nvme
  labels:
    preset-service-account: true
    preset-aws-ssh: true
    preset-aws-credential: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always

- interval: 4h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-imageubuntu1604
  labels:
    preset-service-account: true
    preset-aws-ssh: true
    preset-aws-credential: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-newrunner
  labels:
    preset-service-account: true
    preset-aws-ssh: true
    preset-aws-credential: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-sig-cli
  labels:
    preset-service-account: true
    preset-aws-ssh: true
    preset-aws-credential: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-stable1
  labels:
    preset-service-account: true
    preset-aws-ssh: true
    preset-aws-credential: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 4h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-stable2
  labels:
    preset-service-account: true
    preset-aws-ssh: true
    preset-aws-credential: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-stable3
  labels:
    preset-service-account: true
    preset-aws-ssh: true
    preset-aws-credential: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-updown
  labels:
    preset-service-account: true
    preset-aws-ssh: true
    preset-aws-credential: true
  spec:
    containers:
    - args:
      - --timeout=50
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 24h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-weave
  labels:
    preset-service-account: true
    preset-aws-ssh: true
    preset-aws-credential: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-gce
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-gce-channelalpha
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-gce-ha
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  name: ci-kubernetes-e2e-kubeadm-gce
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
      args:
      - "--repo=k8s.io/kubernetes=master"
      - "--clean"
      - "--timeout=320"
      - "--upload=gs://kubernetes-jenkins/logs"

- name: ci-kubernetes-e2e-node-canary
  interval: 1h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always
      args:
      - --repo=k8s.io/kubernetes=master
      - --timeout=110
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go

- name: ci-kubernetes-e2e-prow-canary
  interval: 1h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always
      args:
      - --bare
      - --timeout=85

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-cosbeta-k8sbeta-default
  spec:
    containers:
    - args:
      - --timeout=90
      - --repo=k8s.io/kubernetes=release-1.10
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.10
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-cosbeta-k8sbeta-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=release-1.10
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.10
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-cosbeta-k8sdev-default
  spec:
    containers:
    - args:
      - --timeout=90
      - --repo=k8s.io/kubernetes=master
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-cosbeta-k8sdev-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=master
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-cosbeta-k8sstable1-default
  spec:
    containers:
    - args:
      - --timeout=90
      - --repo=k8s.io/kubernetes=release-1.9
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.9
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-cosbeta-k8sstable1-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=release-1.9
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.9
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-cosbeta-k8sstable2-default
  spec:
    containers:
    - args:
      - --timeout=90
      - --repo=k8s.io/kubernetes=release-1.8
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.8
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-cosbeta-k8sstable2-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=release-1.8
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.8
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-cosbeta-k8sstable3-default
  spec:
    containers:
    - args:
      - --timeout=90
      - --repo=k8s.io/kubernetes=release-1.7
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.7
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-cosbeta-k8sstable3-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=release-1.7
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.7
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-cosstable1-k8sbeta-default
  spec:
    containers:
    - args:
      - --timeout=90
      - --repo=k8s.io/kubernetes=release-1.10
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.10
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-cosstable1-k8sbeta-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=release-1.10
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.10
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-cosstable1-k8sdev-default
  spec:
    containers:
    - args:
      - --timeout=90
      - --repo=k8s.io/kubernetes=master
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-cosstable1-k8sdev-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=master
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-cosstable1-k8sstable1-default
  spec:
    containers:
    - args:
      - --timeout=90
      - --repo=k8s.io/kubernetes=release-1.9
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.9
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-cosstable1-k8sstable1-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=release-1.9
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.9
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-cosstable1-k8sstable2-default
  spec:
    containers:
    - args:
      - --timeout=90
      - --repo=k8s.io/kubernetes=release-1.8
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.8
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-cosstable1-k8sstable2-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=release-1.8
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.8
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-cosstable1-k8sstable3-default
  spec:
    containers:
    - args:
      - --timeout=90
      - --repo=k8s.io/kubernetes=release-1.7
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.7
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-cosstable1-k8sstable3-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=release-1.7
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.7
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-ubuntudev-k8sdev-gkespec
  spec:
    containers:
    - args:
      - --timeout=80
      - --repo=k8s.io/kubernetes=master
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-ubuntudev-k8sdev-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=master
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-ubuntudev-k8sstable1-gkespec
  spec:
    containers:
    - args:
      - --timeout=80
      - --repo=k8s.io/kubernetes=release-1.9
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.9
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-ubuntudev-k8sstable1-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=release-1.9
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.9
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-ubuntudev-k8sstable2-gkespec
  spec:
    containers:
    - args:
      - --timeout=80
      - --repo=k8s.io/kubernetes=release-1.8
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.8
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-ubuntudev-k8sstable2-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=release-1.8
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.8
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-ubuntudev2-k8sbeta-gkespec
  spec:
    containers:
    - args:
      - --timeout=80
      - --repo=k8s.io/kubernetes=release-1.10
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.10
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-ubuntudev2-k8sbeta-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=release-1.10
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.10
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-ubuntudev2-k8sdev-gkespec
  spec:
    containers:
    - args:
      - --timeout=80
      - --repo=k8s.io/kubernetes=master
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-ubuntudev2-k8sdev-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=master
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-ubuntustable1-k8sdev-gkespec
  spec:
    containers:
    - args:
      - --timeout=80
      - --repo=k8s.io/kubernetes=master
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-ubuntustable1-k8sdev-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=master
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-ubuntustable1-k8sstable1-gkespec
  spec:
    containers:
    - args:
      - --timeout=80
      - --repo=k8s.io/kubernetes=release-1.9
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.9
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-ubuntustable1-k8sstable1-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=release-1.9
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.9
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-ubuntustable1-k8sstable2-gkespec
  spec:
    containers:
    - args:
      - --timeout=80
      - --repo=k8s.io/kubernetes=release-1.8
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.8
- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  name: ci-kubernetes-e2enode-ubuntustable1-k8sstable2-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=release-1.8
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.8
- interval: 6h
  name: ci-kubernetes-federation-build-1-7
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
      args:
      - --clean
      - --git-cache=/root/.cache/git
      - --repo=k8s.io/kubernetes=release-1.7
      - --repo=k8s.io/release
      - --root=/go/src
      - --timeout=50
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: cache-ssd
        mountPath: /root/.cache
      - name: docker-graph
        mountPath: /docker-graph
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          cpu: 4
          memory: "8Gi"
    volumes:
    - name: cache-ssd
      hostPath:
        path: /mnt/disks/ssd0
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- interval: 2h
  name: ci-kubernetes-federation-build-1-8
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
      args:
      - --clean
      - --git-cache=/root/.cache/git
      - --repo=k8s.io/kubernetes=release-1.8
      - --repo=k8s.io/release
      - --root=/go/src
      - --timeout=50
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: cache-ssd
        mountPath: /root/.cache
      - name: docker-graph
        mountPath: /docker-graph
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          cpu: 4
          memory: "8Gi"
    volumes:
    - name: cache-ssd
      hostPath:
        path: /mnt/disks/ssd0
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- interval: 2h
  name: ci-kubernetes-integration-beta
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
      args:
      - "--clean"
      - "--repo=k8s.io/kubernetes=release-1.10"
      - "--timeout=100"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          cpu: 4
    volumes:
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- interval: 1h
  name: ci-kubernetes-integration-master
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
      args:
      - "--clean"
      - "--repo=k8s.io/kubernetes"
      - "--timeout=100"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          cpu: 4
    volumes:
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- interval: 2h
  name: ci-kubernetes-integration-stable1
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
      args:
      - "--clean"
      - "--repo=k8s.io/kubernetes=release-1.9"
      - "--timeout=100"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          cpu: 4
    volumes:
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- interval: 6h
  name: ci-kubernetes-integration-stable2
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
      args:
      - "--clean"
      - "--repo=k8s.io/kubernetes=release-1.8"
      - "--timeout=100"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          cpu: 4
    volumes:
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- interval: 24h
  name: ci-kubernetes-integration-stable3
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
      args:
      - "--clean"
      - "--repo=k8s.io/kubernetes=release-1.7"
      - "--timeout=100"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          cpu: 4
    volumes:
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- name: ci-kubernetes-kubemark-100-canary
  interval: 1h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - --bare
      - --timeout=260
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      # TODO(bentheelder): sort out container port
      ports:
      - containerPort: 9999
        hostPort: 9999
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
    volumes:
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- name: ci-kubernetes-kubemark-100-gce
  tags:
  - "perfDashPrefix: kubemark-100Nodes-master"
  - "perfDashJobType: performance"
  interval: 3h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - --bare
      - --timeout=260
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      # TODO(bentheelder): sort out container port
      ports:
      - containerPort: 9999
        hostPort: 9999
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
    volumes:
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- name: ci-kubernetes-kubemark-5-gce
  interval: 30m
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - --bare
      - --timeout=80
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      # TODO(bentheelder): sort out container port
      ports:
      - containerPort: 9999
        hostPort: 9999
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
    volumes:
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- name: ci-kubernetes-kubemark-5-gce-last-release
  interval: 30m
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - --bare
      - --timeout=80
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      # TODO(bentheelder): sort out container port
      ports:
      - containerPort: 9999
        hostPort: 9999
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
    volumes:
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- name: ci-kubernetes-kubemark-5-prow-canary
  cron: "0 * * * *"
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always
      args:
      - --bare
      - --timeout=80
      env:
      - name: KUBEMARK_BAZEL_BUILD
        value: "y"
      # bazel needs privileged mode to sandbox builds
      securityContext:
        privileged: true

- name: ci-kubernetes-kubemark-500-gce
  tags:
  - "perfDashPrefix: kubemark-500Nodes-master"
  - "perfDashJobType: performance"
  interval: 1h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - --bare
      - --timeout=140
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      # TODO(bentheelder): sort out container port
      ports:
      - containerPort: 9999
        hostPort: 9999
      # docker-in-docker needs privilged mode
      securityContext:
        privileged: true
    volumes:
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- name: ci-kubernetes-kubemark-gce-scale
  tags:
  - "perfDashPrefix: kubemark-5kNodes-master"
  - "perfDashJobType: performance"
  interval: 12h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - --bare
      - --timeout=1100
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      # TODO(bentheelder): sort out container port
      ports:
      - containerPort: 9999
        hostPort: 9999
      # docker-in-docker needs privilged mode
      securityContext:
        privileged: true
    volumes:
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- name: ci-kubernetes-kubemark-high-density-100-gce
  tags:
  - "perfDashPrefix: kubemark-100Nodes-master-hd"
  - "perfDashJobType: performance"
  interval: 24h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - --bare
      - --timeout=300
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      # TODO(bentheelder): sort out container port
      ports:
      - containerPort: 9999
        hostPort: 9999
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
    volumes:
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- name: ci-kubernetes-local-e2e
  agent: kubernetes
  interval: 60m
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - "--timeout=140"
      - "--bare"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      ports:
      - containerPort: 9999
        hostPort: 9999
    volumes:
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- name: ci-kubernetes-node-kubelet
  interval: 1h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - --repo=k8s.io/kubernetes=master
      - --timeout=90
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go

- name: ci-kubernetes-node-kubelet-benchmark
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - --repo=k8s.io/kubernetes=master
      - --timeout=90
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go

- name: ci-kubernetes-node-kubelet-beta
  interval: 48h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - --repo=k8s.io/kubernetes=release-1.10
      - --timeout=90
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go

- name: ci-kubernetes-node-kubelet-conformance
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - --repo=k8s.io/kubernetes=master
      - --timeout=90
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go

- name: ci-kubernetes-node-kubelet-flaky
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - --repo=k8s.io/kubernetes=master
      - --timeout=90
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go

- name: ci-kubernetes-node-kubelet-serial
  interval: 4h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - --repo=k8s.io/kubernetes=master
      - --timeout=240
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go

- name: ci-kubernetes-node-kubelet-serial-cpu-manager
  interval: 4h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - --repo=k8s.io/kubernetes=master
      - --timeout=240
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go

- name: ci-kubernetes-node-kubelet-stable1
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.9
      args:
      - --repo=k8s.io/kubernetes=release-1.9
      - --timeout=90
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go

- name: ci-kubernetes-node-kubelet-stable2
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.8
      args:
      - --repo=k8s.io/kubernetes=release-1.8
      - --timeout=90
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go

- name: ci-kubernetes-node-kubelet-stable3
  interval: 24h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.7
      args:
      - --repo=k8s.io/kubernetes=release-1.7
      - --timeout=90
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-soak-cos-docker-validation
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-soak-gce-1-7
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      env:
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-soak-gce-gci
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-soak-gci-gce-beta
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-soak-gci-gce-stable1
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-soak-gci-gce-stable2
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-soak-gci-gce-stable3
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-soak-gke-gci
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master

- interval: 2h
  name: ci-kubernetes-verify-beta
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
      args:
      - "--clean"
      - "--repo=k8s.io/kubernetes=release-1.10"
      - "--timeout=75"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          cpu: 4
    volumes:
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- interval: 1h
  name: ci-kubernetes-verify-master
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
      args:
      - "--clean"
      - "--repo=k8s.io/kubernetes"
      - "--timeout=75"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          cpu: 4
    volumes:
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- interval: 2h
  name: ci-kubernetes-verify-stable1
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
      args:
      - "--clean"
      - "--repo=k8s.io/kubernetes=release-1.9"
      - "--timeout=75"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          cpu: 4
    volumes:
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- interval: 6h
  name: ci-kubernetes-verify-stable2
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
      args:
      - "--clean"
      - "--repo=k8s.io/kubernetes=release-1.8"
      - "--timeout=75"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          cpu: 4
    volumes:
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- interval: 24h
  name: ci-kubernetes-verify-stable3
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180215-b2a89850e
      args:
      - "--clean"
      - "--repo=k8s.io/kubernetes=release-1.7"
      - "--timeout=75"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          cpu: 4
    volumes:
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- name: ci-perf-tests-e2e-gce-clusterloader
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - "--repo=k8s.io/kubernetes=master"
      - "--repo=k8s.io/perf-tests=master"
      - "--root=/go/src"
      - "--timeout=80"

- name: ci-perf-tests-kubemark-100-benchmark
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - "--repo=k8s.io/perf-tests=master"
      - "--root=/go/src"
      - "--timeout=10"

- name: ci-test-infra-bazel
  interval: 1h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-bazel-scratch-dir: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-experimental
      args:
      - "--clean"
      - "--git-cache=/root/.cache/git"
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/test-infra=master"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--" # end bootstrap args, scenario args below
      - "--build=//..."
      - "--install=gubernator/test_requirements.txt"
      - "--test=//..."
      - "--test-args=--test_output=errors"
      env:
      - name: BAZEL_REMOTE_CACHE_ENABLED
        value: "true"
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "2Gi"

- name: ci-test-infra-triage
  interval: 1h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/triage:latest
      imagePullPolicy: Always
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: triage-service-account

- cron: "1 5 * * *" # Run at 21:01PST daily (05:01 UTC)
  agent: kubernetes
  name: cluster-registry-nightly
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.8.1
      args:
      - "--clean"
      - "--git-cache=/root/.cache/git"
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/cluster-registry=master"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      env:
      - name: TEST_TMPDIR
        value: /root/.cache/bazel
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      volumeMounts:
      - name: cache-ssd
        mountPath: /root/.cache
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          memory: "2Gi"
    volumes:
    - name: cache-ssd
      hostPath:
        path: /mnt/disks/ssd0
- name: issue-creator
  agent: kubernetes
  interval: 24h
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/issue-creator:v20170907-5240cca5
      args:
      - --dry-run=false
      - --alsologtostderr
      - --org=kubernetes
      - --project=kubernetes
      - --token-file=/etc/token/bot-github-token
      - --test-owners-csv=/test_owners.csv
      - --triage-window=1
      - --triage-count=10
      - --flakyjob-count=3
      volumeMounts:
      - name: token
        mountPath: /etc/token
    volumes:
    - name: token
      secret:
        secretName: fejta-bot-token
- interval: 2h
  agent: kubernetes
  name: istio-periodic-e2e-gke-addon
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - "--clean"
      - "--repo=github.com/istio/istio=master"
      - "--timeout=90"

- name: kubeflow-periodic
  interval: 8h
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/kubeflow-ci/test-worker:latest
      imagePullPolicy: Always

- interval: 1h
  agent: kubernetes
  name: maintenance-ci-aws-janitor
  labels:
    preset-service-account: true
  spec:
    containers:
    - args:
      - --bare
      - --timeout=30
      - --service-account=/etc/service-account/service-account.json
      - --upload=gs://kubernetes-jenkins/logs
      env:
      - name: AWS_SHARED_CREDENTIALS_FILE
        value: /workspace/.aws/credentials
      image: gcr.io/k8s-test-infra-aws/aws-janitor:0.4
      volumeMounts:
      - mountPath: /workspace/.aws
        name: aws-cred
        readOnly: true
    volumes:
    - name: aws-cred
      secret:
        defaultMode: 256
        secretName: aws-cred-new

- interval: 24h
  agent: kubernetes
  name: maintenance-ci-janitor
  labels:
    preset-service-account: true
  spec:
    containers:
    - args:
      - --bare
      - --timeout=600
      - --service-account=/etc/service-account/service-account.json
      - --upload=gs://kubernetes-jenkins/logs
      env:
      image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25

- interval: 1h
  agent: kubernetes
  name: maintenance-pull-janitor
  labels:
    preset-service-account: true
  spec:
    containers:
    - args:
      - --bare
      - --timeout=30
      - --service-account=/etc/service-account/service-account.json
      - --upload=gs://kubernetes-jenkins/logs
      env:
      image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25

- name: metrics-bigquery
  interval: 24h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bigquery:v20170911-5aa1975d
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: VELODROME_INFLUXDB_CONFIG
        value: /etc/velodrome-influxdb/config.json
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: influxdb
        mountPath: /etc/velodrome-influxdb
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: triage-service-account
    - name: influxdb
      secret:
        secretName: velodrome-influxdb

- name: periodic-kubernetes-bazel-build-1-10
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-bazel-scratch-dir: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.10
      args:
      - "--clean"
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.10"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--" # end bootstrap args, scenario args below
      - "--build=//... -//vendor/..."
      - "--release=//build/release-tars"
      env:
      - name: BAZEL_REMOTE_CACHE_ENABLED
        value: "true"
      # TODO(bentheelder): switch to kubernetes_execute_bazel and consider dropping this
      - name: REPO_OWNER
        value: kubernetes
      - name: REPO_NAME
        value: kubernetes
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"

- name: periodic-kubernetes-bazel-build-1-7
  interval: 12h
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.6.1
      args:
      - "--clean"
      - "--git-cache=/root/.cache/git"
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.7"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      env:
      # Make Bazel use shared cache for its root
      # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
      - name: TEST_TMPDIR
        value: /root/.cache/bazel
      volumeMounts:
      - name: cache-ssd
        mountPath: /root/.cache
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          memory: "6Gi"
    volumes:
    - name: cache-ssd
      hostPath:
        path: /mnt/disks/ssd0
  run_after_success:
  - name: periodic-kubernetes-bazel-test-1-7
    agent: kubernetes
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.6.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/kubernetes=release-1.7"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        securityContext:
          privileged: true
        env:
        # Make Bazel use shared cache for its root
        # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: periodic-kubernetes-e2e-kubeadm-gce-1-7
    agent: kubernetes
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
        args:
        - "--repo=k8s.io/kubernetes=release-1.7"
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--timeout=320"
        - "--upload=gs://kubernetes-jenkins/logs"
        env:
        - name: REPO_NAME
          value: kubernetes=release-1.7
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

- name: periodic-kubernetes-bazel-build-1-8
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.6.1
      args:
      - "--clean"
      - "--git-cache=/root/.cache/git"
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.8"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      env:
      # Make Bazel use shared cache for its root
      # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
      - name: TEST_TMPDIR
        value: /root/.cache/bazel
      volumeMounts:
      - name: cache-ssd
        mountPath: /root/.cache
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          memory: "6Gi"
    volumes:
    - name: cache-ssd
      hostPath:
        path: /mnt/disks/ssd0
  run_after_success:
  - name: periodic-kubernetes-bazel-test-1-8
    agent: kubernetes
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.6.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/kubernetes=release-1.8"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        securityContext:
          privileged: true
        env:
        # Make Bazel use shared cache for its root
        # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: periodic-kubernetes-e2e-kubeadm-gce-1-8
    agent: kubernetes
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
        args:
        - "--repo=k8s.io/kubernetes=release-1.8"
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--timeout=320"
        - "--upload=gs://kubernetes-jenkins/logs"
        env:
        - name: REPO_NAME
          value: kubernetes=release-1.8
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: periodic-kubernetes-e2e-kubeadm-gce-upgrade-1-7-1-8
    agent: kubernetes
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
        args:
        - "--repo=k8s.io/kubernetes=release-1.8"
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--timeout=320"
        - "--upload=gs://kubernetes-jenkins/logs"
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

- name: periodic-kubernetes-bazel-build-1-9
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.8.1
      args:
      - "--clean"
      - "--git-cache=/root/.cache/git"
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.9"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--" # end bootstrap args, scenario args below
      - "--build=//... -//vendor/..."
      - "--release=//build/release-tars"
      env:
      - name: TEST_TMPDIR
        value: /root/.cache/bazel
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      volumeMounts:
      - name: cache-ssd
        mountPath: /root/.cache
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          memory: "6Gi"
    volumes:
    - name: cache-ssd
      hostPath:
        path: /mnt/disks/ssd0
  run_after_success:
  - name: periodic-kubernetes-bazel-test-1-9
    agent: kubernetes
    labels:
      preset-service-account: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.8.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/kubernetes=release-1.9"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--" # end bootstrap args, scenario args below
        - "--test=//... -//build/... -//vendor/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--build_tag_filters=-e2e,-integration"
        - "--test-args=--test_tag_filters=-e2e,-integration"
        - "--test-args=--flaky_test_attempts=3"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        securityContext:
          privileged: true
        volumeMounts:
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: periodic-kubernetes-e2e-kubeadm-gce-1-9
    agent: kubernetes
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
        args:
        - "--repo=k8s.io/kubernetes=release-1.9"
        - "--clean"
        - "--timeout=320"
        - "--upload=gs://kubernetes-jenkins/logs"
  - name: periodic-kubernetes-e2e-kubeadm-gce-upgrade-1-8-1-9
    agent: kubernetes
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
        args:
        - "--repo=k8s.io/kubernetes=release-1.9"
        - "--clean"
        - "--timeout=320"
        - "--upload=gs://kubernetes-jenkins/logs"

- name: periodic-kubernetes-bazel-test-1-10
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: true
    preset-bazel-scratch-dir: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-1.10
      args:
      - "--clean"
      - --root=/go/src
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.10"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--" # end bootstrap args, scenario args below
      - "--test=//... -//build/... -//vendor/..."
      - "--manual-test=//hack:verify-all"
      - "--test-args=--config=unit"
      - "--test-args=--build_tag_filters=-e2e,-integration"
      - "--test-args=--test_tag_filters=-e2e,-integration"
      - "--test-args=--flaky_test_attempts=3"
      env:
      - name: BAZEL_REMOTE_CACHE_ENABLED
        value: "true"
      # TODO(bentheelder): switch to kubernetes_execute_bazel and consider dropping this
      - name: REPO_OWNER
        value: kubernetes
      - name: REPO_NAME
        value: kubernetes
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"
  run_after_success:
  - name: periodic-kubernetes-e2e-kubeadm-gce-1-10
    agent: kubernetes
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
        args:
        - "--repo=k8s.io/kubernetes=release-1.10"
        - "--clean"
        - "--timeout=320"
        - "--upload=gs://kubernetes-jenkins/logs"

  - name: periodic-kubernetes-e2e-kubeadm-gce-upgrade-1-9-1-10
    agent: kubernetes
    labels:
      preset-service-account: true
      preset-k8s-ssh: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180305-211d7beff
        args:
        - "--repo=k8s.io/kubernetes=release-1.10"
        - "--clean"
        - "--timeout=320"
        - "--upload=gs://kubernetes-jenkins/logs"

- interval: 24h
  agent: kubernetes
  name: periodic-kubernetes-e2e-debs-pushed
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - args:
      - --timeout=60
      - --repo=k8s.io/kubeadm=master
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always

- name: periodic-test-infra-close
  interval: 1h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/commenter:v20170808-abf66782
      args:
      - |-
        --query=org:kubernetes
        -label:lifecycle/frozen
        label:lifecycle/rotten
      - --updated=720h
      - --token=/etc/token/bot-github-token
      - |-
        --comment=Rotten issues close after 30d of inactivity.
        Reopen the issue with `/reopen`.
        Mark the issue as fresh with `/remove-lifecycle rotten`.

        Send feedback to sig-testing, kubernetes/test-infra and/or [fejta](https://github.com/fejta).
        /close
      - --template
      - --ceiling=10
      - --confirm
      volumeMounts:
      - name: token
        mountPath: /etc/token
    volumes:
    - name: token
      secret:
        secretName: fejta-bot-token

- name: periodic-test-infra-retester
  interval: 20m  # Retest at most 1 PR per 20m, which should not DOS the queue.
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/commenter:v20170808-abf66782
      args:
      - |-
        --query=is:pr
        -label:do-not-merge
        -label:do-not-merge/blocked-paths
        -label:do-not-merge/cherry-pick-not-approved
        -label:do-not-merge/hold
        -label:do-not-merge/release-note-label-needed
        -label:do-not-merge/work-in-progress
        label:lgtm
        label:approved
        status:failure
        -label:needs-rebase
        -label:needs-ok-to-test
        -label:"cncf-cla: no"
        repo:kubernetes/kubernetes
      - --token=/etc/token/bot-github-token
      - |-
        --comment=/retest
        This bot automatically retries jobs that failed/flaked on approved PRs (send feedback to [fejta](https://github.com/fejta)).

        Review the [full test history](https://k8s-gubernator.appspot.com/pr/{{.Number}}) for this PR.

        Silence the bot with an `/lgtm cancel` comment for consistent failures.

      - --template
      - --ceiling=1
      - --confirm
      volumeMounts:
      - name: token
        mountPath: /etc/token
    volumes:
    - name: token
      secret:
        secretName: fejta-bot-token

- name: periodic-test-infra-rotten
  interval: 1h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/commenter:v20170808-abf66782
      args:
      - |-
        --query=org:kubernetes
        -label:lifecycle/frozen
        label:lifecycle/stale
        -label:lifecycle/rotten
      - --updated=720h
      - --token=/etc/token/bot-github-token
      - |-
        --comment=Stale issues rot after 30d of inactivity.
        Mark the issue as fresh with `/remove-lifecycle rotten`.
        Rotten issues close after an additional 30d of inactivity.

        If this issue is safe to close now please do so with `/close`.

        Send feedback to sig-testing, kubernetes/test-infra and/or [fejta](https://github.com/fejta).
        /lifecycle rotten
        /remove-lifecycle stale
      - --template
      - --ceiling=10
      - --confirm
      volumeMounts:
      - name: token
        mountPath: /etc/token
    volumes:
    - name: token
      secret:
        secretName: fejta-bot-token

- name: periodic-test-infra-stale
  interval: 1h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/commenter:v20170808-abf66782
      args:
      - |-
        --query=org:kubernetes
        -label:lifecycle/frozen
        -label:lifecycle/stale
        -label:lifecycle/rotten
      - --updated=2160h
      - --token=/etc/token/bot-github-token
      - |-
        --comment=Issues go stale after 90d of inactivity.
        Mark the issue as fresh with `/remove-lifecycle stale`.
        Stale issues rot after an additional 30d of inactivity and eventually close.

        If this issue is safe to close now please do so with `/close`.

        Send feedback to sig-testing, kubernetes/test-infra and/or [fejta](https://github.com/fejta).
        /lifecycle stale
      - --template
      - --ceiling=10
      - --confirm
      volumeMounts:
      - name: token
        mountPath: /etc/token
    volumes:
    - name: token
      secret:
        secretName: fejta-bot-token

- interval: 2h
  agent: kubernetes
  name: spark-periodic-default-gke
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - "--clean"
      - "--job=$(JOB_NAME)"
      - "--repo=github.com/apache-spark-on-k8s/spark-integration=master"
      - "--upload=gs://kubernetes-jenkins/logs/"
      - "--timeout=150"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          cpu: 6
          memory: "8Gi"
    volumes:
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- interval: 2h
  agent: kubernetes
  name: spark-periodic-latest-gke
  labels:
    preset-service-account: true
    preset-k8s-ssh: true
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180305-98b9ccd6e-master
      args:
      - "--clean"
      - "--job=$(JOB_NAME)"
      - "--repo=github.com/apache-spark-on-k8s/spark-integration=master"
      - "--upload=gs://kubernetes-jenkins/logs/"
      - "--timeout=150"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          cpu: 6
          memory: "8Gi"
    volumes:
    - name: docker-graph
      hostPath:
        path: /mnt/disks/ssd0/docker-graph

- name: tf-minigo-periodic
  interval: 8h
  agent: kubernetes
  labels:
    preset-service-account: true
  spec:
    containers:
    - image: gcr.io/minigo-testing/minigo-prow-harness-v2:latest
      imagePullPolicy: Always
      args:
      - "--clean"
      - "--job=$(JOB_NAME)"
      - "--repo=github.com/tensorflow/minigo=master"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
