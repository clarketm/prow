plank:
  job_url_template: 'https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/{{if eq .Spec.Type "presubmit"}}pr-logs/pull{{else if eq .Spec.Type "batch"}}pr-logs/pull{{else}}logs{{end}}{{if ne .Spec.Refs.Org ""}}{{if ne .Spec.Refs.Org "kubernetes"}}/{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}{{else if ne .Spec.Refs.Repo "kubernetes"}}/{{.Spec.Refs.Repo}}{{end}}{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/'
  report_template: '[Full PR test history](https://k8s-gubernator.appspot.com/pr/{{if eq .Spec.Refs.Org "kubernetes"}}{{if eq .Spec.Refs.Repo "kubernetes"}}{{else}}{{.Spec.Refs.Repo}}/{{end}}{{else}}{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}/{{end}}{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}). [Your PR dashboard](https://k8s-gubernator.appspot.com/pr/{{with index .Spec.Refs.Pulls 0}}{{.Author}}{{end}}). Please help us cut down on flakes by [linking to](https://github.com/kubernetes/community/blob/master/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/{{.Spec.Refs.Org}}/{{.Spec.Refs.Repo}}/issues?q=is:issue+is:open) when you hit one in your PR.'

jenkins_operator:
  job_url_template: 'https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/{{if eq .Spec.Type "presubmit"}}pr-logs/pull{{else if eq .Spec.Type "batch"}}pr-logs/pull{{else}}logs{{end}}{{if ne .Spec.Refs.Org ""}}{{if ne .Spec.Refs.Org "kubernetes"}}/{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}{{else if ne .Spec.Refs.Repo "kubernetes"}}/{{.Spec.Refs.Repo}}{{end}}{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/'
  report_template: '[Full PR test history](https://k8s-gubernator.appspot.com/pr/{{if eq .Spec.Refs.Org "kubernetes"}}{{if eq .Spec.Refs.Repo "kubernetes"}}{{else}}{{.Spec.Refs.Repo}}/{{end}}{{else}}{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}/{{end}}{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}). [Your PR dashboard](https://k8s-gubernator.appspot.com/pr/{{with index .Spec.Refs.Pulls 0}}{{.Author}}{{end}}). Please help us cut down on flakes by [linking to](https://github.com/kubernetes/community/blob/master/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/{{.Spec.Refs.Org}}/{{.Spec.Refs.Repo}}/issues?q=is:issue+is:open) when you hit one in your PR.'

sinker:
  resync_period: 1h
  max_prowjob_age: 48h
  max_pod_age: 1h

deck:
  external_agent_logs:
  - agent: jenkins
    url_template: 'http://jenkins-operator/job/{{.Spec.Job}}/{{.Status.BuildID}}/consoleText'

prowjob_namespace: default
pod_namespace: test-pods
log_level: info

tide:
  queries:
  - "type:pr state:open repo:kubernetes/test-infra repo:kubernetes/federation repo:kubernetes/kubectl label:lgtm label:approved -label:needs-ok-to-test -label:do-not-merge/work-in-progress -label:do-not-merge/hold label:\"cncf-cla: yes\""

push_gateway:
  endpoint: pushgateway

presubmits:
  google/cadvisor:
  - name: pull-cadvisor-e2e
    agent: jenkins
    always_run: true
    context: pull-cadvisor-e2e
    rerun_command: "/test pull-cadvisor-e2e"
    trigger: "(?m)^/test( all| pull-cadvisor-e2e),?(\\s+|$)"
  kubernetes/charts:
  - name: pull-charts-e2e
    agent: jenkins
    always_run: true
    context: pull-charts-e2e
    rerun_command: "/test pull-charts-e2e"
    trigger: "(?m)^/test( all| pull-charts-e2e),?(\\s+|$)"
  kubernetes/community:
  - name: pull-community-verify
    agent: kubernetes
    context: pull-community-verify
    branches:
    - master
    rerun_command: "/test pull-community-verify"
    trigger: "(?m)^/test( all| pull-community-verify),?(\\s+|$)"
    always_run: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  kubernetes/dns:
  - name: pull-kubernetes-dns-test
    agent: kubernetes
    context: pull-kubernetes-dns-test
    branches:
    - master
    rerun_command: "/test pull-kubernetes-dns-test"
    trigger: "(?m)^/test( all| pull-kubernetes-dns-test),?(\\s+|$)"
    always_run: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  kubernetes/ingress-gce:
  - name: pull-kubernetes-ingress-gce-test
    agent: kubernetes
    context: pull-kubernetes-ingress-gce-test
    branches:
    - master
    rerun_command: "/test pull-kubernetes-ingress-gce-test"
    trigger: "(?m)^/test( all| pull-kubernetes-ingress-gce-test),?(\\s+|$)"
    always_run: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  GoogleCloudPlatform/k8s-multicluster-ingress:
  - name: pull-kubernetes-multicluster-ingress-test
    agent: kubernetes
    context: pull-kubernetes-multicluster-ingress-test
    branches:
    - master
    rerun_command: "/test pull-kubernetes-multicluster-ingress-test"
    trigger: "(?m)^/test( all| pull-kubernetes-multicluster-ingress-test),?(\\s+|$)"
    always_run: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=github.com/GoogleCloudPlatform/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: coveralls
          mountPath: /etc/coveralls-token
          readOnly: true
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: coveralls
        secret:
          secretName: k8s-multicluster-ingress-coveralls-token
  kubernetes/federation:
  - name: pull-federation-bazel-test
    agent: kubernetes
    context: pull-federation-bazel-test
    always_run: true
    rerun_command: "/test pull-federation-bazel-test"
    trigger: "(?m)^/test( all| pull-federation-bazel-test),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.6.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--test=//... -//build/... -//vendor/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--build_tag_filters=-e2e"
        - "--test-args=--test_tag_filters=-e2e"
        - "--test-args=--flaky_test_attempts=3"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: pull-federation-e2e-gce
    agent: jenkins
    always_run: true
    context: pull-federation-e2e-gce
    rerun_command: "/test pull-federation-e2e-gce"
    trigger: "(?m)^/test( all| pull-federation-e2e-gce),?(\\s+|$)"
  - name: pull-federation-verify
    agent: kubernetes
    context: pull-federation-verify
    rerun_command: "/test pull-federation-verify"
    trigger: "/test( all| pull-federation-verify)"
    always_run: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  kubernetes/heapster:
  - name: pull-heapster-e2e
    agent: jenkins
    always_run: true
    context: pull-heapster-e2e
    rerun_command: "/test pull-heapster-e2e"
    trigger: "(?m)^/test( all| pull-heapster-e2e),?(\\s+|$)"
  kubernetes/kops:
  - name: pull-kops-e2e-kubernetes-aws
    agent: jenkins
    always_run: true
    context: pull-kops-e2e-kubernetes-aws
    rerun_command: "/test pull-kops-e2e-kubernetes-aws"
    trigger: "(?m)^/test( all| pull-kops-e2e-kubernetes-aws),?(\\s+|$)"
  kubernetes/cluster-registry:
  - name: pull-cluster-registry-bazel
    agent: kubernetes
    context: pull-cluster-registry-bazel
    always_run: true
    rerun_command: "/test pull-cluster-registry-bazel"
    trigger: "(?m)^/test( all| pull-cluster-registry-bazel),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.6.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "2Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  kubernetes-incubator/cri-containerd:
  - name: pull-cri-containerd-build
    agent: kubernetes
    always_run: true
    context: pull-cri-containerd-build
    rerun_command: "/test pull-cri-containerd-build"
    trigger: "(?m)^/test( all| pull-cri-containerd-build),?(\\s+|$)"
    branches:
    - master
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=github.com/kubernetes-incubator/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
      volumes:
      - name: service
        secret:
          secretName: service-account
    run_after_success:
    - name: pull-cri-containerd-node-e2e
      agent: kubernetes
      branches:
      - master
      always_run: true
      skip_report: false
      max_concurrency: 8
      context: pull-cri-containerd-node-e2e
      rerun_command: "/test pull-cri-containerd-node-e2e"
      trigger: "(?m)^/test( all| pull-cri-containerd-node-e2e),?(\\s+|$)"
      spec:
        containers:
        - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
          args:
          - --root=/go/src
          - "--clean"
          - "--git-cache=/root/.cache/git"
          - "--job=$(JOB_NAME)"
          - "--repo=k8s.io/kubernetes"
          - "--repo=github.com/kubernetes-incubator/$(REPO_NAME)=$(PULL_REFS)"
          - "--service-account=/etc/service-account/service-account.json"
          - "--upload=gs://kubernetes-jenkins/pr-logs"
          - "--timeout=90"
          - "--"
          - "--node-args=--image-config-file=test/e2e_node/image-config.yaml --image-config-dir=$GOPATH/src/github.com/kubernetes-incubator/cri-containerd --node-env=PULL_REFS=$(PULL_REFS)"
          env:
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/service-account/service-account.json
          - name: USER
            value: prow
          - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
            value: /etc/ssh-key-secret/ssh-private
          - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
            value: /etc/ssh-key-secret/ssh-public
          volumeMounts:
          - mountPath: /etc/service-account
            name: service
            readOnly: true
          - mountPath: /etc/ssh-key-secret
            name: ssh
            readOnly: true
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
        volumes:
        - name: service
          secret:
            secretName: service-account
        - name: ssh
          secret:
            defaultMode: 256
            secretName: ssh-key-secret
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0
  - name: pull-cri-containerd-verify
    agent: kubernetes
    always_run: true
    context: pull-cri-containerd-verify
    rerun_command: "/test pull-cri-containerd-verify"
    trigger: "(?m)^/test( all| pull-cri-containerd-verify),?(\\s+|$)"
    branches:
    - master
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=github.com/kubernetes-incubator/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
      volumes:
      - name: service
        secret:
          secretName: service-account
  kubernetes/kubernetes:
  - name: pull-kubernetes-bazel-build
    agent: kubernetes
    context: pull-kubernetes-bazel-build
    always_run: true
    rerun_command: "/test pull-kubernetes-bazel-build"
    trigger: "(?m)^/test( all| pull-kubernetes-bazel-build),?(\\s+|$)"
    skip_branches:
    - release-1.6 # doesn't have BUILD files under //vendor/k8s.io
    - release-1.7 # different target set
    - release-1.8 # different target set
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.6.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
    run_after_success:
    - name: pull-kubernetes-e2e-kubeadm-gce
      agent: kubernetes
      context: pull-kubernetes-e2e-kubeadm-gce
      max_concurrency: 8
      skip_report: true
      run_if_changed: '^(cmd/kubeadm|build/debs).*$'
      rerun_command: "/test pull-kubernetes-e2e-kubeadm-gce"
      trigger: "(?m)^/test pull-kubernetes-e2e-kubeadm-gce,?(\\s+|$)"
      skip_branches:
      - release-1.6 # doesn't have BUILD files under //vendor/k8s.io
      - release-1.7 # different target set
      - release-1.8 # different target set
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20171120-fd7d8854
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--upload=gs://kubernetes-jenkins/pr-logs"
          - "--git-cache=/root/.cache/git"
          - "--timeout=75"
          - "--clean"
          env:
          - name: USER
            value: prow
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/service-account/service-account.json
          - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
            value: /etc/ssh-key-secret/ssh-private
          - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
            value: /etc/ssh-key-secret/ssh-public
          - name: SKIP_RELEASE_VALIDATION # See: https://github.com/kubernetes/kubernetes/pull/50391
            value: true
          volumeMounts:
          - name: service
            mountPath: /etc/service-account
            readOnly: true
          - name: ssh
            mountPath: /etc/ssh-key-secret
            readOnly: true
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
        volumes:
        - name: service
          secret:
            secretName: service-account
        - name: ssh
          secret:
            secretName: ssh-key-secret
            defaultMode: 0400
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0
  - name: pull-kubernetes-bazel-build
    agent: kubernetes
    context: pull-kubernetes-bazel-build
    always_run: true
    rerun_command: "/test pull-kubernetes-bazel-build"
    trigger: "(?m)^/test( all| pull-kubernetes-bazel-build),?(\\s+|$)"
    branches:
    - release-1.7
    - release-1.8
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.6.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--build=//cmd/... //pkg/... //federation/... //plugin/... //third_party/... //examples/... //test/... //vendor/k8s.io/..."
        - "--release=//build/release-tars"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
    run_after_success:
    - name: pull-kubernetes-e2e-kubeadm-gce
      agent: kubernetes
      context: pull-kubernetes-e2e-kubeadm-gce
      max_concurrency: 8
      skip_report: true
      run_if_changed: '^(cmd/kubeadm|build/debs).*$'
      rerun_command: "/test pull-kubernetes-e2e-kubeadm-gce"
      trigger: "(?m)^/test pull-kubernetes-e2e-kubeadm-gce,?(\\s+|$)"
      branches:
      - release-1.7
      - release-1.8
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20171120-fd7d8854
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--upload=gs://kubernetes-jenkins/pr-logs"
          - "--git-cache=/root/.cache/git"
          - "--timeout=75"
          - "--clean"
          env:
          - name: USER
            value: prow
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/service-account/service-account.json
          - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
            value: /etc/ssh-key-secret/ssh-private
          - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
            value: /etc/ssh-key-secret/ssh-public
          - name: SKIP_RELEASE_VALIDATION # See: https://github.com/kubernetes/kubernetes/pull/50391
            value: true
          volumeMounts:
          - name: service
            mountPath: /etc/service-account
            readOnly: true
          - name: ssh
            mountPath: /etc/ssh-key-secret
            readOnly: true
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
        volumes:
        - name: service
          secret:
            secretName: service-account
        - name: ssh
          secret:
            secretName: ssh-key-secret
            defaultMode: 0400
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0
  - name: pull-kubernetes-bazel-build
    agent: kubernetes
    context: pull-kubernetes-bazel-build
    always_run: true
    rerun_command: "/test pull-kubernetes-bazel-build"
    trigger: "(?m)^/test( all| pull-kubernetes-bazel-build),?(\\s+|$)"
    branches:
    - release-1.6
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.5.2
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--build=//cmd/... //pkg/... //federation/... //plugin/... //third_party/... //examples/... //test/..."
        - "--release=//build/release-tars"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
    run_after_success:
    - name: pull-kubernetes-e2e-kubeadm-gce
      agent: kubernetes
      context: pull-kubernetes-e2e-kubeadm-gce
      max_concurrency: 8
      skip_report: true
      run_if_changed: '^(cmd/kubeadm|build/debs).*$'
      rerun_command: "/test pull-kubernetes-e2e-kubeadm-gce"
      trigger: "(?m)^/test pull-kubernetes-e2e-kubeadm-gce,?(\\s+|$)"
      branches:
      - release-1.6
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20171120-fd7d8854
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--upload=gs://kubernetes-jenkins/pr-logs"
          - "--git-cache=/root/.cache/git"
          - "--timeout=75"
          - "--clean"
          env:
          - name: USER
            value: prow
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/service-account/service-account.json
          - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
            value: /etc/ssh-key-secret/ssh-private
          - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
            value: /etc/ssh-key-secret/ssh-public
          - name: SKIP_RELEASE_VALIDATION # See: https://github.com/kubernetes/kubernetes/pull/50391
            value: true
          volumeMounts:
          - name: service
            mountPath: /etc/service-account
            readOnly: true
          - name: ssh
            mountPath: /etc/ssh-key-secret
            readOnly: true
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
        volumes:
        - name: service
          secret:
            secretName: service-account
        - name: ssh
          secret:
            secretName: ssh-key-secret
            defaultMode: 0400
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0

  - name: pull-kubernetes-bazel-build-canary
    agent: kubernetes
    context: pull-kubernetes-bazel-build-canary
    always_run: false
    rerun_command: "/test pull-kubernetes-bazel-build-canary"
    trigger: "(?m)^/test pull-kubernetes-bazel-build-canary,?(\\s+|$)"
    branches:
    - master
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:latest-latest
        imagePullPolicy: Always
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--batch" # mitigation for https://github.com/bazelbuild/bazel/issues/3956
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

  - name: pull-kubernetes-bazel-test
    agent: kubernetes
    context: pull-kubernetes-bazel-test
    always_run: true
    rerun_command: "/test pull-kubernetes-bazel-test"
    trigger: "(?m)^/test( all| pull-kubernetes-bazel-test),?(\\s+|$)"
    skip_branches:
    - release-1.6 # doesn't have BUILD files under //vendor/k8s.io
    - release-1.7 # different set of targets
    - release-1.8 # different set of targets
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.6.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--test=//... -//build/... -//vendor/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--build_tag_filters=-e2e,-integration"
        - "--test-args=--test_tag_filters=-e2e,-integration"
        - "--test-args=--flaky_test_attempts=3"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: pull-kubernetes-bazel-test
    agent: kubernetes
    context: pull-kubernetes-bazel-test
    always_run: true
    rerun_command: "/test pull-kubernetes-bazel-test"
    trigger: "(?m)^/test( all| pull-kubernetes-bazel-test),?(\\s+|$)"
    branches:
    - release-1.7
    - release-1.8
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.6.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--test=//cmd/... //pkg/... //federation/... //plugin/... //third_party/... //hack/... //vendor/k8s.io/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--test_tag_filters=-integration"
        - "--test-args=--flaky_test_attempts=3"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: pull-kubernetes-bazel-test
    agent: kubernetes
    context: pull-kubernetes-bazel-test
    always_run: true
    rerun_command: "/test pull-kubernetes-bazel-test"
    trigger: "(?m)^/test( all| pull-kubernetes-bazel-test),?(\\s+|$)"
    branches:
    - release-1.6
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.5.2
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        # -//pkg/kubelet/config:go_default_test because: https://github.com/kubernetes/kubernetes/issues/53016
        - "--test=//cmd/... //pkg/... //federation/... //plugin/... //third_party/... //hack/... -//pkg/kubelet/config:go_default_test"
        - "--manual-test=//hack:verify-all"
        - "--test-args=--test_tag_filters=-integration"
        - "--test-args=--flaky_test_attempts=3"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

  - name: pull-kubernetes-bazel-test-canary
    agent: kubernetes
    context: pull-kubernetes-bazel-test-canary
    always_run: false
    rerun_command: "/test pull-kubernetes-bazel-test-canary"
    trigger: "(?m)^/test pull-kubernetes-bazel-test-canary,?(\\s+|$)"
    branches:
    - master
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:latest-latest
        imagePullPolicy: Always
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--batch" # mitigation for https://github.com/bazelbuild/bazel/issues/3956
        - "--test=//... -//build/... -//vendor/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--build_tag_filters=-e2e"
        - "--test-args=--test_tag_filters=-e2e"
        - "--test-args=--flaky_test_attempts=3"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

  - name: pull-kubernetes-cross
    agent: kubernetes
    context: pull-kubernetes-cross
    rerun_command: "/test pull-kubernetes-cross"
    trigger: "(?m)^/test pull-kubernetes-cross,?(\\s+|$)"
    run_if_changed: '^(build\/|hack\/lib\/)|(Makefile)|(.*_(windows|linux|osx|unsupported)(_test)?\.go)$'
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bootstrap:v20171120-b24b1023
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        # docker-in-docker needs privilged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        - name: docker-graph
          mountPath: /docker-graph
        - name: var-lib-docker
          mountPath: /var/lib/docker
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            cpu: 6
            memory: "15Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph
      - name: var-lib-docker
        emptyDir: {}
  - name: pull-kubernetes-cross-prow
    agent: kubernetes
    context: pull-kubernetes-cross-prow
    rerun_command: "/test pull-kubernetes-cross-prow"
    trigger: "(?m)^/test pull-kubernetes-cross-prow,?(\\s+|$)"
    always_run: false
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bootstrap:latest
        imagePullPolicy: Always
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        # docker-in-docker needs privilged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        - name: docker-graph
          mountPath: /docker-graph
        - name: var-lib-docker
          mountPath: /var/lib/docker
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            cpu: 6
            memory: "15Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph
      - name: var-lib-docker
        emptyDir: {}
  - name: pull-kubernetes-e2e-gce
    agent: kubernetes
    context: pull-kubernetes-e2e-gce
    rerun_command: "/test pull-kubernetes-e2e-gce"
    trigger: "(?m)^/test (all|pull-kubernetes-e2e-gce),?(\\s+|$)"
    always_run: true
    # TODO(bentheelder): enforce this pattern (skip all releases) or implement
    # something better like https://github.com/kubernetes/test-infra/pull/4918
    skip_branches:
    - release-1.6 # per-release image
    - release-1.7 # per-release image
    - release-1.8 # per-release image
    spec:
      containers:
      - args:
        - --root=/go/src
        - --repo=k8s.io/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --git-cache=/root/.cache/git
        - --clean
        - --timeout=90
        # the release-1.6 version of this job uses Jenkins, so here we override
        # some args for jobs on Prow
        - --
        - --build=bazel
        - --mode=local
        # this only works for 1.7+
        - --runtime-config=batch/v2alpha1=true,admissionregistration.k8s.io/v1alpha1=true
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: USER
          value: prow
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        # Make Bazel use shared cache for its root
        # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
        volumeMounts:
        - mountPath: /etc/service-account
          name: service
          readOnly: true
        - mountPath: /etc/ssh-key-secret
          name: ssh
          readOnly: true
        - mountPath: /root/.cache
          name: cache-ssd
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          defaultMode: 256
          secretName: ssh-key-secret
      - hostPath:
          path: /mnt/disks/ssd0
        name: cache-ssd
  - name: pull-kubernetes-e2e-gce
    agent: kubernetes
    context: pull-kubernetes-e2e-gce
    rerun_command: "/test pull-kubernetes-e2e-gce"
    trigger: "(?m)^/test (all|pull-kubernetes-e2e-gce),?(\\s+|$)"
    always_run: true
    branches:
    - release-1.8
    spec:
      containers:
      - args:
        - --root=/go/src
        - --repo=k8s.io/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --git-cache=/root/.cache/git
        - --clean
        - --timeout=90
        # the release-1.6 version of this job uses Jenkins, so here we override
        # some args for jobs on Prow
        - --
        - --build=bazel
        - --mode=local
        # this only works for 1.7+
        - --runtime-config=batch/v2alpha1=true,admissionregistration.k8s.io/v1alpha1=true
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: USER
          value: prow
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        # Make Bazel use shared cache for its root
        # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.8
        volumeMounts:
        - mountPath: /etc/service-account
          name: service
          readOnly: true
        - mountPath: /etc/ssh-key-secret
          name: ssh
          readOnly: true
        - mountPath: /root/.cache
          name: cache-ssd
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          defaultMode: 256
          secretName: ssh-key-secret
      - hostPath:
          path: /mnt/disks/ssd0
        name: cache-ssd
  - name: pull-kubernetes-e2e-gce
    agent: kubernetes
    context: pull-kubernetes-e2e-gce
    rerun_command: "/test pull-kubernetes-e2e-gce"
    trigger: "(?m)^/test (all|pull-kubernetes-e2e-gce),?(\\s+|$)"
    always_run: true
    branches:
    - release-1.7
    spec:
      containers:
      - args:
        - --root=/go/src
        - --repo=k8s.io/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --git-cache=/root/.cache/git
        - --clean
        - --timeout=90
        # the release-1.6 version of this job uses Jenkins, so here we override
        # some args for jobs on Prow
        - --
        - --build=bazel
        - --mode=local
        # this only works for 1.7+
        - --runtime-config=batch/v2alpha1=true,admissionregistration.k8s.io/v1alpha1=true
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: USER
          value: prow
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        # Make Bazel use shared cache for its root
        # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.7
        volumeMounts:
        - mountPath: /etc/service-account
          name: service
          readOnly: true
        - mountPath: /etc/ssh-key-secret
          name: ssh
          readOnly: true
        - mountPath: /root/.cache
          name: cache-ssd
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          defaultMode: 256
          secretName: ssh-key-secret
      - hostPath:
          path: /mnt/disks/ssd0
        name: cache-ssd
  # bazel build works for 1.6 but not bazel-release :-(
  - name: pull-kubernetes-e2e-gce
    agent: jenkins
    context: pull-kubernetes-e2e-gce
    rerun_command: "/test pull-kubernetes-e2e-gce"
    trigger: "(?m)^/test (all|pull-kubernetes-e2e-gce),?(\\s+|$)"
    always_run: true
    branches:
    - release-1.6

  - name: pull-kubernetes-e2e-gce-device-plugin-gpu
    agent: kubernetes
    skip_branches:
    - release-1.6
    - release-1.7
    always_run: true
    skip_report: false
    max_concurrency: 12
    context: pull-kubernetes-e2e-gce-device-plugin-gpu
    rerun_command: "/test pull-kubernetes-e2e-gce-device-plugin-gpu"
    trigger: "(?m)^/test( all| pull-kubernetes-e2e-gce-device-plugin-gpu),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: USER
          value: prow
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/service-account
          name: service
          readOnly: true
        - mountPath: /etc/ssh-key-secret
          name: ssh
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          defaultMode: 256
          secretName: ssh-key-secret
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

  - name: pull-kubernetes-e2e-gke-device-plugin-gpu
    agent: kubernetes
    skip_branches:
    - release-1.6
    - release-1.7
    always_run: false
    skip_report: false
    max_concurrency: 1
    context: pull-kubernetes-e2e-gke-device-plugin-gpu
    rerun_command: "/test pull-kubernetes-e2e-gke-device-plugin-gpu"
    trigger: "(?m)^/test pull-kubernetes-e2e-gke-device-plugin-gpu,?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: USER
          value: prow
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/service-account
          name: service
          readOnly: true
        - mountPath: /etc/ssh-key-secret
          name: ssh
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          defaultMode: 256
          secretName: ssh-key-secret
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

  - name: pull-kubernetes-e2e-gke-gci
    agent: jenkins
    context: pull-kubernetes-e2e-gke-gci
    rerun_command: "/test pull-kubernetes-e2e-gke-gci"
    trigger: "(?m)^/test pull-kubernetes-e2e-gke-gci,?(\\s+|$)"
    run_if_changed: '^(cluster/gce|cluster/addons).*$'
  - name: pull-kubernetes-e2e-kops-aws
    agent: jenkins
    always_run: true
    context: pull-kubernetes-e2e-kops-aws
    rerun_command: "/test pull-kubernetes-e2e-kops-aws"
    trigger: "(?m)^/test( all| pull-kubernetes-e2e-kops-aws),?(\\s+|$)"
  - name: pull-kubernetes-e2e-kops-aws-prow
    agent: kubernetes
    branches:
    - release-1.7
    always_run: false
    skip_report: false
    max_concurrency: 3
    context: pull-kubernetes-e2e-kops-aws-prow
    rerun_command: "/test pull-kubernetes-e2e-kops-aws-prow"
    trigger: "(?m)^/test pull-kubernetes-e2e-kops-aws-prow,?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=75"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: USER
          value: prow
        - name: JENKINS_AWS_CREDENTIALS_FILE
          value: /etc/aws-cred/credentials
        - name: JENKINS_AWS_SSH_PRIVATE_KEY_FILE
          value: /etc/aws-ssh/aws-ssh-private
        - name: JENKINS_AWS_SSH_PUBLIC_KEY_FILE
          value: /etc/aws-ssh/aws-ssh-public
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/service-account
          name: service
          readOnly: true
        - mountPath: /etc/aws-ssh
          name: aws-ssh
          readOnly: true
        - mountPath: /etc/aws-cred
          name: aws-cred
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: aws-ssh
        secret:
          defaultMode: 256
          secretName: aws-ssh-key-secret
      - name: aws-cred
        secret:
          defaultMode: 256
          secretName: aws-cred
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: pull-kubernetes-e2e-kops-aws-prow
    agent: kubernetes
    branches:
    - master
    always_run: false
    skip_report: false
    max_concurrency: 3
    context: pull-kubernetes-e2e-kops-aws-prow
    rerun_command: "/test pull-kubernetes-e2e-kops-aws-prow"
    trigger: "(?m)^/test pull-kubernetes-e2e-kops-aws-prow,?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=75"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: USER
          value: prow
        - name: JENKINS_AWS_CREDENTIALS_FILE
          value: /etc/aws-cred/credentials
        - name: JENKINS_AWS_SSH_PRIVATE_KEY_FILE
          value: /etc/aws-ssh/aws-ssh-private
        - name: JENKINS_AWS_SSH_PUBLIC_KEY_FILE
          value: /etc/aws-ssh/aws-ssh-public
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/service-account
          name: service
          readOnly: true
        - mountPath: /etc/aws-ssh
          name: aws-ssh
          readOnly: true
        - mountPath: /etc/aws-cred
          name: aws-cred
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: aws-ssh
        secret:
          defaultMode: 256
          secretName: aws-ssh-key-secret
      - name: aws-cred
        secret:
          defaultMode: 256
          secretName: aws-cred
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

  - name: pull-kubernetes-kubemark-e2e-gce
    agent: jenkins
    always_run: true
    context: pull-kubernetes-kubemark-e2e-gce
    rerun_command: "/test pull-kubernetes-kubemark-e2e-gce"
    trigger: "(?m)^/test( all| pull-kubernetes-kubemark-e2e-gce),?(\\s+|$)"
    skip_branches:
    - release-1.4
  - name: pull-kubernetes-kubemark-e2e-gce-big
    agent: jenkins
    always_run: false
    context: pull-kubernetes-kubemark-e2e-gce-big
    rerun_command: "/test pull-kubernetes-kubemark-e2e-gce-big"
    trigger: "(?m)^/test pull-kubernetes-kubemark-e2e-gce-big,?(\\s+|$)"
  - name: pull-kubernetes-node-e2e
    agent: kubernetes
    skip_branches:
    - release-1.6
    - release-1.7
    always_run: true
    max_concurrency: 12
    context: pull-kubernetes-node-e2e
    rerun_command: "/test pull-kubernetes-node-e2e"
    trigger: "(?m)^/test( all| pull-kubernetes-node-e2e),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        - "--" # end bootstrap args, scenario args below
        - "--node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config.yaml"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: USER
          value: prow
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        volumeMounts:
        - mountPath: /etc/service-account
          name: service
          readOnly: true
        - mountPath: /etc/ssh-key-secret
          name: ssh
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          defaultMode: 256
          secretName: ssh-key-secret
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: pull-kubernetes-node-e2e
    agent: kubernetes
    branches:
    - release-1.7
    always_run: true
    max_concurrency: 12
    context: pull-kubernetes-node-e2e
    rerun_command: "/test pull-kubernetes-node-e2e"
    trigger: "(?m)^/test( all| pull-kubernetes-node-e2e),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.7
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        - "--" # end bootstrap args, scenario args below
        - "--node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config-1-7.yaml"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: USER
          value: prow
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        volumeMounts:
        - mountPath: /etc/service-account
          name: service
          readOnly: true
        - mountPath: /etc/ssh-key-secret
          name: ssh
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          defaultMode: 256
          secretName: ssh-key-secret
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: pull-kubernetes-node-e2e
    agent: kubernetes
    branches:
    - release-1.6
    always_run: true
    max_concurrency: 12
    context: pull-kubernetes-node-e2e
    rerun_command: "/test pull-kubernetes-node-e2e"
    trigger: "(?m)^/test( all| pull-kubernetes-node-e2e),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.6
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        - "--" # end bootstrap args, scenario args below
        - "--node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config-1-6.yaml"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: USER
          value: prow
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        volumeMounts:
        - mountPath: /etc/service-account
          name: service
          readOnly: true
        - mountPath: /etc/ssh-key-secret
          name: ssh
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          defaultMode: 256
          secretName: ssh-key-secret
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

  - name: pull-kubernetes-unit
    agent: jenkins
    always_run: true
    context: pull-kubernetes-unit
    rerun_command: "/test pull-kubernetes-unit"
    trigger: "(?m)^/test( all| pull-kubernetes-unit),?(\\s+|$)"
  - name: pull-kubernetes-verify
    agent: jenkins
    always_run: true
    context: pull-kubernetes-verify
    rerun_command: "/test pull-kubernetes-verify"
    trigger: "(?m)^/test( all| pull-kubernetes-verify),?(\\s+|$)"
  - name: pull-kubernetes-verify-prow
    agent: kubernetes
    always_run: false
    context: pull-kubernetes-verify-prow
    rerun_command: "/test pull-kubernetes-verify-prow"
    trigger: "(?m)^/test pull-kubernetes-verify-prow,?(\\s+|$)"
    branches:
    - master
    spec:
      containers:
      - image: gcr.io/k8s-testimages/prow-test-image:latest-1.9
        imagePullPolicy: Always
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        # docker-in-docker needs privilged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        - name: docker-graph
          mountPath: /docker-graph
        - name: var-lib-docker
          mountPath: /var/lib/docker
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph
      - name: var-lib-docker
        emptyDir: {}
  - name: pull-kubernetes-verify-prow
    agent: kubernetes
    always_run: false
    context: pull-kubernetes-verify-prow
    rerun_command: "/test pull-kubernetes-verify-prow"
    trigger: "(?m)^/test pull-kubernetes-verify-prow,?(\\s+|$)"
    branches:
    - release-1.8
    spec:
      containers:
      - image: gcr.io/k8s-testimages/prow-test-image:latest-1.8
        imagePullPolicy: Always
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        # docker-in-docker needs privilged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        - name: docker-graph
          mountPath: /docker-graph
        - name: var-lib-docker
          mountPath: /var/lib/docker
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph
      - name: var-lib-docker
        emptyDir: {}
  - name: pull-kubernetes-verify-prow
    agent: kubernetes
    always_run: false
    context: pull-kubernetes-verify-prow
    rerun_command: "/test pull-kubernetes-verify-prow"
    trigger: "(?m)^/test pull-kubernetes-verify-prow,?(\\s+|$)"
    branches:
    - release-1.7
    spec:
      containers:
      - image: gcr.io/k8s-testimages/prow-test-image:latest-1.7
        imagePullPolicy: Always
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        # docker-in-docker needs privilged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        - name: docker-graph
          mountPath: /docker-graph
        - name: var-lib-docker
          mountPath: /var/lib/docker
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph
      - name: var-lib-docker
        emptyDir: {}
  - name: pull-kubernetes-verify-prow
    agent: kubernetes
    always_run: false
    context: pull-kubernetes-verify-prow
    rerun_command: "/test pull-kubernetes-verify-prow"
    trigger: "(?m)^/test pull-kubernetes-verify-prow,?(\\s+|$)"
    branches:
    - release-1.6
    spec:
      containers:
      - image: gcr.io/k8s-testimages/prow-test-image:latest-1.6
        imagePullPolicy: Always
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        # docker-in-docker needs privilged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        - name: docker-graph
          mountPath: /docker-graph
        - name: var-lib-docker
          mountPath: /var/lib/docker
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph
      - name: var-lib-docker
        emptyDir: {}

  kubernetes-security/kubernetes:
  - name: pull-security-kubernetes-bazel-build
    agent: kubernetes
    context: pull-security-kubernetes-bazel-build
    always_run: true
    rerun_command: "/test pull-security-kubernetes-bazel-build"
    trigger: "(?m)^/test( all| pull-security-kubernetes-bazel-build),?(\\s+|$)"
    skip_branches:
    - release-1.6 # doesn't have BUILD files under //vendor/k8s.io
    - release-1.7 # different target set
    - release-1.8 # different target set
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.6.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
    run_after_success:
    - name: pull-security-kubernetes-e2e-kubeadm-gce
      agent: kubernetes
      context: pull-security-kubernetes-e2e-kubeadm-gce
      max_concurrency: 8
      skip_report: true
      run_if_changed: '^(cmd/kubeadm|build/debs).*$'
      rerun_command: "/test pull-security-kubernetes-e2e-kubeadm-gce"
      trigger: "(?m)^/test pull-security-kubernetes-e2e-kubeadm-gce,?(\\s+|$)"
      skip_branches:
      - release-1.6 # doesn't have BUILD files under //vendor/k8s.io
      - release-1.7 # different target set
      - release-1.8 # different target set
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20171120-fd7d8854
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--upload=gs://kubernetes-jenkins/pr-logs"
          - "--git-cache=/root/.cache/git"
          - "--timeout=75"
          - "--clean"
          env:
          - name: USER
            value: prow
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/service-account/service-account.json
          - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
            value: /etc/ssh-key-secret/ssh-private
          - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
            value: /etc/ssh-key-secret/ssh-public
          - name: SKIP_RELEASE_VALIDATION # See: https://github.com/kubernetes/kubernetes/pull/50391
            value: true
          volumeMounts:
          - name: service
            mountPath: /etc/service-account
            readOnly: true
          - name: ssh
            mountPath: /etc/ssh-key-secret
            readOnly: true
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
        volumes:
        - name: service
          secret:
            secretName: service-account
        - name: ssh
          secret:
            secretName: ssh-key-secret
            defaultMode: 0400
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0
  - name: pull-security-kubernetes-bazel-build
    agent: kubernetes
    context: pull-security-kubernetes-bazel-build
    always_run: true
    rerun_command: "/test pull-security-kubernetes-bazel-build"
    trigger: "(?m)^/test( all| pull-security-kubernetes-bazel-build),?(\\s+|$)"
    branches:
    - release-1.7
    - release-1.8
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.6.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--build=//cmd/... //pkg/... //federation/... //plugin/... //third_party/... //examples/... //test/... //vendor/k8s.io/..."
        - "--release=//build/release-tars"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
    run_after_success:
    - name: pull-security-kubernetes-e2e-kubeadm-gce
      agent: kubernetes
      context: pull-security-kubernetes-e2e-kubeadm-gce
      max_concurrency: 8
      skip_report: true
      run_if_changed: '^(cmd/kubeadm|build/debs).*$'
      rerun_command: "/test pull-security-kubernetes-e2e-kubeadm-gce"
      trigger: "(?m)^/test pull-security-kubernetes-e2e-kubeadm-gce,?(\\s+|$)"
      branches:
      - release-1.7
      - release-1.8
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20171120-fd7d8854
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--upload=gs://kubernetes-jenkins/pr-logs"
          - "--git-cache=/root/.cache/git"
          - "--timeout=75"
          - "--clean"
          env:
          - name: USER
            value: prow
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/service-account/service-account.json
          - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
            value: /etc/ssh-key-secret/ssh-private
          - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
            value: /etc/ssh-key-secret/ssh-public
          - name: SKIP_RELEASE_VALIDATION # See: https://github.com/kubernetes/kubernetes/pull/50391
            value: true
          volumeMounts:
          - name: service
            mountPath: /etc/service-account
            readOnly: true
          - name: ssh
            mountPath: /etc/ssh-key-secret
            readOnly: true
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
        volumes:
        - name: service
          secret:
            secretName: service-account
        - name: ssh
          secret:
            secretName: ssh-key-secret
            defaultMode: 0400
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0
  - name: pull-security-kubernetes-bazel-build
    agent: kubernetes
    context: pull-security-kubernetes-bazel-build
    always_run: true
    rerun_command: "/test pull-security-kubernetes-bazel-build"
    trigger: "(?m)^/test( all| pull-security-kubernetes-bazel-build),?(\\s+|$)"
    branches:
    - release-1.6
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.5.2
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--build=//cmd/... //pkg/... //federation/... //plugin/... //third_party/... //examples/... //test/..."
        - "--release=//build/release-tars"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
    run_after_success:
    - name: pull-security-kubernetes-e2e-kubeadm-gce
      agent: kubernetes
      context: pull-security-kubernetes-e2e-kubeadm-gce
      max_concurrency: 8
      skip_report: true
      run_if_changed: '^(cmd/kubeadm|build/debs).*$'
      rerun_command: "/test pull-security-kubernetes-e2e-kubeadm-gce"
      trigger: "(?m)^/test pull-security-kubernetes-e2e-kubeadm-gce,?(\\s+|$)"
      branches:
      - release-1.6
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20171120-fd7d8854
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--upload=gs://kubernetes-jenkins/pr-logs"
          - "--git-cache=/root/.cache/git"
          - "--timeout=75"
          - "--clean"
          env:
          - name: USER
            value: prow
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/service-account/service-account.json
          - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
            value: /etc/ssh-key-secret/ssh-private
          - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
            value: /etc/ssh-key-secret/ssh-public
          - name: SKIP_RELEASE_VALIDATION # See: https://github.com/kubernetes/kubernetes/pull/50391
            value: true
          volumeMounts:
          - name: service
            mountPath: /etc/service-account
            readOnly: true
          - name: ssh
            mountPath: /etc/ssh-key-secret
            readOnly: true
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
        volumes:
        - name: service
          secret:
            secretName: service-account
        - name: ssh
          secret:
            secretName: ssh-key-secret
            defaultMode: 0400
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0
  - name: pull-security-kubernetes-bazel-build-canary
    agent: kubernetes
    context: pull-security-kubernetes-bazel-build-canary
    always_run: false
    rerun_command: "/test pull-security-kubernetes-bazel-build-canary"
    trigger: "(?m)^/test pull-security-kubernetes-bazel-build-canary,?(\\s+|$)"
    branches:
    - master
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:latest-latest
        imagePullPolicy: Always
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--batch" # mitigation for https://github.com/bazelbuild/bazel/issues/3956
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: pull-security-kubernetes-bazel-test
    agent: kubernetes
    context: pull-security-kubernetes-bazel-test
    always_run: true
    rerun_command: "/test pull-security-kubernetes-bazel-test"
    trigger: "(?m)^/test( all| pull-security-kubernetes-bazel-test),?(\\s+|$)"
    skip_branches:
    - release-1.6 # doesn't have BUILD files under //vendor/k8s.io
    - release-1.7 # different set of targets
    - release-1.8 # different set of targets
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.6.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--test=//... -//build/... -//vendor/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--build_tag_filters=-e2e,-integration"
        - "--test-args=--test_tag_filters=-e2e,-integration"
        - "--test-args=--flaky_test_attempts=3"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: pull-security-kubernetes-bazel-test
    agent: kubernetes
    context: pull-security-kubernetes-bazel-test
    always_run: true
    rerun_command: "/test pull-security-kubernetes-bazel-test"
    trigger: "(?m)^/test( all| pull-security-kubernetes-bazel-test),?(\\s+|$)"
    branches:
    - release-1.7
    - release-1.8
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.6.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--test=//cmd/... //pkg/... //federation/... //plugin/... //third_party/... //hack/... //vendor/k8s.io/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--test_tag_filters=-integration"
        - "--test-args=--flaky_test_attempts=3"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: pull-security-kubernetes-bazel-test
    agent: kubernetes
    context: pull-security-kubernetes-bazel-test
    always_run: true
    rerun_command: "/test pull-security-kubernetes-bazel-test"
    trigger: "(?m)^/test( all| pull-security-kubernetes-bazel-test),?(\\s+|$)"
    branches:
    - release-1.6
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.5.2
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        # -//pkg/kubelet/config:go_default_test because: https://github.com/kubernetes/kubernetes/issues/53016
        - "--test=//cmd/... //pkg/... //federation/... //plugin/... //third_party/... //hack/... -//pkg/kubelet/config:go_default_test"
        - "--manual-test=//hack:verify-all"
        - "--test-args=--test_tag_filters=-integration"
        - "--test-args=--flaky_test_attempts=3"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: pull-security-kubernetes-bazel-test-canary
    agent: kubernetes
    context: pull-security-kubernetes-bazel-test-canary
    always_run: false
    rerun_command: "/test pull-security-kubernetes-bazel-test-canary"
    trigger: "(?m)^/test pull-security-kubernetes-bazel-test-canary,?(\\s+|$)"
    branches:
    - master
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:latest-latest
        imagePullPolicy: Always
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--batch" # mitigation for https://github.com/bazelbuild/bazel/issues/3956
        - "--test=//... -//build/... -//vendor/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--build_tag_filters=-e2e"
        - "--test-args=--test_tag_filters=-e2e"
        - "--test-args=--flaky_test_attempts=3"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

  - name: pull-security-kubernetes-cross
    agent: kubernetes
    context: pull-security-kubernetes-cross
    rerun_command: "/test pull-security-kubernetes-cross"
    trigger: "(?m)^/test pull-security-kubernetes-cross,?(\\s+|$)"
    run_if_changed: '^(build\/|hack\/lib\/)|(Makefile)|(.*_(windows|linux|osx|unsupported)(_test)?\.go)$'
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bootstrap:v20171120-b24b1023
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        # docker-in-docker needs privilged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        - name: docker-graph
          mountPath: /docker-graph
        - name: var-lib-docker
          mountPath: /var/lib/docker
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            cpu: 6
            memory: "15Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph
      - name: var-lib-docker
        emptyDir: {}
  - name: pull-security-kubernetes-cross-prow
    agent: kubernetes
    context: pull-security-kubernetes-cross-prow
    rerun_command: "/test pull-security-kubernetes-cross-prow"
    trigger: "(?m)^/test pull-security-kubernetes-cross-prow,?(\\s+|$)"
    always_run: false
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bootstrap:latest
        imagePullPolicy: Always
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: true
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        # docker-in-docker needs privilged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        - name: docker-graph
          mountPath: /docker-graph
        - name: var-lib-docker
          mountPath: /var/lib/docker
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            cpu: 6
            memory: "15Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph
      - name: var-lib-docker
        emptyDir: {}
  - name: pull-security-kubernetes-e2e-gce
    agent: kubernetes
    context: pull-security-kubernetes-e2e-gce
    rerun_command: "/test pull-security-kubernetes-e2e-gce"
    trigger: "(?m)^/test (all|pull-security-kubernetes-e2e-gce),?(\\s+|$)"
    always_run: true
    # TODO(bentheelder): enforce this pattern (skip all releases) or implement
    # something better like https://github.com/kubernetes/test-infra/pull/4918
    skip_branches:
    - release-1.6 # per-release image
    - release-1.7 # per-release image
    - release-1.8 # per-release image
    spec:
      containers:
      - args:
        - --root=/go/src
        - --repo=k8s.io/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --git-cache=/root/.cache/git
        - --clean
        - --timeout=90
         # the release-1.6 version of this job uses Jenkins, so here we override
        # some args for jobs on Prow
        - --
        - --build=bazel
        - --mode=local
        # this only works for 1.7+
        - --runtime-config=batch/v2alpha1=true,admissionregistration.k8s.io/v1alpha1=true
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: USER
          value: prow
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        # Make Bazel use shared cache for its root
        # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
        volumeMounts:
        - mountPath: /etc/service-account
          name: service
          readOnly: true
        - mountPath: /etc/ssh-key-secret
          name: ssh
          readOnly: true
        - mountPath: /root/.cache
          name: cache-ssd
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          defaultMode: 256
          secretName: ssh-key-secret
      - hostPath:
          path: /mnt/disks/ssd0
        name: cache-ssd
  - name: pull-security-kubernetes-e2e-gce
    agent: kubernetes
    context: pull-security-kubernetes-e2e-gce
    rerun_command: "/test pull-security-kubernetes-e2e-gce"
    trigger: "(?m)^/test (all|pull-security-kubernetes-e2e-gce),?(\\s+|$)"
    always_run: true
    branches:
    - release-1.8
    spec:
      containers:
      - args:
        - --root=/go/src
        - --repo=k8s.io/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --git-cache=/root/.cache/git
        - --clean
        - --timeout=90
        # the release-1.6 version of this job uses Jenkins, so here we override
        # some args for jobs on Prow
        - --
        - --build=bazel
        - --mode=local
        # this only works for 1.7+
        - --runtime-config=batch/v2alpha1=true,admissionregistration.k8s.io/v1alpha1=true
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: USER
          value: prow
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        # Make Bazel use shared cache for its root
        # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.8
        volumeMounts:
        - mountPath: /etc/service-account
          name: service
          readOnly: true
        - mountPath: /etc/ssh-key-secret
          name: ssh
          readOnly: true
        - mountPath: /root/.cache
          name: cache-ssd
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          defaultMode: 256
          secretName: ssh-key-secret
      - hostPath:
          path: /mnt/disks/ssd0
        name: cache-ssd
  - name: pull-security-kubernetes-e2e-gce
    agent: kubernetes
    context: pull-security-kubernetes-e2e-gce
    rerun_command: "/test pull-security-kubernetes-e2e-gce"
    trigger: "(?m)^/test (all|pull-security-kubernetes-e2e-gce),?(\\s+|$)"
    always_run: true
    branches:
    - release-1.7
    spec:
      containers:
      - args:
        - --root=/go/src
        - --repo=k8s.io/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --git-cache=/root/.cache/git
        - --clean
        - --timeout=90
        # the release-1.6 version of this job uses Jenkins, so here we override
        # some args for jobs on Prow
        - --
        - --build=bazel
        - --mode=local
        # this only works for 1.7+
        - --runtime-config=batch/v2alpha1=true,admissionregistration.k8s.io/v1alpha1=true
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: USER
          value: prow
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        # Make Bazel use shared cache for its root
        # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.7
        volumeMounts:
        - mountPath: /etc/service-account
          name: service
          readOnly: true
        - mountPath: /etc/ssh-key-secret
          name: ssh
          readOnly: true
        - mountPath: /root/.cache
          name: cache-ssd
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          defaultMode: 256
          secretName: ssh-key-secret
      - hostPath:
          path: /mnt/disks/ssd0
        name: cache-ssd
  # bazel build works for 1.6 but not bazel-release :-(
  - name: pull-security-kubernetes-e2e-gce
    agent: jenkins
    context: pull-security-kubernetes-e2e-gce
    rerun_command: "/test pull-security-kubernetes-e2e-gce"
    trigger: "(?m)^/test (all|pull-security-kubernetes-e2e-gce),?(\\s+|$)"
    always_run: true
    branches:
    - release-1.6
  - name: pull-security-kubernetes-e2e-gce-device-plugin-gpu
    agent: kubernetes
    skip_branches:
    - release-1.6
    - release-1.7
    always_run: true
    skip_report: false
    max_concurrency: 12
    context: pull-security-kubernetes-e2e-gce-device-plugin-gpu
    rerun_command: "/test pull-security-kubernetes-e2e-gce-device-plugin-gpu"
    trigger: "(?m)^/test( all| pull-security-kubernetes-e2e-gce-device-plugin-gpu),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: USER
          value: prow
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/service-account
          name: service
          readOnly: true
        - mountPath: /etc/ssh-key-secret
          name: ssh
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          defaultMode: 256
          secretName: ssh-key-secret
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

  - name: pull-security-kubernetes-e2e-gke-device-plugin-gpu
    agent: kubernetes
    skip_branches:
    - release-1.6
    - release-1.7
    always_run: false
    skip_report: false
    max_concurrency: 1
    context: pull-security-kubernetes-e2e-gke-device-plugin-gpu
    rerun_command: "/test pull-security-kubernetes-e2e-gke-device-plugin-gpu"
    trigger: "(?m)^/test pull-security-kubernetes-e2e-gke-device-plugin-gpu,?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: USER
          value: prow
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/service-account
          name: service
          readOnly: true
        - mountPath: /etc/ssh-key-secret
          name: ssh
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          defaultMode: 256
          secretName: ssh-key-secret
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

  - name: pull-security-kubernetes-e2e-gke-gci
    agent: jenkins
    context: pull-security-kubernetes-e2e-gke-gci
    rerun_command: "/test pull-security-kubernetes-e2e-gke-gci"
    trigger: "(?m)^/test pull-security-kubernetes-e2e-gke-gci,?(\\s+|$)"
    run_if_changed: '^(cluster/gce|cluster/addons).*$'
  - name: pull-security-kubernetes-e2e-kops-aws
    agent: jenkins
    always_run: true
    context: pull-security-kubernetes-e2e-kops-aws
    rerun_command: "/test pull-security-kubernetes-e2e-kops-aws"
    trigger: "(?m)^/test( all| pull-security-kubernetes-e2e-kops-aws),?(\\s+|$)"
  - name: pull-security-kubernetes-e2e-kops-aws-prow
    agent: kubernetes
    branches:
    - release-1.7
    always_run: false
    skip_report: false
    max_concurrency: 3
    context: pull-security-kubernetes-e2e-kops-aws-prow
    rerun_command: "/test pull-security-kubernetes-e2e-kops-aws-prow"
    trigger: "(?m)^/test pull-security-kubernetes-e2e-kops-aws-prow,?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=75"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: USER
          value: prow
        - name: JENKINS_AWS_CREDENTIALS_FILE
          value: /etc/aws-cred/credentials
        - name: JENKINS_AWS_SSH_PRIVATE_KEY_FILE
          value: /etc/aws-ssh/aws-ssh-private
        - name: JENKINS_AWS_SSH_PUBLIC_KEY_FILE
          value: /etc/aws-ssh/aws-ssh-public
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/service-account
          name: service
          readOnly: true
        - mountPath: /etc/aws-ssh
          name: aws-ssh
          readOnly: true
        - mountPath: /etc/aws-cred
          name: aws-cred
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: aws-ssh
        secret:
          defaultMode: 256
          secretName: aws-ssh-key-secret
      - name: aws-cred
        secret:
          defaultMode: 256
          secretName: aws-cred
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: pull-security-kubernetes-e2e-kops-aws-prow
    agent: kubernetes
    branches:
    - master
    always_run: false
    skip_report: false
    max_concurrency: 3
    context: pull-security-kubernetes-e2e-kops-aws-prow
    rerun_command: "/test pull-security-kubernetes-e2e-kops-aws-prow"
    trigger: "(?m)^/test pull-security-kubernetes-e2e-kops-aws-prow,?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=75"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: USER
          value: prow
        - name: JENKINS_AWS_CREDENTIALS_FILE
          value: /etc/aws-cred/credentials
        - name: JENKINS_AWS_SSH_PRIVATE_KEY_FILE
          value: /etc/aws-ssh/aws-ssh-private
        - name: JENKINS_AWS_SSH_PUBLIC_KEY_FILE
          value: /etc/aws-ssh/aws-ssh-public
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/service-account
          name: service
          readOnly: true
        - mountPath: /etc/aws-ssh
          name: aws-ssh
          readOnly: true
        - mountPath: /etc/aws-cred
          name: aws-cred
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: aws-ssh
        secret:
          defaultMode: 256
          secretName: aws-ssh-key-secret
      - name: aws-cred
        secret:
          defaultMode: 256
          secretName: aws-cred
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

  - name: pull-security-kubernetes-kubemark-e2e-gce
    agent: jenkins
    always_run: true
    context: pull-security-kubernetes-kubemark-e2e-gce
    rerun_command: "/test pull-security-kubernetes-kubemark-e2e-gce"
    trigger: "(?m)^/test( all| pull-security-kubernetes-kubemark-e2e-gce),?(\\s+|$)"
    skip_branches:
    - release-1.4
  - name: pull-security-kubernetes-kubemark-e2e-gce-big
    agent: jenkins
    always_run: false
    context: pull-security-kubernetes-kubemark-e2e-gce-big
    rerun_command: "/test pull-security-kubernetes-kubemark-e2e-gce-big"
    trigger: "(?m)^/test pull-security-kubernetes-kubemark-e2e-gce-big,?(\\s+|$)"
  - name: pull-security-kubernetes-node-e2e
    agent: kubernetes
    skip_branches:
    - release-1.6
    - release-1.7
    always_run: true
    max_concurrency: 12
    context: pull-security-kubernetes-node-e2e
    rerun_command: "/test pull-security-kubernetes-node-e2e"
    trigger: "(?m)^/test( all| pull-security-kubernetes-node-e2e),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        - "--" # end bootstrap args, scenario args below
        - "--node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config.yaml"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: USER
          value: prow
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        volumeMounts:
        - mountPath: /etc/service-account
          name: service
          readOnly: true
        - mountPath: /etc/ssh-key-secret
          name: ssh
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          defaultMode: 256
          secretName: ssh-key-secret
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: pull-security-kubernetes-node-e2e
    agent: kubernetes
    branches:
    - release-1.7
    always_run: true
    max_concurrency: 12
    context: pull-security-kubernetes-node-e2e
    rerun_command: "/test pull-security-kubernetes-node-e2e"
    trigger: "(?m)^/test( all| pull-security-kubernetes-node-e2e),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.7
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        - "--" # end bootstrap args, scenario args below
        - "--node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config-1-7.yaml"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: USER
          value: prow
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        volumeMounts:
        - mountPath: /etc/service-account
          name: service
          readOnly: true
        - mountPath: /etc/ssh-key-secret
          name: ssh
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          defaultMode: 256
          secretName: ssh-key-secret
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: pull-security-kubernetes-node-e2e
    agent: kubernetes
    branches:
    - release-1.6
    always_run: true
    max_concurrency: 12
    context: pull-security-kubernetes-node-e2e
    rerun_command: "/test pull-security-kubernetes-node-e2e"
    trigger: "(?m)^/test( all| pull-security-kubernetes-node-e2e),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.6
        args:
        - --root=/go/src
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        - "--" # end bootstrap args, scenario args below
        - "--node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config-1-6.yaml"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: USER
          value: prow
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        volumeMounts:
        - mountPath: /etc/service-account
          name: service
          readOnly: true
        - mountPath: /etc/ssh-key-secret
          name: ssh
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          defaultMode: 256
          secretName: ssh-key-secret
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

  - name: pull-security-kubernetes-unit
    agent: jenkins
    always_run: true
    context: pull-security-kubernetes-unit
    rerun_command: "/test pull-security-kubernetes-unit"
    trigger: "(?m)^/test( all| pull-security-kubernetes-unit),?(\\s+|$)"
  - name: pull-security-kubernetes-verify
    agent: jenkins
    always_run: true
    context: pull-security-kubernetes-verify
    rerun_command: "/test pull-security-kubernetes-verify"
    trigger: "(?m)^/test( all| pull-security-kubernetes-verify),?(\\s+|$)"
  - name: pull-security-kubernetes-verify-prow
    agent: kubernetes
    always_run: false
    context: pull-security-kubernetes-verify-prow
    rerun_command: "/test pull-security-kubernetes-verify-prow"
    trigger: "(?m)^/test pull-security-kubernetes-verify-prow,?(\\s+|$)"
    branches:
    - master
    spec:
      containers:
      - image: gcr.io/k8s-testimages/prow-test-image:latest-1.9
        imagePullPolicy: Always
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        # docker-in-docker needs privilged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        - name: docker-graph
          mountPath: /docker-graph
        - name: var-lib-docker
          mountPath: /var/lib/docker
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph
      - name: var-lib-docker
        emptyDir: {}
  - name: pull-security-kubernetes-verify-prow
    agent: kubernetes
    always_run: false
    context: pull-security-kubernetes-verify-prow
    rerun_command: "/test pull-security-kubernetes-verify-prow"
    trigger: "(?m)^/test pull-security-kubernetes-verify-prow,?(\\s+|$)"
    branches:
    - release-1.8
    spec:
      containers:
      - image: gcr.io/k8s-testimages/prow-test-image:latest-1.8
        imagePullPolicy: Always
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        # docker-in-docker needs privilged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        - name: docker-graph
          mountPath: /docker-graph
        - name: var-lib-docker
          mountPath: /var/lib/docker
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph
      - name: var-lib-docker
        emptyDir: {}
  - name: pull-security-kubernetes-verify-prow
    agent: kubernetes
    always_run: false
    context: pull-security-kubernetes-verify-prow
    rerun_command: "/test pull-security-kubernetes-verify-prow"
    trigger: "(?m)^/test pull-security-kubernetes-verify-prow,?(\\s+|$)"
    branches:
    - release-1.7
    spec:
      containers:
      - image: gcr.io/k8s-testimages/prow-test-image:latest-1.7
        imagePullPolicy: Always
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        # docker-in-docker needs privilged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        - name: docker-graph
          mountPath: /docker-graph
        - name: var-lib-docker
          mountPath: /var/lib/docker
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph
      - name: var-lib-docker
        emptyDir: {}
  - name: pull-security-kubernetes-verify-prow
    agent: kubernetes
    always_run: false
    context: pull-security-kubernetes-verify-prow
    rerun_command: "/test pull-security-kubernetes-verify-prow"
    trigger: "(?m)^/test pull-security-kubernetes-verify-prow,?(\\s+|$)"
    branches:
    - release-1.6
    spec:
      containers:
      - image: gcr.io/k8s-testimages/prow-test-image:latest-1.6
        imagePullPolicy: Always
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        # docker-in-docker needs privilged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        - name: docker-graph
          mountPath: /docker-graph
        - name: var-lib-docker
          mountPath: /var/lib/docker
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
      - name: docker-graph
        hostPath:
          path: /mnt/disks/ssd0/docker-graph
      - name: var-lib-docker
        emptyDir: {}

  kubernetes/test-infra:
  - name: pull-test-infra-bazel
    agent: kubernetes
    context: pull-test-infra-bazel
    branches:
    - master
    always_run: true
    rerun_command: "/test pull-test-infra-bazel"
    trigger: "(?m)^/test( all| pull-test-infra-bazel),?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.7.0
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--batch" # mitigation for https://github.com/bazelbuild/bazel/issues/3956
        - "--build=//... -//vendor/..."
        - "--install=gubernator/test_requirements.txt"
        - "--test=//... //hack:verify-all -//vendor/..."
        - "--test-args=--test_output=errors"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "2Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

  - name: pull-test-infra-bazel-canary
    agent: kubernetes
    context: pull-test-infra-bazel-canary
    branches:
    - master
    always_run: false
    rerun_command: "/test pull-test-infra-bazel-canary"
    trigger: "(?m)^/test pull-test-infra-bazel-canary,?(\\s+|$)"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:latest-latest
        imagePullPolicy: Always
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--batch" # mitigation for https://github.com/bazelbuild/bazel/issues/3956
        - "--build=//... -//vendor/..."
        - "--install=gubernator/test_requirements.txt"
        - "--test=//... //hack:verify-all -//vendor/..."
        - "--test-args=--test_output=errors"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "2Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

  - name: pull-test-infra-gubernator
    agent: kubernetes
    context: pull-test-infra-gubernator
    branches:
    - master
    rerun_command: "/test pull-test-infra-gubernator"
    trigger: "(?m)^/test pull-test-infra-gubernator,?(\\s+|$)"
    run_if_changed: 'gubernator|prow/config.yaml'
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gubernator:0.4
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --service-account=/etc/service-account/service-account.json
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

  - name: pull-test-infra-verify-bazel
    agent: kubernetes
    context: pull-test-infra-verify-bazel
    branches:
    - master
    rerun_command: "/test pull-test-infra-verify-bazel"
    trigger: "(?m)^/test( all| pull-test-infra-verify-bazel),?(\\s+|$)"
    always_run: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

  - name: pull-test-infra-verify-gofmt
    agent: kubernetes
    context: pull-test-infra-verify-gofmt
    branches:
    - master
    rerun_command: "/test pull-test-infra-verify-gofmt"
    trigger: "/test( all| pull-test-infra-verify-gofmt)"
    always_run: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

  - name: pull-test-infra-verify-govet
    agent: kubernetes
    context: pull-test-infra-verify-govet
    branches:
    - master
    rerun_command: "/test pull-test-infra-verify-govet"
    trigger: "/test( all| pull-test-infra-verify-govet)"
    always_run: true
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

  tensorflow/k8s:
  - name: tf-k8s-presubmit
    context: tf-k8s-presubmit
    agent: kubernetes
    always_run: true         # Run for every PR, or only when requested.
    rerun_command: "/test tf-k8s-presubmit"
    trigger: "(?m)^/test( all| tf-k8s-presubmit),?(\\s+|$)"
    branches:
    - master
    spec:
      containers:
      # TODO(jlewi): Replace latest with a specific tag once the images stabilize.
      - image: gcr.io/mlkube-testing/builder:latest
        imagePullPolicy: Always
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
      volumes:
      - name: service
        secret:
          secretName: service-account

postsubmits:
  kubernetes/kubernetes:
  - name: ci-kubernetes-bazel-build
    agent: kubernetes
    branches:
    - master
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.6.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--" # end bootstrap args, scenario args below
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
    run_after_success:
    - name: ci-kubernetes-bazel-test
      agent: kubernetes
      spec:
        containers:
        - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.6.1
          args:
          - "--clean"
          - "--git-cache=/root/.cache/git"
          - "--job=$(JOB_NAME)"
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--service-account=/etc/service-account/service-account.json"
          - "--upload=gs://kubernetes-jenkins/logs"
          - "--" # end bootstrap args, scenario args below
          - "--test=//... -//build/... -//vendor/..."
          - "--manual-test=//hack:verify-all"
          - "--test-args=--build_tag_filters=-e2e,-integration"
          - "--test-args=--test_tag_filters=-e2e,-integration"
          - "--test-args=--flaky_test_attempts=3"
          env:
          - name: TEST_TMPDIR
            value: /root/.cache/bazel
          securityContext:
            privileged: true
          volumeMounts:
          - name: service
            mountPath: /etc/service-account
            readOnly: true
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
          resources:
            requests:
              memory: "6Gi"
        volumes:
        - name: service
          secret:
            secretName: service-account
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0

  - name: ci-kubernetes-bazel-build-1-6
    agent: kubernetes
    branches:
    - release-1.6
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.5.2  # https://github.com/kubernetes/kubernetes/issues/51571
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
    run_after_success:
    - name: ci-kubernetes-bazel-test-1-6
      agent: kubernetes
      spec:
        containers:
        - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.5.2  # https://github.com/kubernetes/kubernetes/issues/51571
          args:
          - "--clean"
          - "--git-cache=/root/.cache/git"
          - "--job=$(JOB_NAME)"
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--service-account=/etc/service-account/service-account.json"
          - "--upload=gs://kubernetes-jenkins/logs"
          env:
          - name: TEST_TMPDIR
            value: /root/.cache/bazel
          securityContext:
            privileged: true
          volumeMounts:
          - name: service
            mountPath: /etc/service-account
            readOnly: true
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
          resources:
            requests:
              memory: "6Gi"
        volumes:
        - name: service
          secret:
            secretName: service-account
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0
    - name: ci-kubernetes-e2e-kubeadm-gce-1-6
      agent: kubernetes
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20171120-fd7d8854
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--clean"
          - "--git-cache=/root/.cache/git"
          - "--timeout=320"
          - "--upload=gs://kubernetes-jenkins/logs"
          env:
          - name: USER
            value: prow
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/service-account/service-account.json
          - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
            value: /etc/ssh-key-secret/ssh-private
          - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
            value: /etc/ssh-key-secret/ssh-public
          volumeMounts:
          - name: service
            mountPath: /etc/service-account
            readOnly: true
          - name: ssh
            mountPath: /etc/ssh-key-secret
            readOnly: true
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
        volumes:
        - name: service
          secret:
            secretName: service-account
        - name: ssh
          secret:
            secretName: ssh-key-secret
            defaultMode: 0400
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0

  - name: ci-kubernetes-bazel-build-1-7
    agent: kubernetes
    branches:
    - release-1.7
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.6.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        env:
        # Make Bazel use shared cache for its root
        # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
    run_after_success:
    - name: ci-kubernetes-bazel-test-1-7
      agent: kubernetes
      spec:
        containers:
        - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.6.1
          args:
          - "--clean"
          - "--git-cache=/root/.cache/git"
          - "--job=$(JOB_NAME)"
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--service-account=/etc/service-account/service-account.json"
          - "--upload=gs://kubernetes-jenkins/logs"
          securityContext:
            privileged: true
          env:
          # Make Bazel use shared cache for its root
          # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
          - name: TEST_TMPDIR
            value: /root/.cache/bazel
          volumeMounts:
          - name: service
            mountPath: /etc/service-account
            readOnly: true
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
          resources:
            requests:
              memory: "6Gi"
        volumes:
        - name: service
          secret:
            secretName: service-account
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0
    - name: ci-kubernetes-e2e-kubeadm-gce-1-7
      agent: kubernetes
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20171120-fd7d8854
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--clean"
          - "--git-cache=/root/.cache/git"
          - "--timeout=320"
          - "--upload=gs://kubernetes-jenkins/logs"
          env:
          - name: USER
            value: prow
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/service-account/service-account.json
          - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
            value: /etc/ssh-key-secret/ssh-private
          - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
            value: /etc/ssh-key-secret/ssh-public
          volumeMounts:
          - name: service
            mountPath: /etc/service-account
            readOnly: true
          - name: ssh
            mountPath: /etc/ssh-key-secret
            readOnly: true
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
        volumes:
        - name: service
          secret:
            secretName: service-account
        - name: ssh
          secret:
            secretName: ssh-key-secret
            defaultMode: 0400
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0
    - name: ci-kubernetes-e2e-kubeadm-gce-1-6-on-1-7
      agent: kubernetes
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20171120-fd7d8854
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--clean"
          - "--git-cache=/root/.cache/git"
          - "--timeout=320"
          - "--upload=gs://kubernetes-jenkins/logs"
          env:
          - name: USER
            value: prow
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/service-account/service-account.json
          - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
            value: /etc/ssh-key-secret/ssh-private
          - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
            value: /etc/ssh-key-secret/ssh-public
          volumeMounts:
          - name: service
            mountPath: /etc/service-account
            readOnly: true
          - name: ssh
            mountPath: /etc/ssh-key-secret
            readOnly: true
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
        volumes:
        - name: service
          secret:
            secretName: service-account
        - name: ssh
          secret:
            secretName: ssh-key-secret
            defaultMode: 0400
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0
    - name: ci-kubernetes-e2e-gce-1-6-1-7-master-skew
      agent: kubernetes
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20171120-fd7d8854
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--clean"
          - "--git-cache=/root/.cache/git"
          - "--timeout=320"
          - "--upload=gs://kubernetes-jenkins/logs"
          env:
          - name: USER
            value: prow
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/service-account/service-account.json
          - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
            value: /etc/ssh-key-secret/ssh-private
          - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
            value: /etc/ssh-key-secret/ssh-public
          volumeMounts:
          - name: service
            mountPath: /etc/service-account
            readOnly: true
          - name: ssh
            mountPath: /etc/ssh-key-secret
            readOnly: true
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
        volumes:
        - name: service
          secret:
            secretName: service-account
        - name: ssh
          secret:
            secretName: ssh-key-secret
            defaultMode: 0400
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0

  - name: ci-kubernetes-bazel-build-1-8
    agent: kubernetes
    branches:
    - release-1.8
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.6.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        env:
        # Make Bazel use shared cache for its root
        # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
    run_after_success:
    - name: ci-kubernetes-bazel-test-1-8
      agent: kubernetes
      spec:
        containers:
        - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.6.1
          args:
          - "--clean"
          - "--git-cache=/root/.cache/git"
          - "--job=$(JOB_NAME)"
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--service-account=/etc/service-account/service-account.json"
          - "--upload=gs://kubernetes-jenkins/logs"
          securityContext:
            privileged: true
          env:
          # Make Bazel use shared cache for its root
          # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
          - name: TEST_TMPDIR
            value: /root/.cache/bazel
          volumeMounts:
          - name: service
            mountPath: /etc/service-account
            readOnly: true
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
          resources:
            requests:
              memory: "6Gi"
        volumes:
        - name: service
          secret:
            secretName: service-account
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0
    - name: ci-kubernetes-e2e-kubeadm-gce-1-8
      agent: kubernetes
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20171120-fd7d8854
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--clean"
          - "--git-cache=/root/.cache/git"
          - "--timeout=320"
          - "--upload=gs://kubernetes-jenkins/logs"
          env:
          - name: USER
            value: prow
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/service-account/service-account.json
          - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
            value: /etc/ssh-key-secret/ssh-private
          - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
            value: /etc/ssh-key-secret/ssh-public
          volumeMounts:
          - name: service
            mountPath: /etc/service-account
            readOnly: true
          - name: ssh
            mountPath: /etc/ssh-key-secret
            readOnly: true
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
        volumes:
        - name: service
          secret:
            secretName: service-account
        - name: ssh
          secret:
            secretName: ssh-key-secret
            defaultMode: 0400
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0
    - name: ci-kubernetes-e2e-kubeadm-gce-1-7-on-1-8
      agent: kubernetes
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20171120-fd7d8854
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--clean"
          - "--git-cache=/root/.cache/git"
          - "--timeout=320"
          - "--upload=gs://kubernetes-jenkins/logs"
          env:
          - name: USER
            value: prow
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/service-account/service-account.json
          - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
            value: /etc/ssh-key-secret/ssh-private
          - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
            value: /etc/ssh-key-secret/ssh-public
          volumeMounts:
          - name: service
            mountPath: /etc/service-account
            readOnly: true
          - name: ssh
            mountPath: /etc/ssh-key-secret
            readOnly: true
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
        volumes:
        - name: service
          secret:
            secretName: service-account
        - name: ssh
          secret:
            secretName: ssh-key-secret
            defaultMode: 0400
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0

  - name: ci-kubernetes-bazel-build-1-9
    agent: kubernetes
    branches:
    - master
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.6.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--" # end bootstrap args, scenario args below
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
    run_after_success:
    - name: ci-kubernetes-bazel-test-1-9
      agent: kubernetes
      spec:
        containers:
        - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.6.1
          args:
          - "--clean"
          - "--git-cache=/root/.cache/git"
          - "--job=$(JOB_NAME)"
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--service-account=/etc/service-account/service-account.json"
          - "--upload=gs://kubernetes-jenkins/logs"
          - "--" # end bootstrap args, scenario args below
          - "--test=//... -//build/... -//vendor/..."
          - "--manual-test=//hack:verify-all"
          - "--test-args=--build_tag_filters=-e2e,-integration"
          - "--test-args=--test_tag_filters=-e2e,-integration"
          - "--test-args=--flaky_test_attempts=3"
          env:
          - name: TEST_TMPDIR
            value: /root/.cache/bazel
          securityContext:
            privileged: true
          volumeMounts:
          - name: service
            mountPath: /etc/service-account
            readOnly: true
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
          resources:
            requests:
              memory: "6Gi"
        volumes:
        - name: service
          secret:
            secretName: service-account
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0
    - name: ci-kubernetes-e2e-kubeadm-gce-1-8-on-1-9
      agent: kubernetes
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20171120-fd7d8854
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--clean"
          - "--git-cache=/root/.cache/git"
          - "--timeout=320"
          - "--upload=gs://kubernetes-jenkins/logs"
          env:
          - name: USER
            value: prow
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /etc/service-account/service-account.json
          - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
            value: /etc/ssh-key-secret/ssh-private
          - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
            value: /etc/ssh-key-secret/ssh-public
          volumeMounts:
          - name: service
            mountPath: /etc/service-account
            readOnly: true
          - name: ssh
            mountPath: /etc/ssh-key-secret
            readOnly: true
          - name: cache-ssd
            mountPath: /root/.cache
          ports:
          - containerPort: 9999
            hostPort: 9999
        volumes:
        - name: service
          secret:
            secretName: service-account
        - name: ssh
          secret:
            secretName: ssh-key-secret
            defaultMode: 0400
        - name: cache-ssd
          hostPath:
            path: /mnt/disks/ssd0


  kubernetes/test-infra:
  - name: ci-test-infra-bazel
    agent: kubernetes
    branches:
    - master
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.7.0
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--" # end bootstrap args, scenario args below
        - "--batch" # mitigation for https://github.com/bazelbuild/bazel/issues/3956
        - "--build=//... -//vendor/..."
        - "--install=gubernator/test_requirements.txt"
        - "--test=//... //hack:verify-all -//vendor/..."
        - "--test-args=--test_output=errors"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "2Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

  - name: maintenance-boskos-config-upload
    agent: kubernetes
    branches:
    - master
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: PROW_SERVICE_ACCOUNT
          value: /etc/prow-build-service/prow-build-service.json
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: prow-build-service
          mountPath: /etc/prow-build-service
          readOnly: true
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: prow-build-service
        secret:
          secretName: prow-build-service

  - name: maintenance-ci-testgrid-config-upload
    agent: kubernetes
    branches:
    - master
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.6.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        resources:
          requests:
            memory: "1Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account

  tensorflow/k8s:
  - name: tf-k8s-postsubmit
    agent: kubernetes
    branches:
    - master
    spec:
      containers:
      # TODO(jlewi): Replace latest with a specific tag once the images stabilize.
      - image: gcr.io/mlkube-testing/builder:latest
        imagePullPolicy: Always
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
      volumes:
      - name: service
        secret:
          secretName: service-account

periodics:
- name: ci-cri-containerd-build
  interval: 30m
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
      args:
      - "--repo=github.com/kubernetes-incubator/cri-containerd=master"
      - "--root=/go/src"
      - "--upload=gs://kubernetes-jenkins/logs"
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account

- interval: 1h
  agent: kubernetes
  name: ci-cri-containerd-e2e-gci-gce
  spec:
    containers:
    - args:
      - "--repo=github.com/kubernetes-incubator/cri-containerd=master"
      - "--timeout=70"
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-cri-containerd-e2e-ubuntu-gce
  spec:
    containers:
    - args:
      - "--repo=github.com/kubernetes-incubator/cri-containerd=master"
      - "--timeout=70"
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- name: ci-cri-containerd-node-e2e
  interval: 1h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      args:
      - --root=/go/src
      - "--clean"
      - "--git-cache=/root/.cache/git"
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes"
      - "--repo=github.com/kubernetes-incubator/cri-containerd=master"
      - "--service-account=/etc/service-account/service-account.json"
      - "--timeout=90"
      - "--"
      - "--node-args=--image-config-file=test/e2e_node/image-config.yaml --image-config-dir=$GOPATH/src/github.com/kubernetes-incubator/cri-containerd"
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
      - name: cache-ssd
        mountPath: /root/.cache
      ports:
      - containerPort: 9999
        hostPort: 9999
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret
    - name: cache-ssd
      hostPath:
        path: /mnt/disks/ssd0

- interval: 30m
  agent: kubernetes
  name: ci-federation-e2e-gce
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      # docker-in-docker needs privilged mode
      securityContext:
        privileged: true
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171120-5e89f3c1-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
      - name: var-lib-docker
        mountPath: /var/lib/docker
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret
    - name: var-lib-docker
      emptyDir: {}
- interval: 30m
  agent: kubernetes
  name: ci-federation-e2e-gce-serial
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: true
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      # docker-in-docker needs privilged mode
      securityContext:
        privileged: true
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171120-5e89f3c1-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
      - name: var-lib-docker
        mountPath: /var/lib/docker
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret
    - name: var-lib-docker
      emptyDir: {}

- name: ci-kubernetes-bazel-build
  interval: 30m
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.6.1
      args:
      - "--clean"
      - "--git-cache=/root/.cache/git"
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=master"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      env:
      - name: TEST_TMPDIR
        value: /root/.cache/bazel
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: cache-ssd
        mountPath: /root/.cache
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          memory: "6Gi"
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: cache-ssd
      hostPath:
        path: /mnt/disks/ssd0
  run_after_success:
  - name: ci-kubernetes-e2e-kubeadm-gce
    agent: kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-testimages/e2e-kubeadm:v20171120-fd7d8854
        args:
        - "--repo=k8s.io/kubernetes=master"
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--timeout=320"
        - "--upload=gs://kubernetes-jenkins/logs"
        env:
        - name: USER
          value: prow
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: ssh
          mountPath: /etc/ssh-key-secret
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          secretName: ssh-key-secret
          defaultMode: 0400
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: ci-kubernetes-e2e-kubeadm-gce-stable-on-master
    agent: kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-testimages/e2e-kubeadm:v20171120-fd7d8854
        args:
        - "--repo=k8s.io/kubernetes=master"
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--timeout=320"
        - "--upload=gs://kubernetes-jenkins/logs"
        env:
        - name: USER
          value: prow
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: ssh
          mountPath: /etc/ssh-key-secret
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          secretName: ssh-key-secret
          defaultMode: 0400
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: ci-kubernetes-e2e-kubeadm-gce-upgrade-stable-master
    agent: kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-testimages/e2e-kubeadm:v20171120-fd7d8854
        args:
        - "--repo=k8s.io/kubernetes=master"
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--timeout=320"
        - "--upload=gs://kubernetes-jenkins/logs"
        env:
        - name: USER
          value: prow
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: ssh
          mountPath: /etc/ssh-key-secret
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          secretName: ssh-key-secret
          defaultMode: 0400
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: ci-kubernetes-e2e-kubeadm-gce-cni-calico
    agent: kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-testimages/e2e-kubeadm:v20171120-fd7d8854
        args:
        - "--repo=k8s.io/kubernetes=master"
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--timeout=320"
        - "--upload=gs://kubernetes-jenkins/logs"
        env:
        - name: USER
          value: prow
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: ssh
          mountPath: /etc/ssh-key-secret
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          secretName: ssh-key-secret
          defaultMode: 0400
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: ci-kubernetes-e2e-kubeadm-gce-cni-flannel
    agent: kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-testimages/e2e-kubeadm:v20171120-fd7d8854
        args:
        - "--repo=k8s.io/kubernetes=master"
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--timeout=320"
        - "--upload=gs://kubernetes-jenkins/logs"
        env:
        - name: USER
          value: prow
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: ssh
          mountPath: /etc/ssh-key-secret
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          secretName: ssh-key-secret
          defaultMode: 0400
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-charts-gce
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/charts
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-cos-docker-validation
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-cos-docker-validation-serial
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-cos-docker-validation-slow
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-1-6-1-7-cvm-kubectl-skew
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-1-6-1-7-cvm-kubectl-skew-serial
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-1-6-1-7-gci-kubectl-skew
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-1-6-1-7-gci-kubectl-skew-serial
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-1-6-1-7-upgrade-cluster
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-1-6-1-7-upgrade-cluster-new
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-1-6-1-7-upgrade-master
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-1-7-1-6-cvm-kubectl-skew
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-1-7-1-6-cvm-kubectl-skew-serial
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-1-7-1-6-gci-kubectl-skew
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-1-7-1-6-gci-kubectl-skew-serial
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-alpha-api
  spec:
    containers:
    - args:
      - --timeout=80
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 24h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-alpha-features-release-1-6
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-alpha-features-release-1-7
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-audit-release-1-7
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-beta-stable1-downgrade-cluster
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-beta-stable1-downgrade-cluster-parallel
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-beta-stable1-gci-kubectl-skew
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-beta-stable1-gci-kubectl-skew-serial
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-canary
  spec:
    containers:
    - args:
      - --timeout=60
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cos-k8sbeta-alphafeatures
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cos-k8sbeta-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cos-k8sbeta-ingress
  spec:
    containers:
    - args:
      - --bare
      - --timeout=110
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cos-k8sbeta-reboot
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cos-k8sbeta-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cos-k8sbeta-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cos-k8sstable1-alphafeatures
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cos-k8sstable1-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cos-k8sstable1-ingress
  spec:
    containers:
    - args:
      - --bare
      - --timeout=110
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cos-k8sstable1-reboot
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cos-k8sstable1-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cos-k8sstable1-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cos-k8sstable2-alphafeatures
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cos-k8sstable2-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cos-k8sstable2-ingress
  spec:
    containers:
    - args:
      - --bare
      - --timeout=110
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cos-k8sstable2-reboot
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cos-k8sstable2-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cos-k8sstable2-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 24h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cos-k8sstable3-alphafeatures
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 24h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cos-k8sstable3-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 24h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cos-k8sstable3-ingress
  spec:
    containers:
    - args:
      - --bare
      - --timeout=110
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 24h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cos-k8sstable3-reboot
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 24h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cos-k8sstable3-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 24h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cos-k8sstable3-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosbeta-k8sbeta-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosbeta-k8sbeta-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosbeta-k8sbeta-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosbeta-k8sdev-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 24h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosbeta-k8sdev-nosnat
  spec:
    containers:
    - args:
      - --bare
      - --timeout=40
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosbeta-k8sdev-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosbeta-k8sdev-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosbeta-k8sstable1-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosbeta-k8sstable1-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosbeta-k8sstable1-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosbeta-k8sstable2-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosbeta-k8sstable2-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosbeta-k8sstable2-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosbeta-k8sstable3-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosbeta-k8sstable3-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosbeta-k8sstable3-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosdev-k8sbeta-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosdev-k8sbeta-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosdev-k8sbeta-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosdev-k8sdev-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosdev-k8sdev-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosdev-k8sdev-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosdev-k8sstable1-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosdev-k8sstable1-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosdev-k8sstable1-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosstable1-k8sbeta-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosstable1-k8sbeta-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosstable1-k8sbeta-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosstable1-k8sdev-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosstable1-k8sdev-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosstable1-k8sdev-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosstable1-k8sstable1-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosstable1-k8sstable1-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosstable1-k8sstable1-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosstable1-k8sstable2-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosstable1-k8sstable2-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosstable1-k8sstable2-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosstable1-k8sstable3-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosstable1-k8sstable3-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-cosstable1-k8sstable3-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- name: ci-kubernetes-e2e-gce-device-plugin-gpu
  interval: 2h
  agent: kubernetes
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- name: ci-kubernetes-e2e-gce-device-plugin-gpu-beta
  interval: 2h
  agent: kubernetes
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- name: ci-kubernetes-e2e-gce-device-plugin-gpu-stable1
  interval: 2h
  agent: kubernetes
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 24h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-etcd2-release-1-6
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-federation-release-1-7
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-federation-release-1-8
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-ci-master
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-ci-serial-master
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-ci-slow-master
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-latest-rollback-etcd
  spec:
    containers:
    - args:
      - --timeout=110
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-latest-upgrade-etcd
  spec:
    containers:
    - args:
      - --timeout=110
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-m60
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-m61
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-m62
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-m63
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-master
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-serial-m60
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-serial-m61
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-serial-m62
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-serial-m63
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-serial-master
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-slow-m60
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-slow-m61
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-slow-m62
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-slow-m63
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-qa-slow-master
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-serial-sig-cli
  spec:
    containers:
    - args:
      - --timeout=520
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- name: ci-kubernetes-e2e-gce-gpu
  interval: 2h
  agent: kubernetes
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- name: ci-kubernetes-e2e-gce-gpu-1-7
  interval: 12h
  agent: kubernetes
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- name: ci-kubernetes-e2e-gce-gpu-beta
  interval: 2h
  agent: kubernetes
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- name: ci-kubernetes-e2e-gce-gpu-stable1
  interval: 2h
  agent: kubernetes
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-ha-master
  spec:
    containers:
    - args:
      - --timeout=240
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- cron: '1 6 * * 2,4,6' # Run at 22:01PST on Mon,Wed,Fri (06:01 UTC Tue,Thur,Sat)
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-large-correctness
  spec:
    containers:
    - args:
      - --timeout=420
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- cron: "0 0 31 2 *" # manual job, set to Feb.31st so it will never be triggered
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-large-manual-down
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- cron: "0 0 31 2 *" # manual job, set to Feb.31st so it will never be triggered
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-large-manual-up
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- cron: '1 13 * * 2,4,6' # Run at 5:01PST (13:01 UTC) on even days
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-large-performance
  spec:
    containers:
    - args:
      - --timeout=540
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-master-new-downgrade-cluster
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-master-new-downgrade-cluster-parallel
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-master-new-gci-kubectl-skew
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-master-new-gci-kubectl-skew-serial
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 24h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-min-node-permissions
  spec:
    containers:
    - args:
      - --timeout=520
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-multizone
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-new-master-gci-kubectl-skew
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-new-master-gci-kubectl-skew-serial
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-new-master-upgrade-cluster
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-new-master-upgrade-cluster-new
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-new-master-upgrade-cluster-parallel
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-new-master-upgrade-master
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 24h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-reboot-release-1-6
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-reboot-release-1-7
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 24h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-release-1-6
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-release-1-7
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-scalability-canary
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- cron: '1 22 * * 2,4,6' # Run at 14:01PST (22:01 UTC) on even days
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-scale-correctness
  spec:
    containers:
    - args:
      - --timeout=600
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- cron: '1 8 * * 1,3,5' # Run at 00:01PST (8:01 UTC) on odd days (except sunday)
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-scale-performance
  spec:
    containers:
    - args:
      - --timeout=1320
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 24h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-serial-release-1-6
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-serial-release-1-7
  spec:
    containers:
    - args:
      - --timeout=520
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 24h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-slow-release-1-6
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-slow-release-1-7
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable1-beta-gci-kubectl-skew
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable1-beta-gci-kubectl-skew-serial
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable1-beta-upgrade-cluster
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable1-beta-upgrade-cluster-new
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable1-beta-upgrade-master
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable1-stable2-downgrade-cluster
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable1-stable2-downgrade-cluster-parallel
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable1-stable2-gci-kubectl-skew
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable1-stable2-gci-kubectl-skew-serial
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable2-stable1-gci-kubectl-skew
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable2-stable1-gci-kubectl-skew-serial
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable2-stable1-upgrade-cluster
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable2-stable1-upgrade-cluster-new
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stable2-stable1-upgrade-master
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stackdriver
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-taint-evict
  spec:
    containers:
    - args:
      - --timeout=80
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-ubuntudev-k8sbeta-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-ubuntudev-k8sbeta-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-ubuntudev-k8sbeta-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-ubuntudev-k8sdev-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-ubuntudev-k8sdev-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-ubuntudev-k8sdev-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-ubuntudev-k8sstable1-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-ubuntudev-k8sstable1-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-ubuntudev-k8sstable1-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-ubuntustable1-k8sdev-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-ubuntustable1-k8sdev-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-ubuntustable1-k8sdev-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-ubuntustable1-k8sstable1-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-ubuntustable1-k8sstable1-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-ubuntustable1-k8sstable1-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-ubuntustable1-k8sstable2-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-ubuntustable1-k8sstable2-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-ubuntustable1-k8sstable2-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-alpha-features
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-audit
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-audit-release-1-7
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-autoscaling
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-autoscaling-migs
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-es-logging
  spec:
    containers:
    - args:
      - --timeout=110
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-etcd3
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-etcd3-sig-cli
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-flaky
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-garbage
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-ingress
  spec:
    containers:
    - args:
      - --timeout=110
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-ip-alias
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-latest-downgrade-kube-proxy-ds
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-latest-upgrade-kube-proxy-ds
  spec:
    containers:
    - args:
      - --timeout=110
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-proto
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-reboot
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-scalability
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- cron: "0 */6 * * *" # every six hours
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-scalability-beta
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- cron: "0 3-21/6 * * *" # every six hours, disjoint with ci-kubernetes-e2e-gci-gce-scalability-stable1
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-scalability-release-1-7
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- cron: "0 0/6 * * *" # every six hours, disjoint with ci-kubernetes-e2e-gci-gce-scalability-release-1-7
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-scalability-stable1
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-sd-logging
  spec:
    containers:
    - args:
      - --timeout=1340
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-serial
  spec:
    containers:
    - args:
      - --timeout=520
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-sig-cli
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-slow
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-statefulset
  spec:
    containers:
    - args:
      - --timeout=110
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-alpha-features
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-autoscaling
  spec:
    containers:
    - args:
      - --timeout=420
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: gke-alpha-service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-flaky
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-ingress
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-multizone
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-prod
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-prod-parallel
  spec:
    containers:
    - args:
      - --timeout=100
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-prod-smoke
  spec:
    containers:
    - args:
      - --timeout=100
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-reboot
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-serial
  spec:
    containers:
    - args:
      - --timeout=520
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-sig-cli
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-slow
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-test
  spec:
    containers:
    - args:
      - --timeout=500
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-updown
  spec:
    containers:
    - args:
      - --timeout=50
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-1-6-1-7-cvm-kubectl-skew
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-1-6-1-7-cvm-kubectl-skew-serial
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-1-6-1-7-gci-kubectl-skew
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-1-6-1-7-gci-kubectl-skew-serial
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-1-7-1-6-cvm-kubectl-skew
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-1-7-1-6-cvm-kubectl-skew-serial
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-1-7-1-6-gci-kubectl-skew
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-1-7-1-6-gci-kubectl-skew-serial
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-alpha-features-release-1-6
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-alpha-features-release-1-7
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-beta-stable1-downgrade-cluster
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-beta-stable1-downgrade-cluster-parallel
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-beta-stable1-gci-kubectl-skew
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-beta-stable1-gci-kubectl-skew-serial
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-canary
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cos-k8sbeta-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cos-k8sbeta-ingress
  spec:
    containers:
    - args:
      - --bare
      - --timeout=110
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cos-k8sbeta-reboot
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cos-k8sbeta-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cos-k8sbeta-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cos-k8sstable1-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cos-k8sstable1-ingress
  spec:
    containers:
    - args:
      - --bare
      - --timeout=110
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cos-k8sstable1-reboot
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cos-k8sstable1-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cos-k8sstable1-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cos-k8sstable2-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cos-k8sstable2-ingress
  spec:
    containers:
    - args:
      - --bare
      - --timeout=110
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cos-k8sstable2-reboot
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cos-k8sstable2-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cos-k8sstable2-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cos-k8sstable3-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cos-k8sstable3-ingress
  spec:
    containers:
    - args:
      - --bare
      - --timeout=110
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cos-k8sstable3-reboot
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cos-k8sstable3-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cos-k8sstable3-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cosbeta-k8sbeta-soak
  spec:
    containers:
    - args:
      - --bare
      - --timeout=620
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 3h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cosbeta-k8sbeta-stackdriver
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cosbeta-k8sdev-soak
  spec:
    containers:
    - args:
      - --bare
      - --timeout=620
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 3h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cosbeta-k8sdev-stackdriver
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cosbeta-k8sstable1-soak
  spec:
    containers:
    - args:
      - --bare
      - --timeout=620
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 3h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cosbeta-k8sstable1-stackdriver
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cosbeta-k8sstable2-soak
  spec:
    containers:
    - args:
      - --bare
      - --timeout=620
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 3h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cosbeta-k8sstable2-stackdriver
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cosbeta-k8sstable3-soak
  spec:
    containers:
    - args:
      - --bare
      - --timeout=620
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 3h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cosbeta-k8sstable3-stackdriver
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cvm-1-6-gci-1-7-upgrade-cluster
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cvm-1-6-gci-1-7-upgrade-cluster-new
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cvm-1-6-gci-1-7-upgrade-master
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cvm-1-6-gci-1-8-upgrade-cluster
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cvm-1-6-gci-1-8-upgrade-cluster-new
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cvm-1-6-gci-1-8-upgrade-master
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cvm-1-7-gci-1-8-upgrade-cluster
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cvm-1-7-gci-1-8-upgrade-cluster-new
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cvm-1-7-gci-1-8-upgrade-master
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-cvm-stable-gci-master-upgrade-master
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- name: ci-kubernetes-e2e-gke-device-plugin-gpu
  interval: 2h
  agent: kubernetes
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- name: ci-kubernetes-e2e-gke-device-plugin-gpu-beta
  interval: 2h
  agent: kubernetes
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- name: ci-kubernetes-e2e-gke-device-plugin-gpu-p100
  interval: 12h #expensive test
  agent: kubernetes
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171107-0ce6e41ae-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- name: ci-kubernetes-e2e-gke-device-plugin-gpu-p100-beta
  interval: 12h #expensive test
  agent: kubernetes
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171107-0ce6e41ae-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- name: ci-kubernetes-e2e-gke-device-plugin-gpu-stable1
  interval: 2h
  agent: kubernetes
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-1-6-gci-1-7-upgrade-cluster
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-1-6-gci-1-7-upgrade-cluster-new
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-1-6-gci-1-7-upgrade-master
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-ci-master
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

# Release-1.7 jobs
- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-master-gci-new-downgrade-cluster
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-master-gci-new-downgrade-cluster-parallel
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-new-gci-master-upgrade-cluster
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-new-gci-master-upgrade-cluster-new
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-new-gci-master-upgrade-cluster-parallel
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-new-gci-master-upgrade-master
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-serial-sig-cli
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-stable-gci-master-upgrade-master
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-stable1-gci-stable2-downgrade-cluster
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-stable1-gci-stable2-downgrade-cluster-parallel
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-stable2-gci-stable1-upgrade-cluster
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-stable2-gci-stable1-upgrade-cluster-new
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-stable2-gci-stable1-upgrade-master
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-stable3-gci-stable1-upgrade-cluster
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-stable3-gci-stable1-upgrade-cluster-new
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-stable3-gci-stable1-upgrade-master
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- name: ci-kubernetes-e2e-gke-gpu-1-7
  interval: 12h
  agent: kubernetes
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- cron: '1 23 * * 0' # Run at 15:01PST (23:01UTC) on sunday
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-large-correctness
  spec:
    containers:
    - args:
      - --timeout=480
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- cron: "0 0 31 2 *" # manual job, set to Feb.31st so it will never be triggered
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-large-deploy
  spec:
    containers:
    - args:
      - --timeout=1220
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- cron: '1 13 * * 0' # Run at 05:01PST (13:01UTC) on sunday
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-large-performance
  spec:
    containers:
    - args:
      - --timeout=600
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- cron: "0 0 31 2 *" # manual job, set to Feb.31st so it will never be triggered
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-large-teardown
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-master-new-gci-kubectl-skew
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-master-new-gci-kubectl-skew-serial
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-new-master-gci-kubectl-skew
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-new-master-gci-kubectl-skew-serial
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-prod
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-prod-parallel
  spec:
    containers:
    - args:
      - --timeout=100
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-prod-smoke
  spec:
    containers:
    - args:
      - --timeout=100
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-regional
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: gke-alpha-service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- cron: "0 0 31 2 *" # manual (set to Feb 31 so it won't trigger) (TODO: automate this when possible)
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-scale-correctness
  spec:
    containers:
    - args:
      - --timeout=1020
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-stable1-beta-gci-kubectl-skew
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-stable1-beta-gci-kubectl-skew-serial
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-stable1-beta-upgrade-cluster
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-stable1-beta-upgrade-cluster-new
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-stable1-beta-upgrade-master
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-stable1-stable2-gci-kubectl-skew
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-stable1-stable2-gci-kubectl-skew-serial
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-stable2-stable1-gci-kubectl-skew
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-stable2-stable1-gci-kubectl-skew-serial
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-stackdriver
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-staging-default-latest-upgrade-cluster
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-staging-default-latest-upgrade-cluster-new
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-staging-default-latest-upgrade-master
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-staging-default-parallel
  spec:
    containers:
    - args:
      - --timeout=100
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-staging-default-serial
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-staging-latest-device-plugin-gpu
  spec:
    containers:
    - args:
      - --timeout=100
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171107-0ce6e41ae-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-staging-latest-parallel
  spec:
    containers:
    - args:
      - --timeout=100
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-staging-latest-serial
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-test
  spec:
    containers:
    - args:
      - --timeout=500
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sdev-alphafeatures
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sdev-autoscaling
  spec:
    containers:
    - args:
      - --bare
      - --timeout=320
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sdev-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sdev-flaky
  spec:
    containers:
    - args:
      - --bare
      - --timeout=320
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sdev-ingress
  spec:
    containers:
    - args:
      - --bare
      - --timeout=110
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sdev-reboot
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sdev-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sdev-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sdev-updown
  spec:
    containers:
    - args:
      - --bare
      - --timeout=50
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable1-alphafeatures
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable1-autoscaling
  spec:
    containers:
    - args:
      - --bare
      - --timeout=320
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable1-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret


- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable1-flaky
  spec:
    containers:
    - args:
      - --bare
      - --timeout=320
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable1-ingress
  spec:
    containers:
    - args:
      - --bare
      - --timeout=110
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable1-reboot
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable1-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable1-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable1-updown
  spec:
    containers:
    - args:
      - --bare
      - --timeout=50
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable2-alphafeatures
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable2-autoscaling
  spec:
    containers:
    - args:
      - --bare
      - --timeout=320
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable2-default
  spec:
    containers:
    - args:
      - --bare
      - --timeout=70
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable2-flaky
  spec:
    containers:
    - args:
      - --bare
      - --timeout=320
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable2-ingress
  spec:
    containers:
    - args:
      - --bare
      - --timeout=110
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable2-reboot
  spec:
    containers:
    - args:
      - --bare
      - --timeout=200
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable2-serial
  spec:
    containers:
    - args:
      - --bare
      - --timeout=520
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable2-slow
  spec:
    containers:
    - args:
      - --bare
      - --timeout=170
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-ubuntustable1-k8sstable2-updown
  spec:
    containers:
    - args:
      - --bare
      - --timeout=50
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-updown
  spec:
    containers:
    - args:
      - --timeout=50
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_AWS_CREDENTIALS_FILE
        value: /etc/aws-cred/credentials
      - name: JENKINS_AWS_SSH_PRIVATE_KEY_FILE
        value: /etc/aws-ssh/aws-ssh-private
      - name: JENKINS_AWS_SSH_PUBLIC_KEY_FILE
        value: /etc/aws-ssh/aws-ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/aws-ssh
        name: aws-ssh
        readOnly: true
      - mountPath: /etc/aws-cred
        name: aws-cred
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: aws-ssh
      secret:
        defaultMode: 256
        secretName: aws-ssh-key-secret
    - name: aws-cred
      secret:
        defaultMode: 256
        secretName: aws-cred

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-beta
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_AWS_CREDENTIALS_FILE
        value: /etc/aws-cred/credentials
      - name: JENKINS_AWS_SSH_PRIVATE_KEY_FILE
        value: /etc/aws-ssh/aws-ssh-private
      - name: JENKINS_AWS_SSH_PUBLIC_KEY_FILE
        value: /etc/aws-ssh/aws-ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/aws-ssh
        name: aws-ssh
        readOnly: true
      - mountPath: /etc/aws-cred
        name: aws-cred
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: aws-ssh
      secret:
        defaultMode: 256
        secretName: aws-ssh-key-secret
    - name: aws-cred
      secret:
        defaultMode: 256
        secretName: aws-cred

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-canary
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_AWS_CREDENTIALS_FILE
        value: /etc/aws-cred/credentials
      - name: JENKINS_AWS_SSH_PRIVATE_KEY_FILE
        value: /etc/aws-ssh/aws-ssh-private
      - name: JENKINS_AWS_SSH_PUBLIC_KEY_FILE
        value: /etc/aws-ssh/aws-ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/aws-ssh
        name: aws-ssh
        readOnly: true
      - mountPath: /etc/aws-cred
        name: aws-cred
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: aws-ssh
      secret:
        defaultMode: 256
        secretName: aws-ssh-key-secret
    - name: aws-cred
      secret:
        defaultMode: 256
        secretName: aws-cred

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-cncf-canary
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_AWS_CREDENTIALS_FILE
        value: /etc/aws-cred/credentials
      - name: JENKINS_AWS_SSH_PRIVATE_KEY_FILE
        value: /etc/aws-ssh/aws-ssh-private
      - name: JENKINS_AWS_SSH_PUBLIC_KEY_FILE
        value: /etc/aws-ssh/aws-ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/aws-ssh
        name: aws-ssh
        readOnly: true
      - mountPath: /etc/aws-cred
        name: aws-cred
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: aws-ssh
      secret:
        defaultMode: 256
        secretName: aws-ssh-key-secret
    - name: aws-cred
      secret:
        defaultMode: 256
        secretName: aws-cred-new

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-newrunner
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_AWS_CREDENTIALS_FILE
        value: /etc/aws-cred/credentials
      - name: JENKINS_AWS_SSH_PRIVATE_KEY_FILE
        value: /etc/aws-ssh/aws-ssh-private
      - name: JENKINS_AWS_SSH_PUBLIC_KEY_FILE
        value: /etc/aws-ssh/aws-ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/aws-ssh
        name: aws-ssh
        readOnly: true
      - mountPath: /etc/aws-cred
        name: aws-cred
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: aws-ssh
      secret:
        defaultMode: 256
        secretName: aws-ssh-key-secret
    - name: aws-cred
      secret:
        defaultMode: 256
        secretName: aws-cred

- interval: 24h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-release-1-6
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_AWS_CREDENTIALS_FILE
        value: /etc/aws-cred/credentials
      - name: JENKINS_AWS_SSH_PRIVATE_KEY_FILE
        value: /etc/aws-ssh/aws-ssh-private
      - name: JENKINS_AWS_SSH_PUBLIC_KEY_FILE
        value: /etc/aws-ssh/aws-ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/aws-ssh
        name: aws-ssh
        readOnly: true
      - mountPath: /etc/aws-cred
        name: aws-cred
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: aws-ssh
      secret:
        defaultMode: 256
        secretName: aws-ssh-key-secret
    - name: aws-cred
      secret:
        defaultMode: 256
        secretName: aws-cred

- interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-release-1-7
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_AWS_CREDENTIALS_FILE
        value: /etc/aws-cred/credentials
      - name: JENKINS_AWS_SSH_PRIVATE_KEY_FILE
        value: /etc/aws-ssh/aws-ssh-private
      - name: JENKINS_AWS_SSH_PUBLIC_KEY_FILE
        value: /etc/aws-ssh/aws-ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/aws-ssh
        name: aws-ssh
        readOnly: true
      - mountPath: /etc/aws-cred
        name: aws-cred
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: aws-ssh
      secret:
        defaultMode: 256
        secretName: aws-ssh-key-secret
    - name: aws-cred
      secret:
        defaultMode: 256
        secretName: aws-cred

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-sig-cli
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_AWS_CREDENTIALS_FILE
        value: /etc/aws-cred/credentials
      - name: JENKINS_AWS_SSH_PRIVATE_KEY_FILE
        value: /etc/aws-ssh/aws-ssh-private
      - name: JENKINS_AWS_SSH_PUBLIC_KEY_FILE
        value: /etc/aws-ssh/aws-ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/aws-ssh
        name: aws-ssh
        readOnly: true
      - mountPath: /etc/aws-cred
        name: aws-cred
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: aws-ssh
      secret:
        defaultMode: 256
        secretName: aws-ssh-key-secret
    - name: aws-cred
      secret:
        defaultMode: 256
        secretName: aws-cred

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-stable1
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_AWS_CREDENTIALS_FILE
        value: /etc/aws-cred/credentials
      - name: JENKINS_AWS_SSH_PRIVATE_KEY_FILE
        value: /etc/aws-ssh/aws-ssh-private
      - name: JENKINS_AWS_SSH_PUBLIC_KEY_FILE
        value: /etc/aws-ssh/aws-ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/aws-ssh
        name: aws-ssh
        readOnly: true
      - mountPath: /etc/aws-cred
        name: aws-cred
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: aws-ssh
      secret:
        defaultMode: 256
        secretName: aws-ssh-key-secret
    - name: aws-cred
      secret:
        defaultMode: 256
        secretName: aws-cred

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-updown
  spec:
    containers:
    - args:
      - --timeout=50
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_AWS_CREDENTIALS_FILE
        value: /etc/aws-cred/credentials
      - name: JENKINS_AWS_SSH_PRIVATE_KEY_FILE
        value: /etc/aws-ssh/aws-ssh-private
      - name: JENKINS_AWS_SSH_PUBLIC_KEY_FILE
        value: /etc/aws-ssh/aws-ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/aws-ssh
        name: aws-ssh
        readOnly: true
      - mountPath: /etc/aws-cred
        name: aws-cred
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: aws-ssh
      secret:
        defaultMode: 256
        secretName: aws-ssh-key-secret
    - name: aws-cred
      secret:
        defaultMode: 256
        secretName: aws-cred

- interval: 24h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-weave
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_AWS_CREDENTIALS_FILE
        value: /etc/aws-cred/credentials
      - name: JENKINS_AWS_SSH_PRIVATE_KEY_FILE
        value: /etc/aws-ssh/aws-ssh-private
      - name: JENKINS_AWS_SSH_PUBLIC_KEY_FILE
        value: /etc/aws-ssh/aws-ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/aws-ssh
        name: aws-ssh
        readOnly: true
      - mountPath: /etc/aws-cred
        name: aws-cred
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: aws-ssh
      secret:
        defaultMode: 256
        secretName: aws-ssh-key-secret
    - name: aws-cred
      secret:
        defaultMode: 256
        secretName: aws-cred

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-gce
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- name: ci-kubernetes-e2e-node-canary
  interval: 1h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always
      args:
      - --repo=k8s.io/kubernetes=master
      - --timeout=110
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      - name: GOPATH
        value: /go
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: ssh
        mountPath: /etc/ssh-key-secret
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        secretName: ssh-key-secret
        defaultMode: 0400

- name: ci-kubernetes-e2e-prow-canary
  interval: 1h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always
      args:
      - --bare
      - --timeout=85
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: ssh
        mountPath: /etc/ssh-key-secret
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        secretName: ssh-key-secret
        defaultMode: 0400

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-ubuntu-gce-ipvs
  spec:
    containers:
    - args:
      - --timeout=80
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-cosbeta-k8sbeta-default
  spec:
    containers:
    - args:
      - --timeout=90
      - --repo=k8s.io/kubernetes=master
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-cosbeta-k8sbeta-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=master
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-cosbeta-k8sdev-default
  spec:
    containers:
    - args:
      - --timeout=90
      - --repo=k8s.io/kubernetes=master
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-cosbeta-k8sdev-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=master
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-cosbeta-k8sstable1-default
  spec:
    containers:
    - args:
      - --timeout=90
      - --repo=k8s.io/kubernetes=release-1.8
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.8
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-cosbeta-k8sstable1-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=release-1.8
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.8
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-cosbeta-k8sstable2-default
  spec:
    containers:
    - args:
      - --timeout=90
      - --repo=k8s.io/kubernetes=release-1.7
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.7
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-cosbeta-k8sstable2-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=release-1.7
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.7
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-cosbeta-k8sstable3-default
  spec:
    containers:
    - args:
      - --timeout=90
      - --repo=k8s.io/kubernetes=release-1.6
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.6
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-cosbeta-k8sstable3-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=release-1.6
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.6
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-cosstable1-k8sbeta-default
  spec:
    containers:
    - args:
      - --timeout=90
      - --repo=k8s.io/kubernetes=master
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-cosstable1-k8sbeta-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=master
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-cosstable1-k8sdev-default
  spec:
    containers:
    - args:
      - --timeout=90
      - --repo=k8s.io/kubernetes=master
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-cosstable1-k8sdev-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=master
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-cosstable1-k8sstable1-default
  spec:
    containers:
    - args:
      - --timeout=90
      - --repo=k8s.io/kubernetes=release-1.8
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.8
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-cosstable1-k8sstable1-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=release-1.8
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.8
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2enode-cosstable1-k8sstable2-default
  spec:
    containers:
    - args:
      - --timeout=90
      - --repo=k8s.io/kubernetes=release-1.7
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.7
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2enode-cosstable1-k8sstable2-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=release-1.7
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.7
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2enode-cosstable1-k8sstable3-default
  spec:
    containers:
    - args:
      - --timeout=90
      - --repo=k8s.io/kubernetes=release-1.6
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.6
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2enode-cosstable1-k8sstable3-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=release-1.6
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.6
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-ubuntudev-k8sdev-gkespec
  spec:
    containers:
    - args:
      - --timeout=80
      - --repo=k8s.io/kubernetes=master
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-ubuntudev-k8sdev-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=master
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-ubuntudev-k8sstable1-gkespec
  spec:
    containers:
    - args:
      - --timeout=80
      - --repo=k8s.io/kubernetes=release-1.8
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.8
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-ubuntudev-k8sstable1-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=release-1.8
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.8
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-ubuntudev-k8sstable2-gkespec
  spec:
    containers:
    - args:
      - --timeout=80
      - --repo=k8s.io/kubernetes=release-1.7
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.7
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-ubuntudev-k8sstable2-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=release-1.7
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.7
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-ubuntustable1-k8sdev-gkespec
  spec:
    containers:
    - args:
      - --timeout=80
      - --repo=k8s.io/kubernetes=master
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-ubuntustable1-k8sdev-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=master
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-ubuntustable1-k8sstable1-gkespec
  spec:
    containers:
    - args:
      - --timeout=80
      - --repo=k8s.io/kubernetes=release-1.8
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.8
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-ubuntustable1-k8sstable1-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=release-1.8
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.8
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-ubuntustable1-k8sstable2-gkespec
  spec:
    containers:
    - args:
      - --timeout=80
      - --repo=k8s.io/kubernetes=release-1.7
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.7
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- tags:
  - generated   # AUTO-GENERATED by experiment/generate_tests.py - DO NOT EDIT!
  interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2enode-ubuntustable1-k8sstable2-serial
  spec:
    containers:
    - args:
      - --timeout=200
      - --repo=k8s.io/kubernetes=release-1.7
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: GOPATH
        value: /go
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.7
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- name: ci-kubernetes-kubemark-5-prow-canary
  cron: "0 0 * * *" # to make sure the prow timezone
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always
      args:
      - --bare
      - --timeout=80
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      - name: KUBEMARK_BAZEL_BUILD
        value: "y"
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: ssh
        mountPath: /etc/ssh-key-secret
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        secretName: ssh-key-secret
        defaultMode: 0400

- name: ci-kubernetes-node-kubelet
  interval: 1h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      args:
      - --repo=k8s.io/kubernetes=master
      - --timeout=90
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      - name: GOPATH
        value: /go
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: ssh
        mountPath: /etc/ssh-key-secret
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        secretName: ssh-key-secret
        defaultMode: 0400

- name: ci-kubernetes-node-kubelet-benchmark
  interval: 2h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      args:
      - --repo=k8s.io/kubernetes=master
      - --timeout=90
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      - name: GOPATH
        value: /go
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: ssh
        mountPath: /etc/ssh-key-secret
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        secretName: ssh-key-secret
        defaultMode: 0400

- name: ci-kubernetes-node-kubelet-beta
  interval: 1h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      args:
      - --repo=k8s.io/kubernetes=release-1.9
      - --timeout=90
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      - name: GOPATH
        value: /go
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: ssh
        mountPath: /etc/ssh-key-secret
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        secretName: ssh-key-secret
        defaultMode: 0400

- name: ci-kubernetes-node-kubelet-conformance
  interval: 2h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      args:
      - --repo=k8s.io/kubernetes=master
      - --timeout=90
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      - name: GOPATH
        value: /go
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: ssh
        mountPath: /etc/ssh-key-secret
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        secretName: ssh-key-secret
        defaultMode: 0400

- name: ci-kubernetes-node-kubelet-flaky
  interval: 2h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      args:
      - --repo=k8s.io/kubernetes=master
      - --timeout=90
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      - name: GOPATH
        value: /go
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: ssh
        mountPath: /etc/ssh-key-secret
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        secretName: ssh-key-secret
        defaultMode: 0400

- name: ci-kubernetes-node-kubelet-non-cri-1-6
  interval: 6h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.6
      args:
      - --repo=k8s.io/kubernetes=release-1.6
      - --timeout=90
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      - name: GOPATH
        value: /go
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: ssh
        mountPath: /etc/ssh-key-secret
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        secretName: ssh-key-secret
        defaultMode: 0400

- name: ci-kubernetes-node-kubelet-serial
  interval: 4h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      args:
      - --repo=k8s.io/kubernetes=master
      - --timeout=240
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      - name: GOPATH
        value: /go
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: ssh
        mountPath: /etc/ssh-key-secret
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        secretName: ssh-key-secret
        defaultMode: 0400

- name: ci-kubernetes-node-kubelet-serial-cpu-manager
  interval: 4h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      args:
      - --repo=k8s.io/kubernetes=master
      - --timeout=240
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      - name: GOPATH
        value: /go
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: ssh
        mountPath: /etc/ssh-key-secret
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        secretName: ssh-key-secret
        defaultMode: 0400

- name: ci-kubernetes-node-kubelet-stable1
  interval: 2h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.8
      args:
      - --repo=k8s.io/kubernetes=release-1.8
      - --timeout=90
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      - name: GOPATH
        value: /go
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: ssh
        mountPath: /etc/ssh-key-secret
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        secretName: ssh-key-secret
        defaultMode: 0400

- name: ci-kubernetes-node-kubelet-stable2
  interval: 6h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.7
      args:
      - --repo=k8s.io/kubernetes=release-1.7
      - --timeout=90
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      - name: GOPATH
        value: /go
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: ssh
        mountPath: /etc/ssh-key-secret
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        secretName: ssh-key-secret
        defaultMode: 0400

- name: ci-kubernetes-node-kubelet-stable3
  interval: 24h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-1.6
      args:
      - --repo=k8s.io/kubernetes=release-1.6
      - --timeout=90
      - --root=/go/src
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      - name: GOPATH
        value: /go
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: ssh
        mountPath: /etc/ssh-key-secret
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        secretName: ssh-key-secret
        defaultMode: 0400

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-soak-cos-docker-validation
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      # TODO(krzyzacy): use stable tag once verify it works
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-soak-gce-1-6
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      # TODO(krzyzacy): use stable tag once verify it works
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-soak-gce-1-7
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      # TODO(krzyzacy): use stable tag once verify it works
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-soak-gce-gci
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      # TODO(krzyzacy): use stable tag once verify it works
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-soak-gci-gce-stable1
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      # TODO(krzyzacy): use stable tag once verify it works
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-soak-gci-gce-stable2
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      # TODO(krzyzacy): use stable tag once verify it works
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-soak-gci-gce-stable3
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      # TODO(krzyzacy): use stable tag once verify it works
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-soak-gke-gci
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      # TODO(krzyzacy): use stable tag once verify it works
      image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /etc/ssh-key-secret
        name: ssh
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        defaultMode: 256
        secretName: ssh-key-secret


- name: ci-perf-tests-e2e-gce-clusterloader
  interval: 2h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      args:
      - "--repo=k8s.io/kubernetes=master"
      - "--repo=k8s.io/perf-tests=master"
      - "--root=/go/src"
      - "--timeout=60"
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
        value: /etc/ssh-key-secret/ssh-private
      - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
        value: /etc/ssh-key-secret/ssh-public
      - name: USER
        value: prow
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: ssh
        mountPath: /etc/ssh-key-secret
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: ssh
      secret:
        secretName: ssh-key-secret
        defaultMode: 0400

- name: ci-perf-tests-kubemark-100-benchmark
  interval: 2h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20171108-8b5aad9f-master
      args:
      - "--repo=k8s.io/perf-tests=master"
      - "--root=/go/src"
      - "--timeout=10"
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account

- name: ci-test-infra-bazel
  interval: 1h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.7.0
      args:
      - "--clean"
      - "--git-cache=/root/.cache/git"
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/test-infra=master"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--" # end bootstrap args, scenario args below
      - "--batch" # mitigation for https://github.com/bazelbuild/bazel/issues/3956
      - "--build=//... -//vendor/..."
      - "--install=gubernator/test_requirements.txt"
      - "--test=//... //hack:verify-all -//vendor/..."
      - "--test-args=--test_output=errors"
      env:
      - name: TEST_TMPDIR
        value: /root/.cache/bazel
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: cache-ssd
        mountPath: /root/.cache
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          memory: "2Gi"
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: cache-ssd
      hostPath:
        path: /mnt/disks/ssd0

- name: ci-test-infra-triage
  interval: 1h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/triage:latest
      imagePullPolicy: Always
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: triage-service-account

- name: issue-creator
  agent: kubernetes
  interval: 24h
  spec:
    containers:
    - image: gcr.io/k8s-testimages/issue-creator:v20170907-5240cca5
      args:
      - --dry-run=false
      - --alsologtostderr
      - --org=kubernetes
      - --project=kubernetes
      - --token-file=/etc/token/bot-github-token
      - --test-owners-csv=/test_owners.csv
      - --triage-window=1
      - --triage-count=10
      - --flakyjob-count=3
      volumeMounts:
      - name: token
        mountPath: /etc/token
    volumes:
    - name: token
      secret:
        secretName: fejta-bot-token

- interval: 1h
  agent: kubernetes
  name: maintenance-ci-aws-janitor
  spec:
    containers:
    - args:
      - --bare
      - --timeout=30
      - --service-account=/etc/service-account/service-account.json
      - --upload=gs://kubernetes-jenkins/logs
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: AWS_SHARED_CREDENTIALS_FILE
        value: /workspace/.aws/credentials
      image: gcr.io/k8s-test-infra-aws/aws-janitor:0.3
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
      - mountPath: /workspace/.aws
        name: aws-cred
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: aws-cred
      secret:
        defaultMode: 256
        secretName: aws-cred

- interval: 24h
  agent: kubernetes
  name: maintenance-ci-janitor
  spec:
    containers:
    - args:
      - --bare
      - --timeout=600
      - --service-account=/etc/service-account/service-account.json
      - --upload=gs://kubernetes-jenkins/logs
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account

- interval: 1h
  agent: kubernetes
  name: maintenance-pull-janitor
  spec:
    containers:
    - args:
      - --bare
      - --timeout=30
      - --service-account=/etc/service-account/service-account.json
      - --upload=gs://kubernetes-jenkins/logs
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account

- name: metrics-bigquery
  interval: 24h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bigquery:v20170911-5aa1975d
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: VELODROME_INFLUXDB_CONFIG
        value: /etc/velodrome-influxdb/config.json
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: influxdb
        mountPath: /etc/velodrome-influxdb
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: triage-service-account
    - name: influxdb
      secret:
        secretName: velodrome-influxdb

- name: periodic-kubernetes-bazel-build-1-6
  interval: 2h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.5.2  # https://github.com/kubernetes/kubernetes/issues/51571
      args:
      - "--clean"
      - "--git-cache=/root/.cache/git"
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.6"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      env:
      - name: TEST_TMPDIR
        value: /root/.cache/bazel
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: cache-ssd
        mountPath: /root/.cache
      resources:
        requests:
          memory: "6Gi"
      ports:
      - containerPort: 9999
        hostPort: 9999
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: cache-ssd
      hostPath:
        path: /mnt/disks/ssd0
  run_after_success:
  - name: periodic-kubernetes-bazel-test-1-6
    agent: kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.5.2  # https://github.com/kubernetes/kubernetes/issues/51571
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/kubernetes=release-1.6"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: periodic-kubernetes-e2e-kubeadm-gce-1-6
    agent: kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-testimages/e2e-kubeadm:v20171120-fd7d8854
        args:
        - "--repo=k8s.io/kubernetes=release-1.6"
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--timeout=320"
        - "--upload=gs://kubernetes-jenkins/logs"
        env:
        - name: USER
          value: prow
        - name: REPO_NAME
          value: kubernetes=release-1.6
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: ssh
          mountPath: /etc/ssh-key-secret
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          secretName: ssh-key-secret
          defaultMode: 0400
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

- name: periodic-kubernetes-bazel-build-1-7
  interval: 2h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.6.1
      args:
      - "--clean"
      - "--git-cache=/root/.cache/git"
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.7"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      env:
      # Make Bazel use shared cache for its root
      # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
      - name: TEST_TMPDIR
        value: /root/.cache/bazel
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: cache-ssd
        mountPath: /root/.cache
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          memory: "6Gi"
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: cache-ssd
      hostPath:
        path: /mnt/disks/ssd0
  run_after_success:
  - name: periodic-kubernetes-bazel-test-1-7
    agent: kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.6.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/kubernetes=release-1.7"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        securityContext:
          privileged: true
        env:
        # Make Bazel use shared cache for its root
        # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: periodic-kubernetes-e2e-kubeadm-gce-1-7
    agent: kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-testimages/e2e-kubeadm:v20171108-e53c04a8
        args:
        - "--repo=k8s.io/kubernetes=release-1.7"
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--timeout=320"
        - "--upload=gs://kubernetes-jenkins/logs"
        env:
        - name: USER
          value: prow
        - name: REPO_NAME
          value: kubernetes=release-1.7
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: ssh
          mountPath: /etc/ssh-key-secret
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          secretName: ssh-key-secret
          defaultMode: 0400
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: periodic-kubernetes-e2e-kubeadm-gce-upgrade-1-6-1-7
    agent: kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-testimages/e2e-kubeadm:v20171108-e53c04a8
        args:
        - "--repo=k8s.io/kubernetes=release-1.7"
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--timeout=320"
        - "--upload=gs://kubernetes-jenkins/logs"
        env:
        - name: USER
          value: prow
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: ssh
          mountPath: /etc/ssh-key-secret
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          secretName: ssh-key-secret
          defaultMode: 0400
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

- name: periodic-kubernetes-bazel-build-1-8
  interval: 2h
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.6.1
      args:
      - "--clean"
      - "--git-cache=/root/.cache/git"
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.8"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      env:
      # Make Bazel use shared cache for its root
      # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
      - name: TEST_TMPDIR
        value: /root/.cache/bazel
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: cache-ssd
        mountPath: /root/.cache
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          memory: "6Gi"
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: cache-ssd
      hostPath:
        path: /mnt/disks/ssd0
  run_after_success:
  - name: periodic-kubernetes-bazel-test-1-8
    agent: kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.6.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/kubernetes=release-1.8"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        securityContext:
          privileged: true
        env:
        # Make Bazel use shared cache for its root
        # https://docs.bazel.build/versions/master/output_directories.html#documentation-of-the-current-bazel-output-directory-layout
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: periodic-kubernetes-e2e-kubeadm-gce-1-8
    agent: kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-testimages/e2e-kubeadm:v20171120-fd7d8854
        args:
        - "--repo=k8s.io/kubernetes=release-1.8"
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--timeout=320"
        - "--upload=gs://kubernetes-jenkins/logs"
        env:
        - name: USER
          value: prow
        - name: REPO_NAME
          value: kubernetes=release-1.8
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: ssh
          mountPath: /etc/ssh-key-secret
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          secretName: ssh-key-secret
          defaultMode: 0400
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: periodic-kubernetes-e2e-kubeadm-gce-upgrade-1-7-1-8
    agent: kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-testimages/e2e-kubeadm:v20171120-fd7d8854
        args:
        - "--repo=k8s.io/kubernetes=release-1.8"
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--timeout=320"
        - "--upload=gs://kubernetes-jenkins/logs"
        env:
        - name: USER
          value: prow
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: ssh
          mountPath: /etc/ssh-key-secret
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          secretName: ssh-key-secret
          defaultMode: 0400
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0

- name: periodic-kubernetes-bazel-build-1-9
  interval: 2h
  agent: kubernetes
  branches:
  - master
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.6.1
      args:
      - "--clean"
      - "--git-cache=/root/.cache/git"
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.9"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--" # end bootstrap args, scenario args below
      - "--build=//... -//vendor/..."
      - "--release=//build/release-tars"
      env:
      - name: TEST_TMPDIR
        value: /root/.cache/bazel
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
      - name: cache-ssd
        mountPath: /root/.cache
      ports:
      - containerPort: 9999
        hostPort: 9999
      resources:
        requests:
          memory: "6Gi"
    volumes:
    - name: service
      secret:
        secretName: service-account
    - name: cache-ssd
      hostPath:
        path: /mnt/disks/ssd0
  run_after_success:
  - name: periodic-kubernetes-bazel-test-1-9
    agent: kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20171113-ae73dc58-0.6.1
        args:
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/kubernetes=release-1.9"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--" # end bootstrap args, scenario args below
        - "--test=//... -//build/... -//vendor/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--build_tag_filters=-e2e"
        - "--test-args=--test_tag_filters=-e2e"
        - "--test-args=--flaky_test_attempts=3"
        env:
        - name: TEST_TMPDIR
          value: /root/.cache/bazel
        securityContext:
          privileged: true
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: periodic-kubernetes-e2e-kubeadm-gce-1-9
    agent: kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-testimages/e2e-kubeadm:v20171120-fd7d8854
        args:
        - "--repo=k8s.io/kubernetes=release-1.8"
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--timeout=320"
        - "--upload=gs://kubernetes-jenkins/logs"
        env:
        - name: USER
          value: prow
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: ssh
          mountPath: /etc/ssh-key-secret
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          secretName: ssh-key-secret
          defaultMode: 0400
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0
  - name: periodic-kubernetes-e2e-kubeadm-gce-upgrade-1-8-1-9
    agent: kubernetes
    spec:
      containers:
      - image: gcr.io/k8s-testimages/e2e-kubeadm:v20171120-fd7d8854
        args:
        - "--repo=k8s.io/kubernetes=release-1.9"
        - "--clean"
        - "--git-cache=/root/.cache/git"
        - "--timeout=320"
        - "--upload=gs://kubernetes-jenkins/logs"
        env:
        - name: USER
          value: prow
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/service-account/service-account.json
        - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
          value: /etc/ssh-key-secret/ssh-private
        - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
          value: /etc/ssh-key-secret/ssh-public
        volumeMounts:
        - name: service
          mountPath: /etc/service-account
          readOnly: true
        - name: ssh
          mountPath: /etc/ssh-key-secret
          readOnly: true
        - name: cache-ssd
          mountPath: /root/.cache
        ports:
        - containerPort: 9999
          hostPort: 9999
      volumes:
      - name: service
        secret:
          secretName: service-account
      - name: ssh
        secret:
          secretName: ssh-key-secret
          defaultMode: 0400
      - name: cache-ssd
        hostPath:
          path: /mnt/disks/ssd0



- interval: 24h
  agent: kubernetes
  name: periodic-kubernetes-e2e-debs-pushed
  spec:
    containers:
    - args:
      - --timeout=60
      - --repo=k8s.io/kubeadm=master
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      - name: USER
        value: prow
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always
      volumeMounts:
      - mountPath: /etc/service-account
        name: service
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account

- name: periodic-test-infra-retester
  interval: 20m  # Retest at most 1 PR per 20m, which should not DOS the queue.
  agent: kubernetes
  spec:
    containers:
    - image: gcr.io/k8s-testimages/commenter:v20170808-abf66782
      args:
      - |-
        --query=is:pr
        -label:do-not-merge
        -label:do-not-merge/blocked-paths
        -label:do-not-merge/cherry-pick-not-approved
        -label:do-not-merge/hold
        -label:do-not-merge/release-note-label-needed
        -label:do-not-merge/work-in-progress
        label:lgtm
        label:approved
        status:failure
        -label:needs-rebase
        -label:needs-ok-to-test
        -label:"cncf-cla: no"
        repo:kubernetes/kubernetes
      - --token=/etc/token/bot-github-token
      - |-
        --comment=/retest
        This bot automatically retries jobs that failed/flaked on approved PRs (send feedback to `@fejta`).

        Review the [full test history](https://k8s-gubernator.appspot.com/pr/{{.Number}}) for this PR.

      - --template
      - --ceiling=1
      - --confirm
      volumeMounts:
      - name: token
        mountPath: /etc/token
    volumes:
    - name: token
      secret:
        secretName: fejta-bot-token

- interval: 8h
  agent: kubernetes
  name: tf-k8s-periodic
  spec:
    containers:
    # TODO(jlewi): Replace latest with a specific tag once the images stabilize.
    - image: gcr.io/mlkube-testing/builder:latest
      imagePullPolicy: Always
      env:
      - name: GOOGLE_APPLICATION_CREDENTIALS
        value: /etc/service-account/service-account.json
      volumeMounts:
      - name: service
        mountPath: /etc/service-account
        readOnly: true
    volumes:
    - name: service
      secret:
        secretName: service-account
