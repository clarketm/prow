plank:
  job_url_template: 'https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/{{if eq .Spec.Type "presubmit"}}pr-logs/pull{{else if eq .Spec.Type "batch"}}pr-logs/pull{{else}}logs{{end}}{{if .Spec.Refs}}{{if ne .Spec.Refs.Org ""}}{{if ne .Spec.Refs.Org "kubernetes"}}/{{if and (eq .Spec.Refs.Org "kubernetes-sigs") (ne .Spec.Refs.Repo "poseidon")}}sigs.k8s.io{{else}}{{.Spec.Refs.Org}}{{end}}_{{.Spec.Refs.Repo}}{{else if ne .Spec.Refs.Repo "kubernetes"}}/{{.Spec.Refs.Repo}}{{end}}{{end}}{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/'
  report_template: '[Full PR test history](https://k8s-gubernator.appspot.com/pr/{{if eq .Spec.Refs.Org "kubernetes"}}{{if eq .Spec.Refs.Repo "kubernetes"}}{{else}}{{.Spec.Refs.Repo}}/{{end}}{{else}}{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}/{{end}}{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}). [Your PR dashboard](https://k8s-gubernator.appspot.com/pr/{{with index .Spec.Refs.Pulls 0}}{{.Author}}{{end}}). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/{{.Spec.Refs.Org}}/{{.Spec.Refs.Repo}}/issues?q=is:issue+is:open) when you hit one in your PR.'
  pod_pending_timeout: 60m
  default_decoration_config:
    timeout: 7200000000000 # 2h
    grace_period: 15000000000 # 15s
    utility_images:
      clonerefs: "registry.svc.ci.openshift.org/ci/clonerefs:latest"
      initupload: "registry.svc.ci.openshift.org/ci/initupload:latest"
      entrypoint: "registry.svc.ci.openshift.org/ci/entrypoint:latest"
      sidecar: "registry.svc.ci.openshift.org/ci/sidecar:latest"
    gcs_configuration:
      bucket: "kubernetes-jenkins"
      path_strategy: "legacy"
      default_org: "kubernetes"
      default_repo: "kubernetes"
    gcs_credentials_secret: "service-account"

sinker:
  resync_period: 1m
  max_prowjob_age: 48h
  max_pod_age: 30m

deck:
  tide_update_period: 1s
  hidden_repos:
  - kubernetes-security

prowjob_namespace: default
pod_namespace: test-pods
log_level: info

branch-protection:
  allow_disabled_policies: true  # TODO(fejta): remove, needed by k/website
  orgs:
    kubernetes:
      protect: true
      required_status_checks:
        contexts:
        - cla/linuxfoundation
      repos:
        api:
          restrictions:
            users: []
            teams:
            - stage-bots
        apiextensions-apiserver:
          restrictions:
            users: []
            teams:
            - stage-bots
        apimachinery:
          restrictions:
            users: []
            teams:
            - stage-bots
        apiserver:
          restrictions:
            users: []
            teams:
            - stage-bots
        client-go:
          restrictions:
            users: []
            teams:
            - stage-bots
        code-generator:
          restrictions:
            users: []
            teams:
            - stage-bots
        dashboard:
          required_pull_request_reviews:
            required_approving_review_count: 1
        dns:
          required_status_checks:
            strict: true
            contexts:
            - continuous-integration/travis-ci
          required_pull_request_reviews:
            required_approving_review_count: 1
        git-sync:
          enforce_admins: true
          required_status_checks:
            strict: true
          restrictions: # only allow admins
            users: []
            teams: []
        kompose:
          required_status_checks:
            contexts:
            - continuous-integration/travis-ci
          required_pull_request_reviews:
            required_approving_review_count: 1
        kubectl:
          required_status_checks:
            contexts:
            - continuous-integration/travis-ci
        kubernetes:
          restrictions: # only allow admins
            users: []
            teams: []
        kube-aggregator:
          restrictions:
            users: []
            teams:
            - stage-bots
        metrics:
          restrictions:
            users: []
            teams:
            - stage-bots
        org:
          restrictions: # only allow admins
            users: []
            teams: []
        repo-infra:
          required_status_checks:
            contexts:
            - continuous-integration/travis-ci
        sample-apiserver:
          restrictions:
            users: []
            teams:
            - stage-bots
        sample-controller:
          restrictions:
            users: []
            teams:
            - stage-bots
        utils:
          required_pull_request_reviews:
            required_approving_review_count: 1
          required_status_checks:
            contexts:
            - continuous-integration/travis-ci
        website:
          protect: false # TODO(fejta): protect all branches soon
          required_status_checks:
            contexts:
            - continuous-integration/travis-ci
          branches:
            master:
              protect: true
            release-1.4:
              protect: true
            release-1.5:
              protect: true
            release-1.6:
              protect: true
            release-1.7:
              protect: true
            release-1.8:
              protect: true
            release-1.9:
              protect: true
    kubernetes-sigs:
      protect: true
      required_status_checks:
        contexts:
        - cla/linuxfoundation

tide:
  queries:
  - orgs:
    - kubeflow
    labels:
    - lgtm
    - approved
    missingLabels:
    - do-not-merge
    - do-not-merge/hold
    - do-not-merge/invalid-owners-file
    - do-not-merge/work-in-progress
    - needs-ok-to-test
    - needs-rebase
  - repos:
    - helm/charts
    labels:
    - lgtm
    - approved
    - "cncf-cla: yes"
    missingLabels:
    - do-not-merge
    - do-not-merge/blocked-paths
    - do-not-merge/cherry-pick-not-approved
    - do-not-merge/hold
    - do-not-merge/invalid-owners-file
    - do-not-merge/release-note-label-needed
    - do-not-merge/work-in-progress
    - needs-ok-to-test
    - needs-rebase
  - repos:
    - kubernetes/client-go
    - kubernetes/cloud-provider-aws
    - kubernetes/cloud-provider-azure
    - kubernetes/cloud-provider-gcp
    - kubernetes/cloud-provider-openstack
    - kubernetes/cloud-provider-vsphere
    - kubernetes/cluster-registry
    - kubernetes/community
    - kubernetes/contrib
    - kubernetes/dashboard
    - kubernetes/examples
    - kubernetes/features
    - kubernetes/federation
    - kubernetes/gengo
    - kubernetes/heapster
    - kubernetes/ingress-nginx
    - kubernetes/kops
    - kubernetes/kube-deploy
    - kubernetes/kube-openapi
    - kubernetes/kube-state-metrics
    - kubernetes/kubeadm
    - kubernetes/kubernetes-docs-ja
    - kubernetes/kubernetes-docs-ko
    - kubernetes/kubernetes-template-project
    - kubernetes/minikube
    - kubernetes/node-problem-detector
    - kubernetes/org
    - kubernetes/perf-tests
    - kubernetes/publishing-bot
    - kubernetes/release
    - kubernetes/repo-infra
    - kubernetes/sig-release
    - kubernetes/steering
    - kubernetes/test-infra
    - kubernetes/website
    - kubernetes-sigs/application
    - kubernetes-sigs/cluster-api
    - kubernetes-sigs/cluster-api-provider-aws
    - kubernetes-sigs/cluster-api-provider-gcp
    - kubernetes-sigs/cluster-api-provider-openstack
    - kubernetes-sigs/controller-runtime
    - kubernetes-sigs/controller-tools
    - kubernetes-sigs/gcp-compute-persistent-disk-csi-driver
    - kubernetes-sigs/gcp-filestore-csi-driver
    - kubernetes-sigs/kubebuilder
    - kubernetes-sigs/kustomize
    - client-go/unofficial-docs
    labels:
    - lgtm
    - approved
    - "cncf-cla: yes"
    missingLabels:
    - do-not-merge
    - do-not-merge/blocked-paths
    - do-not-merge/cherry-pick-not-approved
    - do-not-merge/hold
    - do-not-merge/invalid-owners-file
    - do-not-merge/release-note-label-needed
    - do-not-merge/work-in-progress
    - needs-ok-to-test
    - needs-rebase
  - repos:
    - kubernetes/kubectl
    labels:
    - "cncf-cla: yes"
    missingLabels:
    - do-not-merge/hold
    - do-not-merge/invalid-owners-file
    - do-not-merge/work-in-progress
    reviewApprovedRequired: true
  - repos:
    - kubernetes-sigs/federation-v2
    - kubernetes-sigs/kubeadm-dind-cluster
    - kubernetes-sigs/testing_frameworks
    - kubernetes-sigs/poseidon
    labels:
    - lgtm
    - approved
    - "cncf-cla: yes"
    missingLabels:
    - do-not-merge/hold
    - do-not-merge/invalid-owners-file
    - do-not-merge/work-in-progress
    - needs-ok-to-test
  - repos:
    - kubernetes-incubator/service-catalog
    labels:
    - lgtm
    - approved
    - "cncf-cla: yes"
    - LGTM1
    - LGTM2
    missingLabels:
    - do-not-merge/hold
    - do-not-merge/invalid-owners-file
    - do-not-merge/work-in-progress
    - needs-ok-to-test
    - needs-rebase
  merge_method:
    helm/charts: squash
    kubeflow: squash
    kubernetes/dashboard: squash
    kubernetes/kube-deploy: squash
    kubernetes/website: squash
    kubernetes/kubernetes-docs-ja: squash
    kubernetes/kubernetes-docs-ko: squash
    kubernetes-sigs/cluster-api: squash
    kubernetes-sigs/cluster-api-provider-aws: squash
    kubernetes-sigs/cluster-api-provider-gcp: squash
    kubernetes-sigs/cluster-api-provider-openstack: squash
    kubernetes-incubator/service-catalog: squash
  target_url: https://prow.k8s.io/tide.html

push_gateway:
  endpoint: pushgateway

presets:
# credential presets
- labels:
    preset-service-account: "true"
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/service-account/service-account.json
  volumes:
  - name: service
    secret:
      secretName: service-account
  volumeMounts:
  - name: service
    mountPath: /etc/service-account
    readOnly: true
- labels:
    preset-gke-alpha-service: "true"
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/service-account/service-account.json
  volumes:
  - name: service
    secret:
      secretName: gke-alpha-service-account
  volumeMounts:
  - name: service
    mountPath: /etc/service-account
    readOnly: true
- labels:
    preset-istio-service: "true"
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/service-account/istio-service-account.json
  volumes:
  - name: service
    secret:
      secretName: istio-service-account
  volumeMounts:
  - name: service
    mountPath: /etc/service-account
    readOnly: true
- labels:
    preset-k8s-ssh: "true"
  env:
  - name: USER
    value: prow
  - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
    value: /etc/ssh-key-secret/ssh-private
  - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
    value: /etc/ssh-key-secret/ssh-public
  volumes:
  - name: ssh
    secret:
      defaultMode: 0400
      secretName: ssh-key-secret
  volumeMounts:
  - name: ssh
    mountPath: /etc/ssh-key-secret
    readOnly: true
- labels:
    preset-aws-ssh: "true"
  env:
  - name: USER
    value: prow
  - name: JENKINS_AWS_SSH_PRIVATE_KEY_FILE
    value: /etc/aws-ssh/aws-ssh-private
  - name: JENKINS_AWS_SSH_PUBLIC_KEY_FILE
    value: /etc/aws-ssh/aws-ssh-public
  volumes:
  - name: aws-ssh
    secret:
      defaultMode: 0400
      secretName: aws-ssh-key-secret
  volumeMounts:
  - name: aws-ssh
    mountPath: /etc/aws-ssh
    readOnly: true
- labels:
    preset-aws-credential: "true"
  env:
  - name: JENKINS_AWS_CREDENTIALS_FILE
    value: /etc/aws-cred/credentials
  volumes:
  - name: aws-cred
    secret:
      defaultMode: 0400
      secretName: aws-cred-new
  volumeMounts:
  - name: aws-cred
    mountPath: /etc/aws-cred
    readOnly: true
# storage / caching presets
- labels:
    preset-bazel-scratch-dir: "true"
  env:
  - name: TEST_TMPDIR
    value: /bazel-scratch/.cache/bazel
  volumes:
  - name: bazel-scratch
    emptyDir: {}
  volumeMounts:
  - name: bazel-scratch
    mountPath: /bazel-scratch/.cache
- labels:
    preset-bazel-remote-cache-enabled: "true"
  env:
  - name: BAZEL_REMOTE_CACHE_ENABLED
    value: "true"
- labels:
    preset-cloud-provider-azure-account: "true"
  env:
  - name: IMAGE_REGISTRY
    value: kaicr1.azurecr.io
  - name: K8S_AZURE_ACCOUNT_CONFIG
    value: /etc/cloud-provider-azure-account/account.env
  volumes:
  - name: cloud-provider-azure-account-cloud
    secret:
      secretName: cloud-provider-azure-account
      items:
      - key: account.env
        path: account.env
  - name: cloud-provider-azure-account-registry
    secret:
      secretName: cloud-provider-azure-account
      items:
      - key: registry.json
        path: config.json
  volumeMounts:
  - name: cloud-provider-azure-account-cloud
    mountPath: /etc/cloud-provider-azure-account
    readOnly: true
  - name: cloud-provider-azure-account-registry
    mountPath: /root/.docker
    readOnly: true

presubmits:
  kubernetes/cloud-provider-azure:
  - name: pull-cloud-provider-azure-check
    agent: kubernetes
    always_run: true
    context: pull-cloud-provider-azure-check
    rerun_command: "/test pull-cloud-provider-azure-check"
    trigger: "(?m)^/test( all| pull-cloud-provider-azure-check),?(\\s+|$)"
    branches:
    - master
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"

  - name: pull-cloud-provider-azure-e2e
    agent: kubernetes
    always_run: false
    context: pull-cloud-provider-azure-e2e
    rerun_command: "/test pull-cloud-provider-azure-e2e"
    trigger: "(?m)^/test pull-cloud-provider-azure-e2e,?(\\s+|$)"
    branches:
    - master
    labels:
      preset-service-account: "true"
      preset-cloud-provider-azure-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--timeout=100"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /docker-graph
          name: auto-generated-docker-graph-volume-mount
      volumes:
      - name: auto-generated-docker-graph-volume-mount
        emptyDir: {}

  - name: pull-cloud-provider-azure-unit
    agent: kubernetes
    always_run: true
    context: pull-cloud-provider-azure-unit
    rerun_command: "/test pull-cloud-provider-azure-unit"
    trigger: "(?m)^/test( all| pull-cloud-provider-azure-unit),?(\\s+|$)"
    branches:
    - master
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"

  kubernetes/cloud-provider-openstack:
  - name: pull-cloud-provider-openstack-check
    agent: kubernetes
    always_run: true
    context: pull-cloud-provider-openstack-check
    rerun_command: "/test pull-cloud-provider-openstack-check"
    trigger: "(?m)^/test( all| pull-cloud-provider-openstack-check),?(\\s+|$)"
    branches:
    - master
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"

  - name: pull-cloud-provider-openstack-test
    agent: kubernetes
    always_run: true
    context: pull-cloud-provider-openstack-test
    rerun_command: "/test pull-cloud-provider-openstack-test"
    trigger: "(?m)^/test( all| pull-cloud-provider-openstack-test),?(\\s+|$)"
    branches:
    - master
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"

  kubernetes/community:
  - name: pull-community-verify
    agent: kubernetes
    context: pull-community-verify
    branches:
    - master
    rerun_command: "/test pull-community-verify"
    trigger: "(?m)^/test( all| pull-community-verify),?(\\s+|$)"
    always_run: true
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"

  kubernetes/dns:
  - name: pull-kubernetes-dns-test
    agent: kubernetes
    context: pull-kubernetes-dns-test
    branches:
    - master
    rerun_command: "/test pull-kubernetes-dns-test"
    trigger: "(?m)^/test( all| pull-kubernetes-dns-test),?(\\s+|$)"
    always_run: true
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"

  kubernetes/ingress-gce:
  - name: pull-ingress-gce-test
    agent: kubernetes
    context: pull-ingress-gce-test
    rerun_command: "/test pull-ingress-gce-test"
    trigger: "(?m)^/test( all| pull-ingress-gce-test),?(\\s+|$)"
    always_run: true
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - "--repo=k8s.io/ingress-gce=$(PULL_REFS)"
        - "--root=/go/src/"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
      volumes:
      - name: docker-graph
        emptyDir: {}

  GoogleCloudPlatform/k8s-multicluster-ingress:
  - name: pull-kubernetes-multicluster-ingress-test
    agent: kubernetes
    context: pull-kubernetes-multicluster-ingress-test
    branches:
    - master
    rerun_command: "/test pull-kubernetes-multicluster-ingress-test"
    trigger: "(?m)^/test( all| pull-kubernetes-multicluster-ingress-test),?(\\s+|$)"
    always_run: true
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - "--repo=github.com/GoogleCloudPlatform/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        volumeMounts:
        - name: coveralls
          mountPath: /etc/coveralls-token
          readOnly: true
      volumes:
      - name: coveralls
        secret:
          secretName: k8s-multicluster-ingress-coveralls-token

  kubernetes/federation:
  - name: pull-federation-bazel-test
    agent: kubernetes
    context: pull-federation-bazel-test
    always_run: true
    rerun_command: "/test pull-federation-bazel-test"
    trigger: "(?m)^/test( all| pull-federation-bazel-test),?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.8.1
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--" # end bootstrap args, scenario args below
        - "--test=//... -//build/... -//vendor/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--build_tag_filters=-e2e"
        - "--test-args=--test_tag_filters=-e2e"
        - "--test-args=--flaky_test_attempts=3"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"

  - name: pull-federation-e2e-gce
    agent: kubernetes
    always_run: true
    context: pull-federation-e2e-gce
    rerun_command: "/test pull-federation-e2e-gce"
    trigger: "(?m)^/test( all| pull-federation-e2e-gce),?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - "--repo=k8s.io/federation=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--root=/go/src/"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=110"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
      volumes:
      - name: docker-graph
        emptyDir: {}
  - name: pull-federation-verify
    agent: kubernetes
    context: pull-federation-verify
    rerun_command: "/test pull-federation-verify"
    trigger: "/test( all| pull-federation-verify)"
    always_run: true
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"

  kubernetes/heapster:
  - name: pull-heapster-e2e
    agent: kubernetes
    always_run: true
    context: pull-heapster-e2e
    rerun_command: "/test pull-heapster-e2e"
    trigger: "(?m)^/test( all| pull-heapster-e2e),?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        securityContext:
          privileged: true
      volumes:
      - name: docker-graph
        emptyDir: {}
  - name: pull-heapster-unit
    agent: kubernetes
    always_run: true
    context: pull-heapster-unit
    rerun_command: "/test pull-heapster-unit"
    trigger: "(?m)^/test( all| pull-heapster-unit),?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"

  kubernetes/kops:
  - name: pull-kops-bazel-build
    agent: kubernetes
    context: pull-kops-bazel-build
    branches:
    - master
    always_run: true
    skip_report: false
    rerun_command: "/test pull-kops-bazel-build"
    trigger: "(?m)^/test( all| pull-kops-bazel-build),?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-experimental
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--scenario=kubernetes_execute_bazel"
        - "--" # end bootstrap args, scenario args below
        - "make"
        - "bazel-build"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "2Gi"

  - name: pull-kops-bazel-test
    agent: kubernetes
    context: pull-kops-bazel-test
    branches:
    - master
    always_run: true
    skip_report: false
    rerun_command: "/test pull-kops-bazel-test"
    trigger: "(?m)^/test( all| pull-kops-bazel-test),?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-experimental
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--scenario=kubernetes_execute_bazel"
        - "--" # end bootstrap args, scenario args below
        - "make"
        - "bazel-test"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "2Gi"

  - name: pull-kops-e2e-kubernetes-aws
    agent: kubernetes
    always_run: true
    context: pull-kops-e2e-kubernetes-aws
    rerun_command: "/test pull-kops-e2e-kubernetes-aws"
    trigger: "(?m)^/test( all| pull-kops-e2e-kubernetes-aws),?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - --root=/go/src
        - --job=$(JOB_NAME)
        - --repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)
        - --service-account=/etc/service-account/service-account.json
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --timeout=90
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: docker-graph
        emptyDir: {}

  - name: pull-kops-verify-bazel
    agent: kubernetes
    context: pull-kops-verify-bazel
    branches:
    - master
    rerun_command: "/test pull-kops-verify-bazel"
    trigger: "(?m)^/test( all| pull-kops-verify-bazel),?(\\s+|$)"
    always_run: true
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"

  - name: pull-kops-verify-boilerplate
    agent: kubernetes
    context: pull-kops-verify-boilerplate
    branches:
    - master
    rerun_command: "/test pull-kops-verify-boilerplate"
    trigger: "(?m)^/test( all| pull-kops-verify-boilerplate),?(\\s+|$)"
    always_run: true
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"

  - name: pull-kops-verify-gofmt
    agent: kubernetes
    context: pull-kops-verify-gofmt
    branches:
    - master
    rerun_command: "/test pull-kops-verify-gofmt"
    trigger: "(?m)^/test( all| pull-kops-verify-gofmt),?(\\s+|$)"
    always_run: true
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"

  - name: pull-kops-verify-govet
    agent: kubernetes
    context: pull-kops-verify-govet
    branches:
    - master
    rerun_command: "/test pull-kops-verify-govet"
    trigger: "(?m)^/test( all| pull-kops-verify-govet),?(\\s+|$)"
    always_run: true
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"

  - name: pull-kops-verify-packages
    agent: kubernetes
    context: pull-kops-verify-packages
    branches:
    - master
    rerun_command: "/test pull-kops-verify-packages"
    trigger: "(?m)^/test( all| pull-kops-verify-packages),?(\\s+|$)"
    always_run: true
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"

  kubernetes/cluster-registry:
  - name: pull-cluster-registry-verify-gensrc
    agent: kubernetes
    context: pull-cluster-registry-verify-gensrc
    always_run: true
    rerun_command: "/test pull-cluster-registry-verify-gensrc"
    trigger: "(?m)^/test( all| pull-cluster-registry-verify-gensrc),?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "2Gi"
  - name: pull-cluster-registry-verify-gosrc
    agent: kubernetes
    context: pull-cluster-registry-verify-gosrc
    always_run: true
    rerun_command: "/test pull-cluster-registry-verify-gosrc"
    trigger: "(?m)^/test( all| pull-cluster-registry-verify-gosrc),?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.8
        args:
        - "--job=$(JOB_NAME)"
        - "--root=/go/src"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        env:
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "2Gi"
  containerd/cri:
  - name: pull-cri-containerd-build
    agent: kubernetes
    always_run: true
    context: pull-cri-containerd-build
    rerun_command: "/test pull-cri-containerd-build"
    trigger: "(?m)^/test( all| pull-cri-containerd-build),?(\\s+|$)"
    skip_branches:
    - v0.1
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-experimental
        args:
        - "--repo=github.com/containerd/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
    run_after_success:
    - name: pull-cri-containerd-node-e2e
      agent: kubernetes
      branches:
      - master
      always_run: true
      skip_report: false
      max_concurrency: 8
      context: pull-cri-containerd-node-e2e
      rerun_command: "/test pull-cri-containerd-node-e2e"
      trigger: "(?m)^/test( all| pull-cri-containerd-node-e2e),?(\\s+|$)"
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      spec:
        containers:
        - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
          args:
          - --root=/go/src
          - "--job=$(JOB_NAME)"
          - "--repo=k8s.io/kubernetes"
          - "--repo=github.com/containerd/$(REPO_NAME)=$(PULL_REFS)"
          - "--service-account=/etc/service-account/service-account.json"
          - "--upload=gs://kubernetes-jenkins/pr-logs"
          - "--timeout=90"
          - "--"
          - "--node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/containerd/cri-master/image-config.yaml -node-env=PULL_REFS=$(PULL_REFS)"
    - name: pull-cri-containerd-node-e2e
      agent: kubernetes
      branches:
      - release/1.0
      always_run: true
      skip_report: false
      max_concurrency: 8
      context: pull-cri-containerd-node-e2e
      rerun_command: "/test pull-cri-containerd-node-e2e"
      trigger: "(?m)^/test( all| pull-cri-containerd-node-e2e),?(\\s+|$)"
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      spec:
        containers:
        - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
          args:
          - --root=/go/src
          - "--job=$(JOB_NAME)"
          - "--repo=k8s.io/kubernetes=release-1.10"
          - "--repo=github.com/containerd/$(REPO_NAME)=$(PULL_REFS)"
          - "--service-account=/etc/service-account/service-account.json"
          - "--upload=gs://kubernetes-jenkins/pr-logs"
          - "--timeout=90"
          - "--"
          - "--node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/containerd/cri-master/image-config.yaml -node-env=PULL_REFS=$(PULL_REFS)"

  - name: pull-cri-containerd-verify
    agent: kubernetes
    always_run: true
    context: pull-cri-containerd-verify
    rerun_command: "/test pull-cri-containerd-verify"
    trigger: "(?m)^/test( all| pull-cri-containerd-verify),?(\\s+|$)"
    skip_branches:
    - v0.1
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-experimental
        args:
        - "--repo=github.com/containerd/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"

  kubernetes/kubernetes:
  - name: pull-kubernetes-bazel-build
    agent: kubernetes
    context: pull-kubernetes-bazel-build
    always_run: true
    rerun_command: "/test pull-kubernetes-bazel-build"
    trigger: "(?m)^/test( all| pull-kubernetes-bazel-build),?(\\s+|$)"
    skip_branches:
    - release-1.10 # different bazel version
    - release-1.9 # need to cherry pick back https://github.com/kubernetes/kubernetes/pull/59251, possibly others
    - release-1.8 # different set of targets
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=60"
        - "--" # end bootstrap args, scenario args below
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
    run_after_success:
    - name: pull-kubernetes-e2e-kubeadm-gce
      agent: kubernetes
      context: pull-kubernetes-e2e-kubeadm-gce
      max_concurrency: 8
      skip_report: true
      run_if_changed: '^(cmd/kubeadm|build/debs).*$'
      rerun_command: "/test pull-kubernetes-e2e-kubeadm-gce"
      trigger: "(?m)^/test pull-kubernetes-e2e-kubeadm-gce,?(\\s+|$)"
      skip_branches:
      - release-1.10 # different bazel version
      - release-1.9 # need to cherry pick back https://github.com/kubernetes/kubernetes/pull/59251, possibly others
      - release-1.8 # different set of targets
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180725-3b7f33973
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--upload=gs://kubernetes-jenkins/pr-logs"
          - "--timeout=75"
          env:
          - name: SKIP_RELEASE_VALIDATION # See: https://github.com/kubernetes/kubernetes/pull/50391
            value: "true"
  - name: pull-kubernetes-bazel-build
    agent: kubernetes
    context: pull-kubernetes-bazel-build
    always_run: true
    rerun_command: "/test pull-kubernetes-bazel-build"
    trigger: "(?m)^/test( all| pull-kubernetes-bazel-build),?(\\s+|$)"
    branches:
    - release-1.10
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.10
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=60"
        - "--" # end bootstrap args, scenario args below
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
    run_after_success:
    - name: pull-kubernetes-e2e-kubeadm-gce
      agent: kubernetes
      context: pull-kubernetes-e2e-kubeadm-gce
      max_concurrency: 8
      skip_report: true
      run_if_changed: '^(cmd/kubeadm|build/debs).*$'
      rerun_command: "/test pull-kubernetes-e2e-kubeadm-gce"
      trigger: "(?m)^/test pull-kubernetes-e2e-kubeadm-gce,?(\\s+|$)"
      branches:
      - release-1.10
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180725-3b7f33973
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--upload=gs://kubernetes-jenkins/pr-logs"
          - "--timeout=75"
          env:
          - name: SKIP_RELEASE_VALIDATION # See: https://github.com/kubernetes/kubernetes/pull/50391
            value: "true"
  - name: pull-kubernetes-bazel-build
    agent: kubernetes
    context: pull-kubernetes-bazel-build
    always_run: true
    rerun_command: "/test pull-kubernetes-bazel-build"
    trigger: "(?m)^/test( all| pull-kubernetes-bazel-build),?(\\s+|$)"
    branches:
    - release-1.9
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.8.1
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=60"
        - "--" # end bootstrap args, scenario args below
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
    run_after_success:
    - name: pull-kubernetes-e2e-kubeadm-gce
      agent: kubernetes
      context: pull-kubernetes-e2e-kubeadm-gce
      max_concurrency: 8
      skip_report: true
      run_if_changed: '^(cmd/kubeadm|build/debs).*$'
      rerun_command: "/test pull-kubernetes-e2e-kubeadm-gce"
      trigger: "(?m)^/test pull-kubernetes-e2e-kubeadm-gce,?(\\s+|$)"
      branches:
      - release-1.9
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180725-3b7f33973
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--upload=gs://kubernetes-jenkins/pr-logs"
          - "--timeout=75"
          env:
          - name: SKIP_RELEASE_VALIDATION # See: https://github.com/kubernetes/kubernetes/pull/50391
            value: "true"
  - name: pull-kubernetes-bazel-build
    agent: kubernetes
    context: pull-kubernetes-bazel-build
    always_run: true
    rerun_command: "/test pull-kubernetes-bazel-build"
    trigger: "(?m)^/test( all| pull-kubernetes-bazel-build),?(\\s+|$)"
    branches:
    - release-1.8
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.6.1
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=60"
        - "--" # end bootstrap args, scenario args below
        - "--build=//cmd/... //pkg/... //federation/... //plugin/... //third_party/... //examples/... //test/... //vendor/k8s.io/..."
        - "--release=//build/release-tars"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
    run_after_success:
    - name: pull-kubernetes-e2e-kubeadm-gce
      agent: kubernetes
      context: pull-kubernetes-e2e-kubeadm-gce
      max_concurrency: 8
      skip_report: true
      run_if_changed: '^(cmd/kubeadm|build/debs).*$'
      rerun_command: "/test pull-kubernetes-e2e-kubeadm-gce"
      trigger: "(?m)^/test pull-kubernetes-e2e-kubeadm-gce,?(\\s+|$)"
      branches:
      - release-1.8
      labels:
        preset-service-account: "true"
        preset-k8s-ssh: "true"
      spec:
        containers:
        - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180725-3b7f33973
          args:
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--upload=gs://kubernetes-jenkins/pr-logs"
          - "--timeout=75"
          env:
          - name: SKIP_RELEASE_VALIDATION # See: https://github.com/kubernetes/kubernetes/pull/50391
            value: "true"

  - name: pull-kubernetes-bazel-test
    agent: kubernetes
    context: pull-kubernetes-bazel-test
    always_run: true
    rerun_command: "/test pull-kubernetes-bazel-test"
    trigger: "(?m)^/test( all| pull-kubernetes-bazel-test),?(\\s+|$)"
    skip_branches:
    - release-1.10 # different bazel version
    - release-1.9 # need to cherry pick back https://github.com/kubernetes/kubernetes/pull/59251, possibly others
    - release-1.8 # different set of targets
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=60"
        - "--" # end bootstrap args, scenario args below
        - "--test=//... -//build/... -//vendor/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--config=unit"
        - "--test-args=--build_tag_filters=-e2e,-integration"
        - "--test-args=--test_tag_filters=-e2e,-integration"
        - "--test-args=--flaky_test_attempts=3"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: pull-kubernetes-bazel-test
    agent: kubernetes
    context: pull-kubernetes-bazel-test
    always_run: true
    rerun_command: "/test pull-kubernetes-bazel-test"
    trigger: "(?m)^/test( all| pull-kubernetes-bazel-test),?(\\s+|$)"
    branches:
    - release-1.10
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.10
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=60"
        - "--" # end bootstrap args, scenario args below
        - "--test=//... -//build/... -//vendor/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--config=unit"
        - "--test-args=--build_tag_filters=-e2e,-integration"
        - "--test-args=--test_tag_filters=-e2e,-integration"
        - "--test-args=--flaky_test_attempts=3"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: pull-kubernetes-bazel-test
    agent: kubernetes
    context: pull-kubernetes-bazel-test
    always_run: true
    rerun_command: "/test pull-kubernetes-bazel-test"
    trigger: "(?m)^/test( all| pull-kubernetes-bazel-test),?(\\s+|$)"
    branches:
    - release-1.9
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.8.1
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=60"
        - "--" # end bootstrap args, scenario args below
        - "--test=//... -//build/... -//vendor/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--build_tag_filters=-e2e,-integration"
        - "--test-args=--test_tag_filters=-e2e,-integration"
        - "--test-args=--flaky_test_attempts=3"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: pull-kubernetes-bazel-test
    agent: kubernetes
    context: pull-kubernetes-bazel-test
    always_run: true
    rerun_command: "/test pull-kubernetes-bazel-test"
    trigger: "(?m)^/test( all| pull-kubernetes-bazel-test),?(\\s+|$)"
    branches:
    - release-1.8
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.6.1
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=60"
        - "--" # end bootstrap args, scenario args below
        - "--test=//cmd/... //pkg/... //federation/... //plugin/... //third_party/... //hack/... //vendor/k8s.io/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--test_tag_filters=-integration"
        - "--test-args=--flaky_test_attempts=3"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"

  - name: pull-kubernetes-cross
    agent: kubernetes
    context: pull-kubernetes-cross
    rerun_command: "/test pull-kubernetes-cross"
    trigger: "(?m)^/test pull-kubernetes-cross,?(\\s+|$)"
    run_if_changed: '^(build\/|hack\/lib\/)|(Makefile)$'
    skip_branches:
    - release-1.9
    - release-1.8
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bootstrap:v20180510-809cd85b5
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        resources:
          requests:
            cpu: 7
            memory: "41Gi"
      volumes:
      - name: docker-graph
        emptyDir: {}

  - name: pull-kubernetes-cross
    agent: kubernetes
    context: pull-kubernetes-cross
    rerun_command: "/test pull-kubernetes-cross"
    trigger: "(?m)^/test pull-kubernetes-cross,?(\\s+|$)"
    # typecheck doesn't exist for < 1.10 currently, so we still run cross more often
    run_if_changed: '^(build\/|hack\/lib\/)|(Makefile)|(.*_(windows|linux|osx|unsupported)(_test)?\.go)$'
    branches:
    - release-1.8
    - release-1.9
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bootstrap:v20180510-809cd85b5
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        resources:
          requests:
            cpu: 7
            memory: "41Gi"
      volumes:
      - name: docker-graph
        emptyDir: {}

  - name: pull-kubernetes-cross-prow
    agent: kubernetes
    context: pull-kubernetes-cross-prow
    rerun_command: "/test pull-kubernetes-cross-prow"
    trigger: "(?m)^/test pull-kubernetes-cross-prow,?(\\s+|$)"
    always_run: false
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bootstrap:latest
        imagePullPolicy: Always
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        resources:
          requests:
            cpu: 7
            memory: "41Gi"
      volumes:
      - name: docker-graph
        emptyDir: {}
  - name: pull-kubernetes-dind-e2e
    agent: kubernetes
    context: pull-kubernetes-dind-e2e
    always_run: false
    rerun_command: "/test pull-kubernetes-dind-e2e"
    trigger: "(?m)^/test pull-kubernetes-dind-e2e,?(\\s+|$)"
    skip_branches:
    - release-1.9
    - release-1.8
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - "--job=$(JOB_NAME)"
        - "--root=/go/src"
        - "--repo=k8s.io/kubernetes=$(PULL_REFS)"
        - "--repo=k8s.io/test-infra=master"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--scenario=dindind_execute"
        - "--"
        - "kubetest"
        - "--"
        - "--build=dind"
        - "--deployment=dind"
        - "--ginkgo-focus=\\[Conformance\\]"
        - "--ginkgo-skip=(DNS)|(NodeSelector)"
        - "--up"
        - "--test"
        - "--down"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
          capabilities:
            add: ["SYS_ADMIN"]
        volumeMounts:
        - mountPath: /lib/modules
          name: modules
          readOnly: true
        - mountPath: /sys/fs/cgroup
          name: cgroup
        - mountPath: /docker-graph
          name: auto-generated-docker-graph-volume-mount
        resources:
          requests:
            # We can adjust this after we know the requirements.
            memory: "6Gi"
      volumes:
      - name: modules
        hostPath:
          path: /lib/modules
          type: Directory
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
      - name: auto-generated-docker-graph-volume-mount
        emptyDir: {}

  - name: pull-kubernetes-e2e-containerd-gce
    agent: kubernetes
    context: pull-kubernetes-e2e-containerd-gce
    rerun_command: "/test pull-kubernetes-e2e-containerd-gce"
    trigger: "(?m)^/test (containerd|pull-kubernetes-e2e-containerd-gce),?(\\s+|$)"
    always_run: false
    branches:
    - master
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - args:
        - --root=/go/src
        - --repo=k8s.io/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --repo=github.com/containerd/cri
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --timeout=90
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        resources:
          requests:
            memory: "6Gi"
  - name: pull-kubernetes-e2e-gce
    agent: kubernetes
    context: pull-kubernetes-e2e-gce
    rerun_command: "/test pull-kubernetes-e2e-gce"
    trigger: "(?m)^/test (all|pull-kubernetes-e2e-gce),?(\\s+|$)"
    always_run: true
    skip_branches:
    - release-1.10 # per-release image
    - release-1.9 # per-release image
    - release-1.8 # per-release image
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - args:
        - --root=/go/src
        - --repo=k8s.io/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --timeout=90
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        resources:
          requests:
            memory: "6Gi"
  - name: pull-kubernetes-e2e-gce
    agent: kubernetes
    context: pull-kubernetes-e2e-gce
    rerun_command: "/test pull-kubernetes-e2e-gce"
    trigger: "(?m)^/test (all|pull-kubernetes-e2e-gce),?(\\s+|$)"
    always_run: true
    branches:
    - release-1.10
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - args:
        - --root=/go/src
        - --repo=k8s.io/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --timeout=90
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.10
        resources:
          requests:
            memory: "6Gi"
  - name: pull-kubernetes-e2e-gce
    agent: kubernetes
    context: pull-kubernetes-e2e-gce
    rerun_command: "/test pull-kubernetes-e2e-gce"
    trigger: "(?m)^/test (all|pull-kubernetes-e2e-gce),?(\\s+|$)"
    always_run: true
    # TODO(bentheelder): enforce this pattern (skip all releases) or implement
    # something better like https://github.com/kubernetes/test-infra/pull/4918
    branches:
    - release-1.9 # per-release image
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - args:
        - --root=/go/src
        - --repo=k8s.io/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --timeout=90
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.9
        resources:
          requests:
            memory: "6Gi"
  - name: pull-kubernetes-e2e-gce
    agent: kubernetes
    context: pull-kubernetes-e2e-gce
    rerun_command: "/test pull-kubernetes-e2e-gce"
    trigger: "(?m)^/test (all|pull-kubernetes-e2e-gce),?(\\s+|$)"
    always_run: true
    branches:
    - release-1.8
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - args:
        - --root=/go/src
        - --repo=k8s.io/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --timeout=90
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.8
        resources:
          requests:
            memory: "6Gi"

  - name: pull-kubernetes-e2e-gce-100-performance
    agent: kubernetes
    context: pull-kubernetes-e2e-gce-100-performance
    rerun_command: "/test pull-kubernetes-e2e-gce-100-performance"
    trigger: "(?m)^/test (all|pull-kubernetes-e2e-gce-100-performance),?(\\s+|$)"
    always_run: true
    skip_report: false
    max_concurrency: 12
    branches:
    - master
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - args:
        - --root=/go/src
        - --repo=k8s.io/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --timeout=120
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        resources:
          requests:
            memory: "6Gi"
  - name: pull-kubernetes-e2e-gce-big-performance
    agent: kubernetes
    context: pull-kubernetes-e2e-gce-big-performance
    rerun_command: "/test pull-kubernetes-e2e-gce-big-performance"
    trigger: "(?m)^/test pull-kubernetes-e2e-gce-big-performance,?(\\s+|$)"
    always_run: false
    max_concurrency: 1
    branches:
    - master
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - args:
        - --root=/go/src
        - --repo=k8s.io/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --timeout=270
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        resources:
          requests:
            memory: "6Gi"

  - name: pull-kubernetes-e2e-gce-device-plugin-gpu
    agent: kubernetes
    skip_branches:
    - release-1.10  # per-release image
    - release-1.9  # per-release image
    - release-1.8  # per-release image
    always_run: true
    skip_report: false
    max_concurrency: 12
    context: pull-kubernetes-e2e-gce-device-plugin-gpu
    rerun_command: "/test pull-kubernetes-e2e-gce-device-plugin-gpu"
    trigger: "(?m)^/test( all| pull-kubernetes-e2e-gce-device-plugin-gpu),?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: pull-kubernetes-e2e-gce-device-plugin-gpu
    agent: kubernetes
    branches:
    - release-1.10  # per-release image
    always_run: true
    skip_report: false
    max_concurrency: 12
    context: pull-kubernetes-e2e-gce-device-plugin-gpu
    rerun_command: "/test pull-kubernetes-e2e-gce-device-plugin-gpu"
    trigger: "(?m)^/test( all| pull-kubernetes-e2e-gce-device-plugin-gpu),?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.10
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: pull-kubernetes-e2e-gce-device-plugin-gpu
    agent: kubernetes
    branches:
    - release-1.9 # per-release image
    always_run: true
    skip_report: false
    max_concurrency: 12
    context: pull-kubernetes-e2e-gce-device-plugin-gpu
    rerun_command: "/test pull-kubernetes-e2e-gce-device-plugin-gpu"
    trigger: "(?m)^/test( all| pull-kubernetes-e2e-gce-device-plugin-gpu),?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.9
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: pull-kubernetes-e2e-gce-device-plugin-gpu
    agent: kubernetes
    branches:
    - release-1.8
    always_run: true
    skip_report: false
    max_concurrency: 12
    context: pull-kubernetes-e2e-gce-device-plugin-gpu
    rerun_command: "/test pull-kubernetes-e2e-gce-device-plugin-gpu"
    trigger: "(?m)^/test( all| pull-kubernetes-e2e-gce-device-plugin-gpu),?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.8
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: pull-kubernetes-e2e-gce-large-performance
    agent: kubernetes
    context: pull-kubernetes-e2e-gce-large-performance
    rerun_command: "/test pull-kubernetes-e2e-gce-large-performance"
    trigger: "(?m)^/test pull-kubernetes-e2e-gce-large-performance,?(\\s+|$)"
    always_run: false
    max_concurrency: 1
    branches:
    - master
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - args:
        - --root=/go/src
        - --repo=k8s.io/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --timeout=570
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        resources:
          requests:
            memory: "6Gi"

  - name: pull-kubernetes-e2e-gke
    agent: kubernetes
    context: pull-kubernetes-e2e-gke
    rerun_command: "/test pull-kubernetes-e2e-gke"
    trigger: "(?m)^/test pull-kubernetes-e2e-gke,?(\\s+|$)"
    always_run: false
    run_if_changed: '^(cluster/gce|cluster/addons).*$'
    # TODO(bentheelder): enforce this pattern (skip all releases) or implement
    # something better like https://github.com/kubernetes/test-infra/pull/4918
    skip_branches:
    - release-1.10 # per-release image
    - release-1.9 # per-release image
    - release-1.8 # per-release image
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - args:
        - --root=/go/src
        - --repo=k8s.io/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --timeout=90
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        resources:
          requests:
            memory: "6Gi"
  - name: pull-kubernetes-e2e-gke
    agent: kubernetes
    context: pull-kubernetes-e2e-gke
    rerun_command: "/test pull-kubernetes-e2e-gke"
    trigger: "(?m)^/test pull-kubernetes-e2e-gke,?(\\s+|$)"
    always_run: false
    run_if_changed: '^(cluster/gce|cluster/addons).*$'
    branches:
    - release-1.10 # per-release image
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - args:
        - --root=/go/src
        - --repo=k8s.io/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --timeout=90
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.10
        resources:
          requests:
            memory: "6Gi"
  - name: pull-kubernetes-e2e-gke
    agent: kubernetes
    context: pull-kubernetes-e2e-gke
    rerun_command: "/test pull-kubernetes-e2e-gke"
    trigger: "(?m)^/test pull-kubernetes-e2e-gke,?(\\s+|$)"
    always_run: false
    run_if_changed: '^(cluster/gce|cluster/addons).*$'
    branches:
    - release-1.9 # per-release image
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - args:
        - --root=/go/src
        - --repo=k8s.io/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --timeout=90
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.9
        resources:
          requests:
            memory: "6Gi"
  - name: pull-kubernetes-e2e-gke
    agent: kubernetes
    context: pull-kubernetes-e2e-gke
    rerun_command: "/test pull-kubernetes-e2e-gke"
    trigger: "(?m)^/test pull-kubernetes-e2e-gke,?(\\s+|$)"
    always_run: false
    run_if_changed: '^(cluster/gce|cluster/addons).*$'
    branches:
    - release-1.8
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - args:
        - --root=/go/src
        - --repo=k8s.io/kubernetes=$(PULL_REFS)
        - --repo=k8s.io/release
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --timeout=90
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.8
        resources:
          requests:
            memory: "6Gi"

  - name: pull-kubernetes-e2e-gke-device-plugin-gpu
    agent: kubernetes
    skip_branches:
    - release-1.10  # per-release image
    - release-1.9  # per-release image
    - release-1.8  # per-release image
    always_run: false
    skip_report: false
    max_concurrency: 1
    context: pull-kubernetes-e2e-gke-device-plugin-gpu
    rerun_command: "/test pull-kubernetes-e2e-gke-device-plugin-gpu"
    trigger: "(?m)^/test pull-kubernetes-e2e-gke-device-plugin-gpu,?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: pull-kubernetes-e2e-gke-device-plugin-gpu
    agent: kubernetes
    branches:
    - release-1.10  # per-release image
    always_run: false
    skip_report: false
    max_concurrency: 1
    context: pull-kubernetes-e2e-gke-device-plugin-gpu
    rerun_command: "/test pull-kubernetes-e2e-gke-device-plugin-gpu"
    trigger: "(?m)^/test pull-kubernetes-e2e-gke-device-plugin-gpu,?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.10
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: pull-kubernetes-e2e-gke-device-plugin-gpu
    agent: kubernetes
    branches:
    - release-1.9  # per-release image
    always_run: false
    skip_report: false
    max_concurrency: 1
    context: pull-kubernetes-e2e-gke-device-plugin-gpu
    rerun_command: "/test pull-kubernetes-e2e-gke-device-plugin-gpu"
    trigger: "(?m)^/test pull-kubernetes-e2e-gke-device-plugin-gpu,?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.9
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: pull-kubernetes-e2e-gke-device-plugin-gpu
    agent: kubernetes
    branches:
    - release-1.8  # per-release image
    always_run: false
    skip_report: false
    max_concurrency: 1
    context: pull-kubernetes-e2e-gke-device-plugin-gpu
    rerun_command: "/test pull-kubernetes-e2e-gke-device-plugin-gpu"
    trigger: "(?m)^/test pull-kubernetes-e2e-gke-device-plugin-gpu,?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.8
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"

  - name: pull-kubernetes-e2e-kops-aws
    agent: kubernetes
    skip_branches:
    - release-1.10  # per-release image
    - release-1.9  # per-release image
    - release-1.8  # per-release image
    max_concurrency: 12
    always_run: true
    context: pull-kubernetes-e2e-kops-aws
    rerun_command: "/test pull-kubernetes-e2e-kops-aws"
    trigger: "(?m)^/test( all| pull-kubernetes-e2e-kops-aws),?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=75"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: pull-kubernetes-e2e-kops-aws
    agent: kubernetes
    branches:
    - release-1.10  # per-release image
    max_concurrency: 12
    always_run: true
    context: pull-kubernetes-e2e-kops-aws
    rerun_command: "/test pull-kubernetes-e2e-kops-aws"
    trigger: "(?m)^/test( all| pull-kubernetes-e2e-kops-aws),?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-bazel-remote-cache-enabled: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.10
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=75"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: pull-kubernetes-e2e-kops-aws
    agent: kubernetes
    branches:
    - release-1.9  # per-release image
    max_concurrency: 12
    always_run: true
    context: pull-kubernetes-e2e-kops-aws
    rerun_command: "/test pull-kubernetes-e2e-kops-aws"
    trigger: "(?m)^/test( all| pull-kubernetes-e2e-kops-aws),?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.9
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=75"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: pull-kubernetes-e2e-kops-aws
    agent: kubernetes
    branches:
    - release-1.8
    max_concurrency: 12
    always_run: true
    context: pull-kubernetes-e2e-kops-aws
    rerun_command: "/test pull-kubernetes-e2e-kops-aws"
    trigger: "(?m)^/test( all| pull-kubernetes-e2e-kops-aws),?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-aws-ssh: "true"
      preset-aws-credential: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.8
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=75"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: pull-kubernetes-integration
    agent: kubernetes
    always_run: true
    context: pull-kubernetes-integration
    rerun_command: "/test pull-kubernetes-integration"
    trigger: "(?m)^/test( all| pull-kubernetes-integration),?(\\s+|$)"
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bootstrap:v20180510-809cd85b5
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=60"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        resources:
          requests:
            cpu: 4
      volumes:
      - name: docker-graph
        emptyDir: {}
  - name: pull-kubernetes-integration-prow
    agent: kubernetes
    always_run: false
    context: pull-kubernetes-integration-prow
    rerun_command: "/test pull-kubernetes-integration-prow"
    trigger: "(?m)^/test pull-kubernetes-integration-prow,?(\\s+|$)"
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bootstrap:latest
        imagePullPolicy: Always
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=60"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        resources:
          requests:
            cpu: 4
      volumes:
      - name: docker-graph
        emptyDir: {}
  - name: pull-kubernetes-kubemark-e2e-gce-big
    agent: kubernetes
    always_run: true
    skip_report: false
    max_concurrency: 12
    skip_branches:
    - release-1.10  # per-release image
    - release-1.9  # per-release image
    - release-1.8  # per-release image
    context: pull-kubernetes-kubemark-e2e-gce-big
    rerun_command: "/test pull-kubernetes-kubemark-e2e-gce-big"
    trigger: "(?m)^/test (all|pull-kubernetes-kubemark-e2e-gce-big),?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=120"
        env:
        # TODO(krzyzacy): Figure out bazel built kubemark image
        # - name: KUBEMARK_BAZEL_BUILD
        # value: "y"
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: docker-graph
        emptyDir: {}
  - name: pull-kubernetes-kubemark-e2e-gce-big
    agent: kubernetes
    always_run: true
    skip_report: false
    max_concurrency: 12
    branches:
    - release-1.10  # per-release image
    context: pull-kubernetes-kubemark-e2e-gce-big
    rerun_command: "/test pull-kubernetes-kubemark-e2e-gce-big"
    trigger: "(?m)^/test (all|pull-kubernetes-kubemark-e2e-gce-big),?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.10
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=120"
        env:
        # TODO(krzyzacy): Figure out bazel built kubemark image
        # - name: KUBEMARK_BAZEL_BUILD
        # value: "y"
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: docker-graph
        emptyDir: {}
  - name: pull-kubernetes-kubemark-e2e-gce-big
    agent: kubernetes
    always_run: true
    skip_report: false
    max_concurrency: 12
    branches:
    - release-1.9  # per-release image
    context: pull-kubernetes-kubemark-e2e-gce-big
    rerun_command: "/test pull-kubernetes-kubemark-e2e-gce-big"
    trigger: "(?m)^/test (all|pull-kubernetes-kubemark-e2e-gce-big),?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.9
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=120"
        env:
        # TODO(krzyzacy): Figure out bazel built kubemark image
        # - name: KUBEMARK_BAZEL_BUILD
        # value: "y"
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: docker-graph
        emptyDir: {}
  - name: pull-kubernetes-kubemark-e2e-gce-big
    agent: kubernetes
    always_run: false
    skip_report: false
    max_concurrency: 12
    branches:
    - release-1.8
    context: pull-kubernetes-kubemark-e2e-gce-big
    rerun_command: "/test pull-kubernetes-kubemark-e2e-gce-big"
    trigger: "(?m)^/test pull-kubernetes-kubemark-e2e-gce-big,?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.8
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=120"
        env:
        # TODO(krzyzacy): Figure out bazel built kubemark image
        # - name: KUBEMARK_BAZEL_BUILD
        # value: "y"
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: docker-graph
        emptyDir: {}

  - name: pull-kubernetes-kubemark-e2e-gce-scale
    agent: kubernetes
    always_run: false
    max_concurrency: 1
    branches:
    - master
    context: pull-kubernetes-kubemark-e2e-gce-scale
    rerun_command: "/test pull-kubernetes-kubemark-e2e-gce-scale"
    trigger: "(?m)^/test pull-kubernetes-kubemark-e2e-gce-scale,?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=k8s.io/release"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=1220"
        env:
        # TODO(krzyzacy): Figure out bazel built kubemark image
        # - name: KUBEMARK_BAZEL_BUILD
        # value: "y"
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        resources:
          requests:
            memory: "6Gi"
      volumes:
      - name: docker-graph
        emptyDir: {}

  - name: pull-kubernetes-local-e2e
    agent: kubernetes
    branches:
    - master
    always_run: false
    skip_report: false
    max_concurrency: 8
    context: pull-kubernetes-local-e2e
    rerun_command: "/test pull-kubernetes-local-e2e"
    trigger: "(?m)^/test pull-kubernetes-local-e2e,?(\\s+|$)"
    run_if_changed: '(hyperkube|local-up-cluster)'
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=140"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
      volumes:
      - name: docker-graph
        emptyDir: {}

  - name: pull-kubernetes-local-e2e-containerized
    agent: kubernetes
    branches:
    - master
    always_run: false
    skip_report: false
    context: pull-kubernetes-local-e2e-containerized
    rerun_command: "/test pull-kubernetes-local-e2e-containerized"
    trigger: "(?m)^/test pull-kubernetes-local-e2e-containerized,?(\\s+|$)"
    run_if_changed: '^(pkg|cmd)/kubelet.*$'
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=140"
        env:
        - name: DOCKERIZE_KUBELET
          value: "true"
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
      volumes:
      - name: docker-graph
        emptyDir: {}

  - name: pull-kubernetes-node-e2e
    agent: kubernetes
    skip_branches:
    - release-1.10  # per-release image
    - release-1.9  # per-release image
    - release-1.8  # per-release image
    always_run: true
    max_concurrency: 12
    context: pull-kubernetes-node-e2e
    rerun_command: "/test pull-kubernetes-node-e2e"
    trigger: "(?m)^/test( all| pull-kubernetes-node-e2e),?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        - "--" # end bootstrap args, scenario args below
        - "--node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config.yaml"
        ports:
        resources:
          requests:
            memory: "6Gi"
  - name: pull-kubernetes-node-e2e
    agent: kubernetes
    branches:
    - release-1.10  # per-release image
    always_run: true
    max_concurrency: 12
    context: pull-kubernetes-node-e2e
    rerun_command: "/test pull-kubernetes-node-e2e"
    trigger: "(?m)^/test( all| pull-kubernetes-node-e2e),?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.10
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        - "--" # end bootstrap args, scenario args below
        - "--node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config.yaml"
        ports:
        resources:
          requests:
            memory: "6Gi"
  - name: pull-kubernetes-node-e2e
    agent: kubernetes
    branches:
    - release-1.9  # per-release image
    always_run: true
    max_concurrency: 12
    context: pull-kubernetes-node-e2e
    rerun_command: "/test pull-kubernetes-node-e2e"
    trigger: "(?m)^/test( all| pull-kubernetes-node-e2e),?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.9
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        - "--" # end bootstrap args, scenario args below
        - "--node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config.yaml"
        ports:
        resources:
          requests:
            memory: "6Gi"
  - name: pull-kubernetes-node-e2e
    agent: kubernetes
    branches:
    - release-1.8
    always_run: true
    max_concurrency: 12
    context: pull-kubernetes-node-e2e
    rerun_command: "/test pull-kubernetes-node-e2e"
    trigger: "(?m)^/test( all| pull-kubernetes-node-e2e),?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.8
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        - "--" # end bootstrap args, scenario args below
        - "--node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/image-config.yaml"
        resources:
          requests:
            memory: "6Gi"

  - name: pull-kubernetes-node-e2e-containerd
    agent: kubernetes
    branches:
    - master
    always_run: false
    max_concurrency: 12
    context: pull-kubernetes-node-e2e-containerd
    rerun_command: "/test pull-kubernetes-node-e2e-containerd"
    trigger: "(?m)^/test (containerd|pull-kubernetes-node-e2e-containerd),?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - --root=/go/src
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--repo=github.com/containerd/cri"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=90"
        - --
        - "--node-args=--image-config-file=/workspace/test-infra/jobs/e2e_node/containerd/cri-master/image-config.yaml"
        resources:
          requests:
            memory: "6Gi"

  - name: pull-kubernetes-typecheck
    agent: kubernetes
    always_run: true
    skip_report: false
    context: pull-kubernetes-typecheck
    rerun_command: "/test pull-kubernetes-typecheck"
    trigger: "(?m)^/test( all| pull-kubernetes-typecheck),?(\\s+|$)"
    skip_branches:
    - release-1.9 # doesn't have typecheck
    - release-1.8 # doesn't have typecheck
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - "--job=$(JOB_NAME)"
        - "--root=/go/src"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=75"

  - name: pull-kubernetes-verify
    agent: kubernetes
    always_run: true
    context: pull-kubernetes-verify
    rerun_command: "/test pull-kubernetes-verify"
    trigger: "(?m)^/test( all| pull-kubernetes-verify),?(\\s+|$)"
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bootstrap:v20180510-809cd85b5
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=75"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        resources:
          requests:
            cpu: 4
      volumes:
      - name: docker-graph
        emptyDir: {}

  - name: pull-kubernetes-verify-prow
    agent: kubernetes
    always_run: false
    context: pull-kubernetes-verify-prow
    rerun_command: "/test pull-kubernetes-verify-prow"
    trigger: "(?m)^/test pull-kubernetes-verify-prow,?(\\s+|$)"
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bootstrap:latest
        imagePullPolicy: Always
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=75"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
        resources:
          requests:
            cpu: 4
      volumes:
      - name: docker-graph
        emptyDir: {}

  kubernetes-sigs/testing_frameworks:
  - name: pull-frameworks-test
    context: pull-frameworks-test
    agent: kubernetes
    branches:
    - master
    always_run: true
    skip_report: false
    trigger: "/test (all|pull-frameworks-test)"
    rerun_command: "/test pull-frameworks-test"
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=sigs.k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"

  kubernetes-sigs/poseidon:
  - name: ci-poseidon-e2e-gce
    context: ci-poseidon-e2e-gce
    always_run: true
    rerun_command: "/test ci-poseidon-e2e-gce"
    trigger: "(?m)^/test( all| ci-poseidon-e2e-gce),?(\\s+|$)"
    agent: kubernetes
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=110"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
      volumes:
      - name: docker-graph
        emptyDir: {}
  - name: pull-poseidon-bazel
    agent: kubernetes
    context: pull-poseidon-bazel
    always_run: true
    rerun_command: "/test pull-poseidon-bazel"
    trigger: "(?m)^/test( all| pull-poseidon-bazel),?(\\s+|$)"
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.10
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--timeout=45"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "2Gi"
  - name: pull-poseidon-verify
    context: pull-poseidon-verify
    agent: kubernetes
    branches:
    - master
    always_run: true
    trigger: "(?m)^/test( all| pull-poseidon-verify),?(\\s+|$)"
    rerun_command: "/test pull-poseidon-verify"
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/gcloud-in-go:v20171113-192bec25
        args:
        - "--repo=github.com/$(REPO_OWNER)/$(REPO_NAME)=$(PULL_REFS)"
        - "--root=/go/src"
        - "--upload=gs://kubernetes-jenkins/pr-logs"
        - "--clean"
        - "--timeout=45"
  kubernetes/release:
  - name: pull-release-cluster-up
    agent: kubernetes
    context: pull-release-cluster-up
    rerun_command: "/test pull-release-cluster-up"
    trigger: "(?m)^/test (all|pull-release-cluster-up),?(\\s+|$)"
    always_run: true
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - args:
        - --root=/go/src
        - --repo=k8s.io/kubernetes
        - --repo=k8s.io/release=$(PULL_REFS)
        - --upload=gs://kubernetes-jenkins/pr-logs
        - --timeout=90
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        resources:
          requests:
            memory: "6Gi"

postsubmits:
  kubernetes/ingress-gce:
  - name: ci-ingress-gce-image-push
    agent: kubernetes
    labels:
      preset-service-account: "true"
      preset-k8s-ssh: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - "--repo=k8s.io/ingress-gce=$(PULL_REFS)"
        - "--root=/go/src/"
        - "--timeout=320"
        - "--"
        - "--env=VERSION=$(PULL_BASE_REF)"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
      volumes:
      - name: docker-graph
        emptyDir: {}

  GoogleCloudPlatform/k8s-multicluster-ingress:
  - name: ci-kubemci-image-push
    agent: kubernetes
    branches:
    - master
    labels:
      preset-service-account: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - "--repo=k8s.io/test-infra=master"
        - "--root=/go/src/"
        - "--timeout=90"
        env:
        - name: DOCKER_IN_DOCKER_ENABLED
          value: "true"
        # docker-in-docker needs privileged mode
        securityContext:
          privileged: true
        volumeMounts:
        - name: docker-graph
          mountPath: /docker-graph
      volumes:
      - name: docker-graph
        emptyDir: {}

  kubernetes/federation:
  - agent: kubernetes
    name: ci-federation-release
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.8.1
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
          # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "2Gi"

  kubernetes/kubernetes:
  - name: ci-kubernetes-bazel-build
    agent: kubernetes
    branches:
    - master
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--timeout=60"
        - "--" # end bootstrap args, scenario args below
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        - "--gcs=gs://kubernetes-release-dev/ci"
        - "--version-suffix=-bazel"
        - "--publish-version=gs://kubernetes-release-dev/ci/latest-bazel.txt"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
    run_after_success:
    - name: ci-kubernetes-bazel-test
      agent: kubernetes
      labels:
        preset-service-account: "true"
        preset-bazel-scratch-dir: "true"
        preset-bazel-remote-cache-enabled: "true"
      spec:
        containers:
        - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
          args:
          - "--job=$(JOB_NAME)"
          - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
          - "--service-account=/etc/service-account/service-account.json"
          - "--upload=gs://kubernetes-jenkins/logs"
          - "--timeout=60"
          - "--" # end bootstrap args, scenario args below
          - "--test=//... -//build/... -//vendor/..."
          - "--manual-test=//hack:verify-all"
          - "--test-args=--config=unit"
          - "--test-args=--build_tag_filters=-e2e,-integration"
          - "--test-args=--test_tag_filters=-e2e,-integration"
          - "--test-args=--flaky_test_attempts=3"
          securityContext:
            privileged: true
          resources:
            requests:
              memory: "6Gi"
  - name: ci-kubernetes-bazel-build-1-10
    agent: kubernetes
    branches:
    - release-1.10
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.10
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--timeout=60"
        - "--" # end bootstrap args, scenario args below
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        - "--gcs=gs://kubernetes-release-dev/ci"
        - "--version-suffix=-bazel"
        - "--publish-version=gs://kubernetes-release-dev/ci/latest-bazel-1.10.txt"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: ci-kubernetes-bazel-build-1-11
    agent: kubernetes
    branches:
    - release-1.11
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.11
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--timeout=60"
        - "--" # end bootstrap args, scenario args below
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        - "--gcs=gs://kubernetes-release-dev/ci"
        - "--version-suffix=-bazel"
        - "--publish-version=gs://kubernetes-release-dev/ci/latest-bazel-1.11.txt"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: ci-kubernetes-bazel-build-1-9
    agent: kubernetes
    branches:
    - release-1.9
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.8.1
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--timeout=60"
        - "--" # end bootstrap args, scenario args below
        - "--build=//... -//vendor/..."
        - "--release=//build/release-tars"
        - "--gcs=gs://kubernetes-release-dev/ci"
        - "--version-suffix=-bazel"
        - "--publish-version=gs://kubernetes-release-dev/ci/latest-bazel-1.9.txt"
        # Bazel needs privileged mode in order to sandbox builds.
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"
  - name: ci-kubernetes-bazel-test-1-10
    agent: kubernetes
    branches:
    - release-1.10
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.10
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--timeout=60"
        - "--" # end bootstrap args, scenario args below
        - "--test=//... -//build/... -//vendor/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--config=unit"
        - "--test-args=--build_tag_filters=-e2e,-integration"
        - "--test-args=--test_tag_filters=-e2e,-integration"
        - "--test-args=--flaky_test_attempts=3"
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"

  - name: ci-kubernetes-bazel-test-1-11
    agent: kubernetes
    branches:
    - release-1.11
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
      preset-bazel-remote-cache-enabled: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.11
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--timeout=60"
        - "--" # end bootstrap args, scenario args below
        - "--test=//... -//build/... -//vendor/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--config=unit"
        - "--test-args=--build_tag_filters=-e2e,-integration"
        - "--test-args=--test_tag_filters=-e2e,-integration"
        - "--test-args=--flaky_test_attempts=3"
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"

  - name: ci-kubernetes-bazel-test-1-9
    agent: kubernetes
    branches:
    - release-1.9
    labels:
      preset-service-account: "true"
      preset-bazel-scratch-dir: "true"
    spec:
      containers:
      - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.8.1
        args:
        - "--job=$(JOB_NAME)"
        - "--repo=k8s.io/$(REPO_NAME)=$(PULL_REFS)"
        - "--service-account=/etc/service-account/service-account.json"
        - "--upload=gs://kubernetes-jenkins/logs"
        - "--timeout=60"
        - "--" # end bootstrap args, scenario args below
        - "--test=//... -//build/... -//vendor/..."
        - "--manual-test=//hack:verify-all"
        - "--test-args=--build_tag_filters=-e2e,-integration"
        - "--test-args=--test_tag_filters=-e2e,-integration"
        - "--test-args=--flaky_test_attempts=3"
        securityContext:
          privileged: true
        resources:
          requests:
            memory: "6Gi"

periodics:
- interval: 2h
  agent: kubernetes
  name: application-periodic-default-gke
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - "--job=$(JOB_NAME)"
      - "--repo=github.com/kubernetes-sigs/application=master"
      - "--upload=gs://kubernetes-jenkins/logs/"
      - "--timeout=150"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
        requests:
          cpu: 6
          memory: "8Gi"
    volumes:
    - name: docker-graph
      emptyDir: {}

- name: ci-benchmark-scheduler-master
  tags:
  - "perfDashPrefix: scheduler-benchmark"
  - "perfDashJobType: benchmark"
  interval: 1h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - --repo=k8s.io/kubernetes=master
      - --timeout=40
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go

- name: ci-docker-node-conformance
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - --repo=k8s.io/kubernetes=master
      - --timeout=90
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go

- name: ci-docker-node-features
  interval: 4h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - --repo=k8s.io/kubernetes=master
      - --timeout=200
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go

- name: ci-docker-node-legacy
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - --repo=k8s.io/kubernetes=master
      - --timeout=200
      - --root=/go/src
      env:
      - name: GOPATH
        value: /go

- interval: 1h
  name: ci-federation-build
  agent: kubernetes
  labels:
    preset-service-account: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180510-809cd85b5
      args:
      - --repo=k8s.io/federation=master
      - --repo=k8s.io/release
      - --root=/go/src
      - --timeout=50
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      resources:
        requests:
          cpu: 4
          memory: "8Gi"
    volumes:
    - name: docker-graph
      emptyDir: {}

- interval: 30m
  agent: kubernetes
  name: ci-federation-e2e-gce
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      volumeMounts:
      - name: var-lib-docker
        mountPath: /var/lib/docker
    volumes:
    - name: var-lib-docker
      emptyDir: {}
- interval: 30m
  agent: kubernetes
  name: ci-federation-e2e-gce-serial
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      volumeMounts:
      - name: var-lib-docker
        mountPath: /var/lib/docker
    volumes:
    - name: var-lib-docker
      emptyDir: {}
- name: ci-ingress-gce-downgrade-e2e
  agent: kubernetes
  interval: 60m
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - "--timeout=340"
      - "--bare"
- name: ci-ingress-gce-e2e
  agent: kubernetes
  interval: 60m
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - "--timeout=340"
      - "--bare"
- name: ci-ingress-gce-e2e-release-1-0
  agent: kubernetes
  interval: 480m
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - "--timeout=340"
      - "--bare"
- name: ci-ingress-gce-e2e-release-1-1
  agent: kubernetes
  interval: 240m
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - "--timeout=340"
      - "--bare"
- name: ci-ingress-gce-e2e-release-1-2
  agent: kubernetes
  interval: 240m
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - "--timeout=340"
      - "--bare"
- name: ci-ingress-gce-e2e-scale
  agent: kubernetes
  interval: 6h
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - "--timeout=340"
      - "--bare"
- name: ci-ingress-gce-upgrade-e2e
  agent: kubernetes
  interval: 60m
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - "--timeout=340"
      - "--bare"
- interval: 30m
  name: ci-kops-build
  agent: kubernetes
  labels:
    preset-service-account: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - --repo=k8s.io/kops
      - --repo=k8s.io/release
      - --root=/go/src
      - --timeout=30
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
    volumes:
    - name: docker-graph
      emptyDir: {}

- interval: 60m
  agent: kubernetes
  name: ci-kubemci-ingress-conformance
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=110
      - --bare
      image: gcr.io/k8s-testimages/e2e-kubemci:latest
      imagePullPolicy: Always


- name: ci-kubernetes-bazel-build
  interval: 5m
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
    preset-bazel-remote-cache-enabled: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=master"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--timeout=60"
      - "--" # end bootstrap args, scenario args below
      - "--build=//... -//vendor/..."
      - "--release=//build/release-tars"
      - "--gcs=gs://kubernetes-release-dev/ci"
      - "--version-suffix=-bazel"
      - "--publish-version=gs://kubernetes-release-dev/ci/latest-bazel.txt"
      env:
      # so we can use the right cache id
      # TODO(bentheelder): switch to kubernetes_execute_bazel and consider dropping this
      - name: REPO_OWNER
        value: kubernetes
      - name: REPO_NAME
        value: kubernetes
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"

# TODO(krzyzacy) Stablize per branch bazel build|test jobs
- name: ci-kubernetes-bazel-build-1-10
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
    preset-bazel-remote-cache-enabled: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.10
      args:
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.10"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--timeout=60"
      - "--" # end bootstrap args, scenario args below
      - "--build=//... -//vendor/..."
      - "--release=//build/release-tars"
      - "--gcs=gs://kubernetes-release-dev/ci"
      - "--version-suffix=-bazel"
      - "--publish-version=gs://kubernetes-release-dev/ci/latest-bazel-1.10.txt"
      env:
      # so we can use the right cache id
      # TODO(bentheelder): switch to kubernetes_execute_bazel and consider dropping this
      - name: REPO_OWNER
        value: kubernetes
      - name: REPO_NAME
        value: kubernetes
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"

# TODO(krzyzacy) Stablize per branch bazel build|test jobs
- name: ci-kubernetes-bazel-build-1-11
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
    preset-bazel-remote-cache-enabled: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.11
      args:
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.11"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--timeout=60"
      - "--" # end bootstrap args, scenario args below
      - "--build=//... -//vendor/..."
      - "--release=//build/release-tars"
      - "--gcs=gs://kubernetes-release-dev/ci"
      - "--version-suffix=-bazel"
      - "--publish-version=gs://kubernetes-release-dev/ci/latest-bazel-1.11.txt"
      env:
      # so we can use the right cache id
      # TODO(bentheelder): switch to kubernetes_execute_bazel and consider dropping this
      - name: REPO_OWNER
        value: kubernetes
      - name: REPO_NAME
        value: kubernetes
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"

- name: ci-kubernetes-bazel-build-1-8
  interval: 12h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.6.1
      args:
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.8"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--timeout=60"
      - "--"
      - "--gcs=gs://kubernetes-release-dev/ci"
      - "--version-suffix=-bazel"
      - "--publish-version=gs://kubernetes-release-dev/ci/latest-bazel-1.8.txt"
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"
- name: ci-kubernetes-bazel-build-1-9
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.8.1
      args:
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.9"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--timeout=60"
      - "--" # end bootstrap args, scenario args below
      - "--build=//... -//vendor/..."
      - "--release=//build/release-tars"
      - "--gcs=gs://kubernetes-release-dev/ci"
      - "--version-suffix=-bazel"
      - "--publish-version=gs://kubernetes-release-dev/ci/latest-bazel-1.9.txt"
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"
- interval: 5m
  name: ci-kubernetes-bazel-test
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
    preset-bazel-remote-cache-enabled: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - --repo=k8s.io/kubernetes
      - --root=/go/src
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--timeout=60"
      - "--" # end bootstrap args, scenario args below
      - "--test=//... -//build/... -//vendor/..."
      - "--manual-test=//hack:verify-all"
      - "--test-args=--config=unit"
      - "--test-args=--build_tag_filters=-e2e,-integration"
      - "--test-args=--test_tag_filters=-e2e,-integration"
      - "--test-args=--flaky_test_attempts=3"
      env:
      # TODO(bentheelder): switch to kubernetes_execute_bazel and consider dropping this
      - name: REPO_OWNER
        value: kubernetes
      - name: REPO_NAME
        value: kubernetes
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"

- name: ci-kubernetes-bazel-test-1-8
  interval: 12h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.6.1
      args:
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.8"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--timeout=60"
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"
- interval: 5m
  name: ci-kubernetes-build
  agent: kubernetes
  labels:
    preset-service-account: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180510-809cd85b5
      args:
      - --repo=k8s.io/kubernetes
      - --repo=k8s.io/release
      - --root=/go/src
      - --timeout=30
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      resources:
        requests:
          cpu: 4
          memory: "8Gi"
    volumes:
    - name: docker-graph
      emptyDir: {}

- interval: 1h
  name: ci-kubernetes-build-beta
  agent: kubernetes
  labels:
    preset-service-account: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180510-809cd85b5
      args:
      - --repo=k8s.io/kubernetes=release-1.11
      - --repo=k8s.io/release
      - --root=/go/src
      - --timeout=180
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      resources:
        requests:
          cpu: 4
          memory: "8Gi"
    volumes:
    - name: docker-graph
      emptyDir: {}

- interval: 2h
  name: ci-kubernetes-build-debian-unstable
  agent: kubernetes
  labels:
    preset-service-account: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180510-809cd85b5
      args:
      - --repo=k8s.io/release
      - --root=/go/src
      - --timeout=50
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      resources:
        requests:
          cpu: 4
          memory: "8Gi"
    volumes:
    - name: docker-graph
      emptyDir: {}

- interval: 30m
  name: ci-kubernetes-build-stable1
  agent: kubernetes
  labels:
    preset-service-account: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180510-809cd85b5
      args:
      - --repo=k8s.io/kubernetes=release-1.10
      - --repo=k8s.io/release
      - --root=/go/src
      - --timeout=180
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      resources:
        requests:
          cpu: 4
          memory: "8Gi"
    volumes:
    - name: docker-graph
      emptyDir: {}

- interval: 1h
  name: ci-kubernetes-build-stable2
  agent: kubernetes
  labels:
    preset-service-account: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180510-809cd85b5
      args:
      - --repo=k8s.io/kubernetes=release-1.9
      - --repo=k8s.io/release
      - --root=/go/src
      - --timeout=180
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      resources:
        requests:
          cpu: 4
          memory: "8Gi"
    volumes:
    - name: docker-graph
      emptyDir: {}

- interval: 2h
  name: ci-kubernetes-build-stable3
  agent: kubernetes
  labels:
    preset-service-account: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180510-809cd85b5
      args:
      - --repo=k8s.io/kubernetes=release-1.8
      - --repo=k8s.io/release
      - --root=/go/src
      - --timeout=180
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      resources:
        requests:
          cpu: 4
          memory: "8Gi"
    volumes:
    - name: docker-graph
      emptyDir: {}

- interval: 1h
  name: ci-kubernetes-cross-build
  agent: kubernetes
  labels:
    preset-service-account: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180510-809cd85b5
      args:
      - --repo=k8s.io/kubernetes
      - --repo=k8s.io/release
      - --root=/go/src
      - --timeout=120
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      resources:
        requests:
          cpu: 7
          memory: "41Gi"
    volumes:
    - name: docker-graph
      emptyDir: {}

- interval: 6h
  name: ci-kubernetes-dind-conformance
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - "--job=$(JOB_NAME)"
      - "--root=/go/src"
      - "--repo=k8s.io/kubernetes=master"
      - "--repo=k8s.io/test-infra=master"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--scenario=dindind_execute"
      - "--"
      - "kubetest"
      - "--"
      - "--build=dind"
      - "--deployment=dind"
      - "--up"
      - "--test"
      - "--ginkgo-focus=\\[Conformance\\]"
      - "--down"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
        capabilities:
          add: ["SYS_ADMIN"]
      volumeMounts:
      - mountPath: /lib/modules
        name: modules
        readOnly: true
      - mountPath: /sys/fs/cgroup
        name: cgroup
      - mountPath: /docker-graph
        name: docker-storage
      resources:
        requests:
          # We can adjust this after we know the requirements.
          memory: "6Gi"
    volumes:
    - name: modules
      hostPath:
        path: /lib/modules
        type: Directory
    - name: cgroup
      hostPath:
        path: /sys/fs/cgroup
        type: Directory
    - name: docker-storage
      emptyDir: {}
- name: ci-kubernetes-e2e-autoscaling-vpa-actuation
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - "--repo=k8s.io/autoscaler=master"
      - "--root=/go/src"
      - "--timeout=80"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
    volumes:
    - name: docker-graph
      emptyDir: {}

- name: ci-kubernetes-e2e-autoscaling-vpa-admission-controller
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - "--repo=k8s.io/autoscaler=master"
      - "--root=/go/src"
      - "--timeout=80"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
    volumes:
    - name: docker-graph
      emptyDir: {}

- name: ci-kubernetes-e2e-autoscaling-vpa-full
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - "--repo=k8s.io/autoscaler=master"
      - "--root=/go/src"
      - "--timeout=80"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
    volumes:
    - name: docker-graph
      emptyDir: {}

- name: ci-kubernetes-e2e-autoscaling-vpa-recommender
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - "--repo=k8s.io/autoscaler=master"
      - "--root=/go/src"
      - "--timeout=80"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
    volumes:
    - name: docker-graph
      emptyDir: {}

- name: ci-kubernetes-e2e-autoscaling-vpa-updater
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - "--repo=k8s.io/autoscaler=master"
      - "--root=/go/src"
      - "--timeout=80"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
    volumes:
    - name: docker-graph
      emptyDir: {}

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-alpha-api
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=80
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-coredns-performance
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=80
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- name: ci-kubernetes-e2e-gce-device-plugin-gpu
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- name: ci-kubernetes-e2e-gce-device-plugin-gpu-beta
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- name: ci-kubernetes-e2e-gce-device-plugin-gpu-stable1
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- name: ci-kubernetes-e2e-gce-device-plugin-gpu-stable2
  interval: 12h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-federation-release-1-8
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=920
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gci-latest-rollback-etcd
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=110
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gpu-beta-stable1-cluster-downgrade
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=180
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gpu-master-stable1-cluster-downgrade
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=180
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- name: ci-kubernetes-e2e-gce-gpu-stable1
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gpu-stable1-beta-cluster-upgrade
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=180
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gpu-stable1-beta-master-upgrade
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=180
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gpu-stable1-master-cluster-upgrade
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=180
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gpu-stable1-master-master-upgrade
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=180
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- name: ci-kubernetes-e2e-gce-gpu-stable2
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gpu-stable2-stable1-cluster-upgrade
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=180
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-gpu-stable2-stable1-master-upgrade
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=180
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-ha-master
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=240
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-influxdb
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-kubedns-performance
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=80
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- cron: '1 6 * * 2,4,6' # Run at 22:01PST on Mon,Wed,Fri (06:01 UTC Tue,Thur,Sat)
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-large-correctness
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=420
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      resources:
        requests:
          cpu: 6
          memory: "16Gi"

- cron: "0 0 31 2 *" # manual job, set to Feb.31st so it will never be triggered
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-large-manual-down
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always

- cron: "0 0 31 2 *" # manual job, set to Feb.31st so it will never be triggered
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-large-manual-up
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always

- cron: '1 13 * * 2,4,6' # Run at 5:01PST (13:01 UTC) on even days
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-large-performance
  tags:
  - "perfDashPrefix: gce-2000Nodes"
  - "perfDashJobType: performance"
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=540
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      resources:
        requests:
          cpu: 6
          memory: "16Gi"

- interval: 24h
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-min-node-permissions
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=520
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-multizone
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- name: ci-kubernetes-e2e-gce-pod-preemption
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always


- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-prometheus
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- cron: '1 22 * * 2,4,6' # Run at 14:01PST (22:01 UTC) on even days
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-scale-correctness
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=600
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      resources:
        requests:
          cpu: 6
          memory: "16Gi"

- cron: '1 8 * * 1,3,5' # Run at 00:01PST (8:01 UTC) on odd days (except sunday)
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-scale-performance
  tags:
  - "perfDashPrefix: gce-5000Nodes"
  - "perfDashJobType: performance"
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=1320
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      resources:
        requests:
          cpu: 6
          memory: "16Gi"

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-stackdriver
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gce-taint-evict
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=80
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-alpha-enabled-default
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=100
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-alpha-features
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-autoscaling
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=350
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-autoscaling-hpa
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=350
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-autoscaling-migs
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=350
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-autoscaling-migs-hpa
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=350
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 60m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-coredns
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-es-logging
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=110
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-etcd3
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-flaky
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-garbage
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-ingress
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=340
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
- interval: 60m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-ingress-manual-network
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-ip-alias
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 60m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-ipvs
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-proto
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-reboot
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-scalability
  tags:
  - "perfDashPrefix: gce-100Nodes"
  - "perfDashJobType: performance"
  - "perfDashBuildsCount: 500"
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- cron: "0 */6 * * *" # every six hours
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-scalability-beta
  tags:
  - "perfDashPrefix: gce-100Nodes-beta"
  - "perfDashJobType: performance"
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- cron: "0 0/6 * * *" # every six hours, disjoint with ci-kubernetes-e2e-gci-gce-scalability-stable2
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-scalability-stable1
  tags:
  - "perfDashPrefix: gce-100Nodes-stable1"
  - "perfDashJobType: performance"
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- cron: "0 3-21/6 * * *" # every six hours, disjoint with ci-kubernetes-e2e-gci-gce-scalability-stable1
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-scalability-stable2
  tags:
  - "perfDashPrefix: gce-100Nodes-stable2"
  - "perfDashJobType: performance"
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-sd-logging
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=1340
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-serial
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=520
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-slow
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gce-statefulset
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=110
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-alpha-features
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-autoscaling
  labels:
    preset-gke-alpha-service: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 4h
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-autoscaling-gpu-k80
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 4h
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-autoscaling-gpu-p100
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 4h
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-autoscaling-gpu-v100
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-autoscaling-hpa
  labels:
    preset-gke-alpha-service: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=440
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-autoscaling-regional
  labels:
    preset-gke-alpha-service: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=440
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-flaky
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-ingress
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=320
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-multizone
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-prod
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=620
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-prod-parallel
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=100
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-prod-smoke
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=100
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-reboot
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-serial
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=520
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-slow
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gci-gke-updown
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=50
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- name: ci-kubernetes-e2e-gke-device-plugin-gpu
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- name: ci-kubernetes-e2e-gke-device-plugin-gpu-beta
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- name: ci-kubernetes-e2e-gke-device-plugin-gpu-monitoring
  interval: 3h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- name: ci-kubernetes-e2e-gke-device-plugin-gpu-p100
  interval: 12h #expensive test
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- name: ci-kubernetes-e2e-gke-device-plugin-gpu-p100-beta
  interval: 12h #expensive test
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- name: ci-kubernetes-e2e-gke-device-plugin-gpu-p100-stable1
  interval: 12h #expensive test
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- name: ci-kubernetes-e2e-gke-device-plugin-gpu-p100-stable2
  interval: 12h #expensive test
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- name: ci-kubernetes-e2e-gke-device-plugin-gpu-stable1
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- name: ci-kubernetes-e2e-gke-device-plugin-gpu-stable2
  interval: 12h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- name: ci-kubernetes-e2e-gke-device-plugin-gpu-ubuntu
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=300
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-gci-ci-master
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- cron: "0 0 31 2 *" # manual job, set to Feb.31st so it will never be triggered
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-large-correctness
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=480
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      resources:
        requests:
          cpu: 6
          memory: "16Gi"

- cron: "0 0 31 2 *" # manual job, set to Feb.31st so it will never be triggered
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-large-deploy
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=1220
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always

- cron: '1 8 * * 0' # Run at 00:01PST (8:01 UTC) on sunday
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-large-performance
  tags:
  - "perfDashPrefix: gke-2000Nodes"
  - "perfDashJobType: performance"
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=600
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      resources:
        requests:
          cpu: 6
          memory: "16Gi"

- cron: '1 8 * * 0' # Run at 00:01PST (8:01 UTC) on sunday
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-large-performance-regional
  tags:
  - "perfDashPrefix: gke-2000Nodes-regional"
  - "perfDashJobType: performance"
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=600
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      resources:
        requests:
          cpu: 6
          memory: "16Gi"

- cron: "0 0 31 2 *" # manual job, set to Feb.31st so it will never be triggered
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-large-teardown
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=200
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-prod
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=820
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-prod-parallel
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=100
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-prod-smoke
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=100
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-regional
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-regional-serial
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=520
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-regional-slow
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=170
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- cron: '1 18 * * 0' # Run at 10:01PST (18:01 UTC) on sunday
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-scale-correctness
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=240
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      resources:
        requests:
          cpu: 6
          memory: "16Gi"

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-sd-logging-gci-beta
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=1400
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-sd-logging-gci-latest
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=1400
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-sd-logging-gci-stable1
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=1400
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-sd-logging-ubuntu-beta
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=1400
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-sd-logging-ubuntu-latest
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=1400
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-sd-logging-ubuntu-stable1
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=1400
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-stackdriver
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=70
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-gke-updown
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=50
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-beta
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-channelalpha
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-ena-nvme
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-ha-uswest2
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always

- interval: 4h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-imagecentos7
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always

- interval: 4h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-imageubuntu1604
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-networking-kopeio-vxlan
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-newrunner
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always

- interval: 2h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-stable1
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 4h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-stable2
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 6h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-stable3
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-updown
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  spec:
    containers:
    - args:
      - --timeout=50
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 24h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-aws-weave
  labels:
    preset-service-account: "true"
    preset-aws-ssh: "true"
    preset-aws-credential: "true"
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-gce
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 1h
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-gce-channelalpha
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 30m
  agent: kubernetes
  name: ci-kubernetes-e2e-kops-gce-ha
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=140
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 2h
  name: ci-kubernetes-e2e-kubeadm-gce
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180725-3b7f33973
      args:
      - "--repo=k8s.io/kubernetes=master"
      - "--timeout=320"
      - "--upload=gs://kubernetes-jenkins/logs"

- name: ci-kubernetes-e2e-kubeadm-gce-1-10
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180725-3b7f33973
      args:
      - "--repo=k8s.io/kubernetes=release-1.10"
      - "--timeout=320"
      - "--upload=gs://kubernetes-jenkins/logs"

# TODO(bentheelder): switch ci-kubernetes-bazel-build to 100% periodic,
# like the other build job once we don't have run_after_success
- name: ci-kubernetes-e2e-kubeadm-gce-1-10-on-1-11
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180725-3b7f33973
      args:
      - "--repo=k8s.io/kubernetes=release-1.11"
      - "--timeout=320"
      - "--upload=gs://kubernetes-jenkins/logs"

- name: ci-kubernetes-e2e-kubeadm-gce-1-11
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180725-3b7f33973
      args:
      - "--repo=k8s.io/kubernetes=release-1.11"
      - "--timeout=320"
      - "--upload=gs://kubernetes-jenkins/logs"

- name: ci-kubernetes-e2e-kubeadm-gce-1-8
  interval: 12h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
    preset-bazel-scratch-dir: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180725-3b7f33973
      args:
      - "--repo=k8s.io/kubernetes=release-1.8"
      - "--timeout=320"
      - "--upload=gs://kubernetes-jenkins/logs"

- name: ci-kubernetes-e2e-kubeadm-gce-1-8-on-1-9
  interval: 12h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180725-3b7f33973
      args:
      - "--repo=k8s.io/kubernetes=release-1.9"
      - "--timeout=320"
      - "--upload=gs://kubernetes-jenkins/logs"

- name: ci-kubernetes-e2e-kubeadm-gce-1-9
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180725-3b7f33973
      args:
      - "--repo=k8s.io/kubernetes=release-1.9"
      - "--timeout=320"
      - "--upload=gs://kubernetes-jenkins/logs"

- name: ci-kubernetes-e2e-kubeadm-gce-1-9-on-1-10
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180725-3b7f33973
      args:
      - "--repo=k8s.io/kubernetes=release-1.10"
      - "--timeout=320"
      - "--upload=gs://kubernetes-jenkins/logs"

- name: ci-kubernetes-e2e-kubeadm-gce-cni-flannel
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180725-3b7f33973
      args:
      - "--repo=k8s.io/kubernetes=master"
      - "--timeout=320"
      - "--upload=gs://kubernetes-jenkins/logs"
- name: ci-kubernetes-e2e-kubeadm-gce-dns-coredns
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180725-3b7f33973
      args:
      - "--repo=k8s.io/kubernetes=master"
      - "--timeout=320"
      - "--upload=gs://kubernetes-jenkins/logs"

- name: ci-kubernetes-e2e-kubeadm-gce-ipvs
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180725-3b7f33973
      args:
      - "--repo=k8s.io/kubernetes=master"
      - "--timeout=320"
      - "--upload=gs://kubernetes-jenkins/logs"
- name: ci-kubernetes-e2e-kubeadm-gce-selfhosting
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180725-3b7f33973
      args:
      - "--repo=k8s.io/kubernetes=master"
      - "--timeout=320"
      - "--upload=gs://kubernetes-jenkins/logs"
- name: ci-kubernetes-e2e-kubeadm-gce-stable-on-master
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180725-3b7f33973
      args:
      - "--repo=k8s.io/kubernetes=master"
      - "--timeout=320"
      - "--upload=gs://kubernetes-jenkins/logs"

- name: ci-kubernetes-e2e-kubeadm-gce-upgrade-1-10-1-11
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180725-3b7f33973
      args:
      - "--repo=k8s.io/kubernetes=release-1.11"
      - "--timeout=320"
      - "--upload=gs://kubernetes-jenkins/logs"

- name: ci-kubernetes-e2e-kubeadm-gce-upgrade-1-8-1-9
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180725-3b7f33973
      args:
      - "--repo=k8s.io/kubernetes=release-1.9"
      - "--timeout=320"
      - "--upload=gs://kubernetes-jenkins/logs"

- name: ci-kubernetes-e2e-kubeadm-gce-upgrade-1-9-1-10
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180725-3b7f33973
      args:
      - "--repo=k8s.io/kubernetes=release-1.10"
      - "--timeout=320"
      - "--upload=gs://kubernetes-jenkins/logs"

- name: ci-kubernetes-e2e-kubeadm-gce-upgrade-stable-master
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/e2e-kubeadm:v20180725-3b7f33973
      args:
      - "--repo=k8s.io/kubernetes=master"
      - "--timeout=320"
      - "--upload=gs://kubernetes-jenkins/logs"

- interval: 2h
  name: ci-kubernetes-federation-build-1-8
  agent: kubernetes
  labels:
    preset-service-account: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180510-809cd85b5
      args:
      - --repo=k8s.io/kubernetes=release-1.8
      - --repo=k8s.io/release
      - --root=/go/src
      - --timeout=50
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      resources:
        requests:
          cpu: 4
          memory: "8Gi"
    volumes:
    - name: docker-graph
      emptyDir: {}

- interval: 6h
  agent: kubernetes
  name: ci-kubernetes-gce-conformance
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=220
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
- interval: 6h
  agent: kubernetes
  name: ci-kubernetes-gce-conformance-latest-1-10
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=220
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
- interval: 6h
  agent: kubernetes
  name: ci-kubernetes-gce-conformance-latest-1-11
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=220
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
- interval: 6h
  agent: kubernetes
  name: ci-kubernetes-gce-conformance-latest-1-8
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=220
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
- interval: 6h
  agent: kubernetes
  name: ci-kubernetes-gce-conformance-latest-1-9
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=220
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 6h
  agent: kubernetes
  name: ci-kubernetes-gce-conformance-stable-1-10
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=220
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
- interval: 6h
  agent: kubernetes
  name: ci-kubernetes-gce-conformance-stable-1-8
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=220
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e@sha256:773f00d30eca8fc577729f65102aed86febca82a7ce52fbfe6d38ce6a5d63ba0
- interval: 6h
  agent: kubernetes
  name: ci-kubernetes-gce-conformance-stable-1-9
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=220
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
- interval: 2h
  name: ci-kubernetes-integration-beta
  agent: kubernetes
  labels:
    preset-service-account: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180510-809cd85b5
      args:
      - "--repo=k8s.io/kubernetes=release-1.11"
      - "--timeout=100"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      resources:
        requests:
          cpu: 4
    volumes:
    - name: docker-graph
      emptyDir: {}

- interval: 1h
  name: ci-kubernetes-integration-master
  agent: kubernetes
  labels:
    preset-service-account: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180510-809cd85b5
      args:
      - "--repo=k8s.io/kubernetes"
      - "--timeout=100"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      resources:
        requests:
          cpu: 4
    volumes:
    - name: docker-graph
      emptyDir: {}

- interval: 2h
  name: ci-kubernetes-integration-stable1
  agent: kubernetes
  labels:
    preset-service-account: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180510-809cd85b5
      args:
      - "--repo=k8s.io/kubernetes=release-1.10"
      - "--timeout=100"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      resources:
        requests:
          cpu: 4
    volumes:
    - name: docker-graph
      emptyDir: {}

- interval: 6h
  name: ci-kubernetes-integration-stable2
  agent: kubernetes
  labels:
    preset-service-account: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180510-809cd85b5
      args:
      - "--repo=k8s.io/kubernetes=release-1.9"
      - "--timeout=100"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      resources:
        requests:
          cpu: 4
    volumes:
    - name: docker-graph
      emptyDir: {}

- interval: 24h
  name: ci-kubernetes-integration-stable3
  agent: kubernetes
  labels:
    preset-service-account: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180510-809cd85b5
      args:
      - "--repo=k8s.io/kubernetes=release-1.8"
      - "--timeout=100"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      resources:
        requests:
          cpu: 4
    volumes:
    - name: docker-graph
      emptyDir: {}

- name: ci-kubernetes-kubemark-100-gce
  tags:
  - "perfDashPrefix: kubemark-100Nodes"
  - "perfDashJobType: performance"
  interval: 3h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - --bare
      - --timeout=260
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
    volumes:
    - name: docker-graph
      emptyDir: {}

- name: ci-kubernetes-kubemark-5-gce-last-release
  interval: 30m
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - --bare
      - --timeout=80
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
    volumes:
    - name: docker-graph
      emptyDir: {}

- name: ci-kubernetes-kubemark-500-gce
  tags:
  - "perfDashPrefix: kubemark-500Nodes"
  - "perfDashJobType: performance"
  interval: 1h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - --bare
      - --timeout=140
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      # docker-in-docker needs privilged mode
      securityContext:
        privileged: true
    volumes:
    - name: docker-graph
      emptyDir: {}

- name: ci-kubernetes-kubemark-gce-scale
  tags:
  - "perfDashPrefix: kubemark-5000Nodes"
  - "perfDashJobType: performance"
  interval: 12h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - --bare
      - --timeout=1100
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      # docker-in-docker needs privilged mode
      securityContext:
        privileged: true
    volumes:
    - name: docker-graph
      emptyDir: {}

- name: ci-kubernetes-kubemark-high-density-100-gce
  tags:
  - "perfDashPrefix: kubemark-100Nodes-highDensity"
  - "perfDashJobType: performance"
  interval: 24h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - --bare
      - --timeout=300
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
    volumes:
    - name: docker-graph
      emptyDir: {}

- name: ci-kubernetes-local-e2e
  agent: kubernetes
  interval: 60m
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - "--timeout=140"
      - "--bare"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
    volumes:
    - name: docker-graph
      emptyDir: {}

- name: ci-kubernetes-local-e2e-containerized
  agent: kubernetes
  interval: 60m
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - "--timeout=140"
      - "--bare"
      env:
      - name: DOCKERIZE_KUBELET
        value: "true"
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
    volumes:
    - name: docker-graph
      emptyDir: {}

- interval: 6h
  name: ci-kubernetes-multicluster-ingress-test
  agent: kubernetes
  labels:
    preset-service-account: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - --repo=github.com/GoogleCloudPlatform/k8s-multicluster-ingress=master
      - --root=/go/src
      - --timeout=50
      - --service-account=/etc/service-account/service-account.json
      - --upload=gs://kubernetes-jenkins/logs
      volumeMounts:
      - name: coveralls
        mountPath: /etc/coveralls-token
        readOnly: true
    volumes:
    - name: coveralls
      secret:
        secretName: k8s-multicluster-ingress-coveralls-token

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-soak-gce-gci
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=1220
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-soak-gci-gce-beta
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=1220
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-soak-gci-gce-stable1
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=1220
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-soak-gci-gce-stable2
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=820
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-soak-gci-gce-stable3
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=820
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 12h
  agent: kubernetes
  name: ci-kubernetes-soak-gke-gci
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=820
      - --bare
      image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master

- interval: 2h
  name: ci-kubernetes-verify-beta
  agent: kubernetes
  labels:
    preset-service-account: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180510-809cd85b5
      args:
      - "--repo=k8s.io/kubernetes=release-1.11"
      - "--timeout=75"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      resources:
        requests:
          cpu: 4
    volumes:
    - name: docker-graph
      emptyDir: {}

- interval: 1h
  name: ci-kubernetes-verify-master
  agent: kubernetes
  labels:
    preset-service-account: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180510-809cd85b5
      args:
      - "--repo=k8s.io/kubernetes"
      - "--timeout=75"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      resources:
        requests:
          cpu: 4
    volumes:
    - name: docker-graph
      emptyDir: {}

- interval: 2h
  name: ci-kubernetes-verify-stable1
  agent: kubernetes
  labels:
    preset-service-account: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180510-809cd85b5
      args:
      - "--repo=k8s.io/kubernetes=release-1.10"
      - "--timeout=75"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      resources:
        requests:
          cpu: 4
    volumes:
    - name: docker-graph
      emptyDir: {}

- interval: 6h
  name: ci-kubernetes-verify-stable2
  agent: kubernetes
  labels:
    preset-service-account: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180510-809cd85b5
      args:
      - "--repo=k8s.io/kubernetes=release-1.9"
      - "--timeout=75"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      resources:
        requests:
          cpu: 4
    volumes:
    - name: docker-graph
      emptyDir: {}

- interval: 24h
  name: ci-kubernetes-verify-stable3
  agent: kubernetes
  labels:
    preset-service-account: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bootstrap:v20180510-809cd85b5
      args:
      - "--repo=k8s.io/kubernetes=release-1.8"
      - "--timeout=75"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      resources:
        requests:
          cpu: 4
    volumes:
    - name: docker-graph
      emptyDir: {}

- interval: 2h
  agent: kubernetes
  name: ci-kustomize-periodic-default-gke
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - "--job=$(JOB_NAME)"
      - "--root=/go/src"
      - "--repo=github.com/kubernetes-sigs/kustomize"
      - "--upload=gs://kubernetes-jenkins/logs/"
      - "--timeout=150"

- name: ci-perf-tests-e2e-gce-clusterloader
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - "--repo=k8s.io/kubernetes=master"
      - "--repo=k8s.io/perf-tests=master"
      - "--root=/go/src"
      - "--timeout=80"

- name: ci-perf-tests-kubemark-100-benchmark
  interval: 2h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - "--repo=k8s.io/perf-tests=master"
      - "--root=/go/src"
      - "--timeout=10"

- interval: 2h
  agent: kubernetes
  name: istio-periodic-e2e-gke-addon
  labels:
    preset-istio-service: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - --repo=github.com/ostromart/istio=k8s-prow-test
      - --timeout=90
      - --root=/go/src

- name: periodic-kubernetes-bazel-build-1-10
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
    preset-bazel-remote-cache-enabled: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.10
      args:
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.10"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--" # end bootstrap args, scenario args below
      - "--build=//... -//vendor/..."
      - "--release=//build/release-tars"
      env:
      # TODO(bentheelder): switch to kubernetes_execute_bazel and consider dropping this
      - name: REPO_OWNER
        value: kubernetes
      - name: REPO_NAME
        value: kubernetes
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"

- name: periodic-kubernetes-bazel-build-1-11
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
    preset-bazel-remote-cache-enabled: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.11
      args:
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.11"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--" # end bootstrap args, scenario args below
      - "--build=//... -//vendor/..."
      - "--release=//build/release-tars"
      env:
      # TODO(bentheelder): switch to kubernetes_execute_bazel and consider dropping this
      - name: REPO_OWNER
        value: kubernetes
      - name: REPO_NAME
        value: kubernetes
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"

- name: periodic-kubernetes-bazel-build-1-8
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.6.1
      args:
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.8"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"

- name: periodic-kubernetes-bazel-build-1-9
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.8.1
      args:
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.9"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--" # end bootstrap args, scenario args below
      - "--build=//... -//vendor/..."
      - "--release=//build/release-tars"
      # Bazel needs privileged mode in order to sandbox builds.
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"
- name: periodic-kubernetes-bazel-test-1-10
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
    preset-bazel-remote-cache-enabled: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.10
      args:
      - --root=/go/src
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.10"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--" # end bootstrap args, scenario args below
      - "--test=//... -//build/... -//vendor/..."
      - "--manual-test=//hack:verify-all"
      - "--test-args=--config=unit"
      - "--test-args=--build_tag_filters=-e2e,-integration"
      - "--test-args=--test_tag_filters=-e2e,-integration"
      - "--test-args=--flaky_test_attempts=3"
      env:
      # TODO(bentheelder): switch to kubernetes_execute_bazel and consider dropping this
      - name: REPO_OWNER
        value: kubernetes
      - name: REPO_NAME
        value: kubernetes
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"

- name: periodic-kubernetes-bazel-test-1-11
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
    preset-bazel-remote-cache-enabled: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-1.11
      args:
      - --root=/go/src
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.11"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--" # end bootstrap args, scenario args below
      - "--test=//... -//build/... -//vendor/..."
      - "--manual-test=//hack:verify-all"
      - "--test-args=--config=unit"
      - "--test-args=--build_tag_filters=-e2e,-integration"
      - "--test-args=--test_tag_filters=-e2e,-integration"
      - "--test-args=--flaky_test_attempts=3"
      env:
      # TODO(bentheelder): switch to kubernetes_execute_bazel and consider dropping this
      - name: REPO_OWNER
        value: kubernetes
      - name: REPO_NAME
        value: kubernetes
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"

- name: periodic-kubernetes-bazel-test-1-8
  interval: 12h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.6.1
      args:
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.8"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"

- name: periodic-kubernetes-bazel-test-1-9
  interval: 6h
  agent: kubernetes
  labels:
    preset-service-account: "true"
    preset-bazel-scratch-dir: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/bazelbuild:v20180201-0184a54dc-0.8.1
      args:
      - "--job=$(JOB_NAME)"
      - "--repo=k8s.io/kubernetes=release-1.9"
      - "--service-account=/etc/service-account/service-account.json"
      - "--upload=gs://kubernetes-jenkins/logs"
      - "--" # end bootstrap args, scenario args below
      - "--test=//... -//build/... -//vendor/..."
      - "--manual-test=//hack:verify-all"
      - "--test-args=--build_tag_filters=-e2e,-integration"
      - "--test-args=--test_tag_filters=-e2e,-integration"
      - "--test-args=--flaky_test_attempts=3"
      securityContext:
        privileged: true
      resources:
        requests:
          memory: "6Gi"

- interval: 24h
  agent: kubernetes
  name: periodic-kubernetes-e2e-packages-pushed
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - args:
      - --timeout=60
      - --repo=k8s.io/kubeadm=master
      image: gcr.io/k8s-testimages/kubekins-e2e:latest-master
      imagePullPolicy: Always

- interval: 2h
  agent: kubernetes
  name: spark-periodic-default-gke
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - "--job=$(JOB_NAME)"
      - "--repo=github.com/apache-spark-on-k8s/spark-integration=master"
      - "--upload=gs://kubernetes-jenkins/logs/"
      - "--timeout=150"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
        requests:
          cpu: 6
          memory: "8Gi"
    volumes:
    - name: docker-graph
      emptyDir: {}

- interval: 2h
  agent: kubernetes
  name: spark-periodic-latest-gke
  labels:
    preset-service-account: "true"
    preset-k8s-ssh: "true"
  spec:
    containers:
    - image: gcr.io/k8s-testimages/kubekins-e2e:v20180725-795cceb4c-master
      args:
      - "--job=$(JOB_NAME)"
      - "--repo=github.com/apache-spark-on-k8s/spark-integration=master"
      - "--upload=gs://kubernetes-jenkins/logs/"
      - "--timeout=150"
      env:
      - name: DOCKER_IN_DOCKER_ENABLED
        value: "true"
      # docker-in-docker needs privileged mode
      securityContext:
        privileged: true
      volumeMounts:
      - name: docker-graph
        mountPath: /docker-graph
      resources:
        requests:
          cpu: 6
          memory: "8Gi"
    volumes:
    - name: docker-graph
      emptyDir: {}
