plank:
  job_url_template: 'https://k8s-gubernator.appspot.com/build/kubernetes-jenkins/{{if eq .Spec.Type "presubmit"}}pr-logs/pull{{else if eq .Spec.Type "batch"}}pr-logs/pull{{else}}logs{{end}}{{if .Spec.Refs}}{{if ne .Spec.Refs.Org ""}}{{if ne .Spec.Refs.Org "kubernetes"}}/{{if and (eq .Spec.Refs.Org "kubernetes-sigs") (ne .Spec.Refs.Repo "poseidon")}}sigs.k8s.io{{else}}{{.Spec.Refs.Org}}{{end}}_{{.Spec.Refs.Repo}}{{else if ne .Spec.Refs.Repo "kubernetes"}}/{{.Spec.Refs.Repo}}{{end}}{{end}}{{end}}{{if eq .Spec.Type "presubmit"}}/{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}{{else if eq .Spec.Type "batch"}}/batch{{end}}/{{.Spec.Job}}/{{.Status.BuildID}}/'
  report_template: '[Full PR test history](https://k8s-gubernator.appspot.com/pr/{{if eq .Spec.Refs.Org "kubernetes"}}{{if eq .Spec.Refs.Repo "kubernetes"}}{{else}}{{.Spec.Refs.Repo}}/{{end}}{{else}}{{.Spec.Refs.Org}}_{{.Spec.Refs.Repo}}/{{end}}{{with index .Spec.Refs.Pulls 0}}{{.Number}}{{end}}). [Your PR dashboard](https://k8s-gubernator.appspot.com/pr/{{with index .Spec.Refs.Pulls 0}}{{.Author}}{{end}}). Please help us cut down on flakes by [linking to](https://git.k8s.io/community/contributors/devel/flaky-tests.md#filing-issues-for-flaky-tests) an [open issue](https://github.com/{{.Spec.Refs.Org}}/{{.Spec.Refs.Repo}}/issues?q=is:issue+is:open) when you hit one in your PR.'
  pod_pending_timeout: 60m
  default_decoration_config:
    timeout: 7200000000000 # 2h
    grace_period: 15000000000 # 15s
    utility_images:
      clonerefs: "registry.svc.ci.openshift.org/ci/clonerefs:latest"
      initupload: "registry.svc.ci.openshift.org/ci/initupload:latest"
      entrypoint: "registry.svc.ci.openshift.org/ci/entrypoint:latest"
      sidecar: "registry.svc.ci.openshift.org/ci/sidecar:latest"
    gcs_configuration:
      bucket: "kubernetes-jenkins"
      path_strategy: "legacy"
      default_org: "kubernetes"
      default_repo: "kubernetes"
    gcs_credentials_secret: "service-account"

sinker:
  resync_period: 1m
  max_prowjob_age: 48h
  max_pod_age: 30m

deck:
  spyglass:
    size_limit: 500000000 # 500MB
    viewers:
      "started.json|finished.json":
      - "metadata-viewer"
      "build-log.txt":
      - "build-log-viewer"
      "artifacts/junit.*\\.xml":
      - "junit-viewer"
  tide_update_period: 1s
  hidden_repos:
  - kubernetes-security

prowjob_namespace: default
pod_namespace: test-pods
log_level: info

branch-protection:
  allow_disabled_policies: true  # TODO(fejta): remove, needed by k/website
  orgs:
    kubernetes:
      protect: true
      required_status_checks:
        contexts:
        - cla/linuxfoundation
      repos:
        api:
          restrictions:
            users: []
            teams:
            - stage-bots
        apiextensions-apiserver:
          restrictions:
            users: []
            teams:
            - stage-bots
        apimachinery:
          restrictions:
            users: []
            teams:
            - stage-bots
        apiserver:
          restrictions:
            users: []
            teams:
            - stage-bots
        client-go:
          restrictions:
            users: []
            teams:
            - stage-bots
        code-generator:
          restrictions:
            users: []
            teams:
            - stage-bots
        dashboard:
          required_pull_request_reviews:
            required_approving_review_count: 1
        dns:
          required_status_checks:
            strict: true
            contexts:
            - continuous-integration/travis-ci
          required_pull_request_reviews:
            required_approving_review_count: 1
        git-sync:
          enforce_admins: true
          required_status_checks:
            strict: true
          restrictions: # only allow admins
            users: []
            teams: []
        kompose:
          required_status_checks:
            contexts:
            - continuous-integration/travis-ci
          required_pull_request_reviews:
            required_approving_review_count: 1
        kubectl:
          required_status_checks:
            contexts:
            - continuous-integration/travis-ci
        kubernetes:
          restrictions: # only allow admins
            users: []
            teams: []
        kube-aggregator:
          restrictions:
            users: []
            teams:
            - stage-bots
        metrics:
          restrictions:
            users: []
            teams:
            - stage-bots
        org:
          restrictions: # only allow admins
            users: []
            teams: []
        repo-infra:
          required_status_checks:
            contexts:
            - continuous-integration/travis-ci
        sample-apiserver:
          restrictions:
            users: []
            teams:
            - stage-bots
        sample-controller:
          restrictions:
            users: []
            teams:
            - stage-bots
        utils:
          required_status_checks:
            contexts:
            - continuous-integration/travis-ci
        website:
          protect: false # TODO(fejta): protect all branches soon
          required_status_checks:
            contexts:
            - continuous-integration/travis-ci
          branches:
            master:
              protect: true
            release-1.4:
              protect: true
            release-1.5:
              protect: true
            release-1.6:
              protect: true
            release-1.7:
              protect: true
            release-1.8:
              protect: true
            release-1.9:
              protect: true
    kubernetes-client:
      protect: true
      required_status_checks:
        contexts:
        - cla/linuxfoundation
      repos:
        python:
          required_status_checks:
            contexts:
            - continuous-integration/travis-ci
        python-base:
          required_status_checks:
            contexts:
            - continuous-integration/travis-ci
    kubernetes-csi:
      protect: true
      required_status_checks:
        contexts:
        - cla/linuxfoundation
      repos:
        csi-test:
          required_status_checks:
            contexts:
            - continuous-integration/travis-ci
        drivers:
          required_status_checks:
            contexts:
            - continuous-integration/travis-ci
        external-attacher:
          required_status_checks:
            contexts:
            - continuous-integration/travis-ci
        external-provisioner:
          required_status_checks:
            contexts:
            - continuous-integration/travis-ci
        external-snapshotter:
          required_status_checks:
            contexts:
            - continuous-integration/travis-ci
        livenessprobe:
          required_status_checks:
            contexts:
            - continuous-integration/travis-ci
    kubernetes-incubator:
      protect: true
      required_status_checks:
        contexts:
        - cla/linuxfoundation
      repos:
        bootkube:
          required_status_checks:
            contexts:
            - continuous-integration/travis-ci
        kube-arbitrator:
          required_status_checks:
            contexts:
            - continuous-integration/travis-ci
        node-feature-discovery:
          required_status_checks:
            contexts:
            - continuous-integration/travis-ci
    kubernetes-sigs:
      protect: true
      required_status_checks:
        contexts:
        - cla/linuxfoundation

tide:
  queries:
  - orgs:
    - kubeflow
    labels:
    - lgtm
    - approved
    missingLabels:
    - do-not-merge
    - do-not-merge/hold
    - do-not-merge/invalid-owners-file
    - do-not-merge/work-in-progress
    - needs-ok-to-test
    - needs-rebase
  - repos:
    - helm/charts
    labels:
    - lgtm
    - approved
    - "Contribution Allowed"
    missingLabels:
    - do-not-merge
    - do-not-merge/blocked-paths
    - do-not-merge/cherry-pick-not-approved
    - do-not-merge/hold
    - do-not-merge/invalid-owners-file
    - do-not-merge/release-note-label-needed
    - do-not-merge/work-in-progress
    - needs-ok-to-test
    - needs-rebase
  - repos:
    - client-go/unofficial-docs
    - kubernetes-client/csharp
    - kubernetes-client/gen
    - kubernetes-client/go
    - kubernetes-client/go-base
    - kubernetes-client/haskell
    - kubernetes-client/java
    - kubernetes-client/javascript
    - kubernetes-client/python
    - kubernetes-client/python-base
    - kubernetes-client/ruby
    - kubernetes-csi/csi-test
    - kubernetes-csi/docs
    - kubernetes-csi/driver-registrar
    - kubernetes-csi/drivers
    - kubernetes-csi/external-attacher
    - kubernetes-csi/external-provisioner
    - kubernetes-csi/external-snapshotter
    - kubernetes-csi/kubernetes-csi.github.io
    - kubernetes-csi/livenessprobe
    - kubernetes-incubator/ip-masq-agent
    - kubernetes-incubator/kubespray
    - kubernetes-incubator/service-catalog
    - kubernetes-sigs/application
    - kubernetes-sigs/architecture-tracking
    - kubernetes-sigs/aws-encryption-provider
    - kubernetes-sigs/cluster-api
    - kubernetes-sigs/cluster-api-provider-aws
    - kubernetes-sigs/cluster-api-provider-gcp
    - kubernetes-sigs/cluster-api-provider-openstack
    - kubernetes-sigs/cluster-api-provider-vsphere
    - kubernetes-sigs/contributor-playground
    - kubernetes-sigs/contributor-site
    - kubernetes-sigs/controller-runtime
    - kubernetes-sigs/controller-tools
    - kubernetes-sigs/federation-v2
    - kubernetes-sigs/gcp-compute-persistent-disk-csi-driver
    - kubernetes-sigs/gcp-filestore-csi-driver
    - kubernetes-sigs/kubeadm-dind-cluster
    - kubernetes-sigs/kubebuilder
    - kubernetes-sigs/kustomize
    - kubernetes-sigs/poseidon
    - kubernetes-sigs/testing_frameworks
    - kubernetes/client-go
    - kubernetes/cloud-provider-aws
    - kubernetes/cloud-provider-azure
    - kubernetes/cloud-provider-gcp
    - kubernetes/cloud-provider-openstack
    - kubernetes/cloud-provider-vsphere
    - kubernetes/cluster-registry
    - kubernetes/community
    - kubernetes/contrib
    - kubernetes/dashboard
    - kubernetes/dns
    - kubernetes/examples
    - kubernetes/features
    - kubernetes/federation
    - kubernetes/gengo
    - kubernetes/heapster
    - kubernetes/ingress-gce
    - kubernetes/ingress-nginx
    - kubernetes/kops
    - kubernetes/kube-deploy
    - kubernetes/kube-openapi
    - kubernetes/kube-state-metrics
    - kubernetes/kubeadm
    - kubernetes/kubectl
    - kubernetes/kubernetes-docs-ja
    - kubernetes/kubernetes-docs-ko
    - kubernetes/kubernetes-docs-zh
    - kubernetes/kubernetes-template-project
    - kubernetes/minikube
    - kubernetes/node-problem-detector
    - kubernetes/org
    - kubernetes/perf-tests
    - kubernetes/publishing-bot
    - kubernetes/release
    - kubernetes/repo-infra
    - kubernetes/sig-release
    - kubernetes/steering
    - kubernetes/test-infra
    - kubernetes/utils
    - kubernetes/website
    labels:
    - lgtm
    - approved
    - "cncf-cla: yes"
    missingLabels:
    - do-not-merge
    - do-not-merge/blocked-paths
    - do-not-merge/cherry-pick-not-approved
    - do-not-merge/hold
    - do-not-merge/invalid-owners-file
    - do-not-merge/release-note-label-needed
    - do-not-merge/work-in-progress
    - needs-ok-to-test
    - needs-rebase
  merge_method:
    helm/charts: squash
    kubeflow: squash
    kubernetes-client/csharp: squash
    kubernetes-client/gen: squash
    kubernetes-incubator/service-catalog: squash
    kubernetes-sigs/cluster-api-provider-aws: squash
    kubernetes-sigs/cluster-api-provider-gcp: squash
    kubernetes-sigs/cluster-api-provider-openstack: squash
    kubernetes-sigs/cluster-api-provider-vsphere: squash
    kubernetes-sigs/cluster-api: squash
    kubernetes/dashboard: squash
    kubernetes/kube-deploy: squash
    kubernetes/kubernetes-docs-ja: squash
    kubernetes/kubernetes-docs-ko: squash
    kubernetes/website: squash
  target_url: https://prow.k8s.io/tide.html
  blocker_label: merge-blocker

push_gateway:
  endpoint: pushgateway

presets:
# credential presets
- labels:
    preset-service-account: "true"
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/service-account/service-account.json
  volumes:
  - name: service
    secret:
      secretName: service-account
  volumeMounts:
  - name: service
    mountPath: /etc/service-account
    readOnly: true
- labels:
    preset-gke-alpha-service: "true"
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/service-account/service-account.json
  volumes:
  - name: service
    secret:
      secretName: gke-alpha-service-account
  volumeMounts:
  - name: service
    mountPath: /etc/service-account
    readOnly: true
- labels:
    preset-istio-service: "true"
  env:
  - name: GOOGLE_APPLICATION_CREDENTIALS
    value: /etc/service-account/istio-service-account.json
  volumes:
  - name: service
    secret:
      secretName: istio-service-account
  volumeMounts:
  - name: service
    mountPath: /etc/service-account
    readOnly: true
- labels:
    preset-k8s-ssh: "true"
  env:
  - name: USER
    value: prow
  - name: JENKINS_GCE_SSH_PRIVATE_KEY_FILE
    value: /etc/ssh-key-secret/ssh-private
  - name: JENKINS_GCE_SSH_PUBLIC_KEY_FILE
    value: /etc/ssh-key-secret/ssh-public
  volumes:
  - name: ssh
    secret:
      defaultMode: 0400
      secretName: ssh-key-secret
  volumeMounts:
  - name: ssh
    mountPath: /etc/ssh-key-secret
    readOnly: true
- labels:
    preset-aws-ssh: "true"
  env:
  - name: USER
    value: prow
  - name: JENKINS_AWS_SSH_PRIVATE_KEY_FILE
    value: /etc/aws-ssh/aws-ssh-private
  - name: JENKINS_AWS_SSH_PUBLIC_KEY_FILE
    value: /etc/aws-ssh/aws-ssh-public
  volumes:
  - name: aws-ssh
    secret:
      defaultMode: 0400
      secretName: aws-ssh-key-secret
  volumeMounts:
  - name: aws-ssh
    mountPath: /etc/aws-ssh
    readOnly: true
- labels:
    preset-aws-credential: "true"
  env:
  - name: JENKINS_AWS_CREDENTIALS_FILE
    value: /etc/aws-cred/credentials
  volumes:
  - name: aws-cred
    secret:
      defaultMode: 0400
      secretName: aws-cred-new
  volumeMounts:
  - name: aws-cred
    mountPath: /etc/aws-cred
    readOnly: true
# storage / caching presets
- labels:
    preset-bazel-scratch-dir: "true"
  env:
  - name: TEST_TMPDIR
    value: /bazel-scratch/.cache/bazel
  volumes:
  - name: bazel-scratch
    emptyDir: {}
  volumeMounts:
  - name: bazel-scratch
    mountPath: /bazel-scratch/.cache
- labels:
    preset-bazel-remote-cache-enabled: "true"
  env:
  - name: BAZEL_REMOTE_CACHE_ENABLED
    value: "true"
# docker-in-docker (with images/bootstrap) preset
# NOTE: using this also requires using that image,
# ensuring you run your test under either the ENTRYPOINT or:
# /usr/local/bin/runner my-test-command --foo --bar
# AND setting the following on your PodSpec:
# securityContext:
#   privileged: true
- labels:
    preset-dind-enabled: "true"
  env:
  - name: DOCKER_IN_DOCKER_ENABLED
    value: "true"
  volumes:
  - name: docker-graph
    emptyDir: {}
  volumeMounts:
  - name: docker-graph
    mountPath: /docker-graph
