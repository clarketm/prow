load("@io_bazel_rules_docker//container:image.bzl", "container_image")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")

go_library(
    name = "go_default_library",
    srcs = ["main.go"],
    importpath = "k8s.io/test-infra/prow/cmd/sidecar",
    visibility = ["//visibility:private"],
    deps = [
        "//prow/logrusutil:go_default_library",
        "//prow/pod-utils/options:go_default_library",
        "//prow/sidecar:go_default_library",
        "//vendor/github.com/sirupsen/logrus:go_default_library",
    ],
)

go_binary(
    name = "sidecar",
    embed = [":go_default_library"],
    pure = "on",
    visibility = ["//visibility:public"],
)

# same as binary above, but with goarch and goos for placing in the docker image
go_binary(
    name = "sidecar-linux-amd64",
    embed = [":go_default_library"],
    goarch = "amd64",
    goos = "linux",
    pure = "on",
    visibility = ["//visibility:public"],
)

go_image(
    name = "sidecar-go_image",
    base = "@git-base//image",
    binary = ":sidecar-linux-amd64",
    visibility = ["//visibility:public"],
)

container_image(
    name = "image",
    base = ":sidecar-go_image",
    symlinks = {
        "/sidecar": "/app/prow/cmd/sidecar/sidecar-linux-amd64",
    },
    visibility = ["//visibility:public"],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
