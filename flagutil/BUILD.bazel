load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "doc.go",
        "github.go",
        "k8s_client.go",
        "kubernetes.go",
        "kubernetes_cluster_clients.go",
        "strings.go",
    ],
    importpath = "k8s.io/test-infra/prow/flagutil",
    visibility = ["//visibility:public"],
    deps = [
        "//prow/client/clientset/versioned:go_default_library",
        "//prow/client/clientset/versioned/typed/prowjobs/v1:go_default_library",
        "//prow/config/secret:go_default_library",
        "//prow/git:go_default_library",
        "//prow/github:go_default_library",
        "//prow/kube:go_default_library",
        "//vendor/github.com/sirupsen/logrus:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/sets:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/core/v1:go_default_library",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [":package-srcs"],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)

go_test(
    name = "go_default_test",
    srcs = [
        "github_test.go",
        "kubernetes_cluster_clients_test.go",
        "kubernetes_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//pkg/flagutil:go_default_library",
        "//prow/kube:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/diff:go_default_library",
        "//vendor/k8s.io/client-go/discovery:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/admissionregistration/v1alpha1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/admissionregistration/v1beta1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/apps/v1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/apps/v1beta1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/apps/v1beta2:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/authentication/v1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/authentication/v1beta1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/authorization/v1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/authorization/v1beta1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/autoscaling/v1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/autoscaling/v2beta1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/autoscaling/v2beta2:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/batch/v1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/batch/v1beta1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/batch/v2alpha1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/certificates/v1beta1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/coordination/v1beta1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/core/v1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/events/v1beta1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/extensions/v1beta1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/networking/v1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/policy/v1beta1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/rbac/v1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/rbac/v1alpha1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/rbac/v1beta1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/scheduling/v1alpha1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/scheduling/v1beta1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/settings/v1alpha1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/storage/v1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/storage/v1alpha1:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/storage/v1beta1:go_default_library",
    ],
)
